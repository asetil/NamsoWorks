/*
-- Query: SELECT * FROM osmansokuoglu.entry
LIMIT 0, 1000

-- Date: 2020-01-12 00:41
*/
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (1,1,15,'SEO için Kullanabileceginiz Hazır Meta Etiketleri','Sitenize SEO amacıyla ekleyebileceginiz temel meta etiketlerini bir şablonda topladım. İhtiyacınız olan etiketleri alıp &lt;head&gt; ve &lt;/head&gt; tagleri arasına yapıştırmanız yeterli.','<p>Sitenize SEO amacıyla ekleyebileceginiz temel meta etiketlerini bir şablonda topladım. İhtiyacınız olan etiketleri alıp &lt;head&gt; ve &lt;/head&gt; tagleri arasına yapıştırmanız yeterli.</p>\r\n<pre class=\"language-markup\"><code>&lt;title&gt;Sayfa başlığı, Maksimum 60 - 70 karaktere kadar.&lt;/title&gt;\r\n&lt;meta name=\"description\" content=\"Sayfa veya i&ccedil;erik a&ccedil;ıklaması. 155 karaktere kadar.\" /&gt;\r\n&lt;meta name=\"author\" content=\"Sayfa Sahibi\"&gt;\r\n&lt;meta name=\"keywords\" content=\"Anahtar kelimeler, mesela jobs,education,finace\" /&gt;\r\n&lt;meta name=\"Copyright\" content=\"Copyright &copy; 2017 Firma adı şeklinde girebilirsiniz.\" /&gt;\r\n\r\n&lt;!-- Twitter Card data --&gt;\r\n&lt;meta name=\"twitter:card\" content=\"summary\"&gt;\r\n&lt;meta name=\"twitter:site\" content=\"@publisher_handle\"&gt;\r\n&lt;meta name=\"twitter:title\" content=\"Sayfa Başlığı\"&gt;\r\n&lt;meta name=\"twitter:description\" content=\"Sayfa a&ccedil;ıklaması, 200 karaktere kadar\"&gt;\r\n&lt;meta name=\"twitter:creator\" content=\"sayfayı olusturan\"&gt;\r\n\r\n&lt;!-- Twitter Card g&ouml;rseli, en az 120x120 px olmalı --&gt;\r\n&lt;meta name=\"twitter:image\" content=\"http://www.example.com/image.jpg\"&gt;\r\n\r\n&lt;!-- Open Graph Data --&gt;\r\n&lt;meta property=\"og:title\" content=\"Sayfa başlığı\" /&gt;\r\n&lt;meta property=\"og:type\" content=\"I&ccedil;erik tipi. &Ouml;r: article\" /&gt;\r\n&lt;meta property=\"og:url\" content=\"http://www.example.com/\" /&gt;\r\n&lt;meta property=\"og:image\" content=\"http://example.com/image.jpg\" /&gt;\r\n&lt;meta property=\"og:description\" content=\"Sayfa a&ccedil;ıklaması\" /&gt;\r\n&lt;meta property=\"og:site_name\" content=\"Site adı\"&gt;\r\n&lt;meta property=\"og:locale\" content=\"tr_TR\"&gt;\r\n\r\n&lt;meta property=\"article:publisher\" content=\"Makale sahibi\"&gt;\r\n&lt;meta property=\"article:published_time\" content=\"2013-09-17T05:59:00+01:00\" /&gt;\r\n&lt;meta property=\"article:modified_time\" content=\"2013-09-16T19:08:47+01:00\" /&gt;\r\n&lt;meta property=\"article:section\" content=\"Makale b&ouml;l&uuml;m&uuml; / kategorisi\" /&gt;\r\n&lt;meta property=\"article:tag\" content=\"Etiketler\" /&gt;\r\n&lt;meta property=\"fb:admins\" content=\"Facebook ID\" /&gt;</code></pre>\r\n<p class=\"mt20\">Bunların dışında aşağıda &ouml;rnek kullanımı ve a&ccedil;ıklaması verilen meta etiketlerini de sitenizde kullanmak isteyebilirsiniz</p>\r\n<pre class=\"language-markup\"><code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;\r\n\r\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"&gt;\r\n\r\n&lt;meta name=\"content-language\" content=\"tr\"&gt;\r\n\r\n&lt;meta name=\"rating\" content=\"General|Mature|Adult|All\"&gt;\r\n\r\n&lt;meta name=\"robots\" content=\"index, follow\"&gt;\r\n\r\n&lt;meta http-equiv=\"Copyright\" content=\"Copyright &copy; 2007 Aware.co\"&gt;</code></pre>\r\n<table class=\"mt20 table table-bordered\">\r\n<tbody>\r\n<tr>\r\n<th>Etiket</th>\r\n<th>A&ccedil;ıklama</th>\r\n</tr>\r\n<tr>\r\n<td>meta charset=UTF-8\"</td>\r\n<td>Bu meta etiketi ile html sayfanın i&ccedil;erik tipini ve karakter setini belirtir. charset=windows-1254 ile tarayıcı Windows\'ta T&uuml;rk&ccedil;e karakter seti kullanır. charset=iso-8859-9 ile tarayıcı Windows dışı uygulamalarda T&uuml;rk&ccedil;e karakter seti kullanır.</td>\r\n</tr>\r\n<tr>\r\n<td>meta name=\"viewport\"</td>\r\n<td>Viewport tarayıcının g&ouml;r&uuml;n&uuml;r alanını belirtir. Responsive bir tasarım i&ccedil;in konuşursak sayfamızın farklı cihazlarda nasıl g&ouml;r&uuml;neceğini belirliyoruz. Mesela \"width=device-width\" ile genişlik olarak cihaz genişliğini baz al ve \"maximum-scale\" ile zoom yapılmasını engelle diyoruz.</td>\r\n</tr>\r\n<tr>\r\n<td>meta name=\"content-language\"</td>\r\n<td>Sayfada kullanılan i&ccedil;eriğin dili, T&uuml;rk&ccedil;e i&ccedil;in tr diyoruz.</td>\r\n</tr>\r\n<tr>\r\n<td>meta name=\"rating\"</td>\r\n<td>Sayfa i&ccedil;eriği kime y&ouml;nelik. General, Mature, Adult ve All değerlerini alabilir. Eger herkese y&ouml;nelikse \"All\" yapılmalıdır.</td>\r\n</tr>\r\n<tr>\r\n<td>meta name=\"robots\"</td>\r\n<td>Site indekslemesi yapan botlara izin verilip verilmediğini belirtiyoruz. <br /> index / noindex : sayfayı arşive alır / almaz<br /> follow / nofollow : sayfaya bağlı diğer sayfaları da tarayıp indeksler veya indekslemez<br /> imageindex / noimageindex : resimleri indeksle / indeksleme<br /> imageclick / noimageclick : resim linklerini indeksle / indeksleme<br /> archive / noarchive : sayfayı arşivine al veya alma (Google i&ccedil;in &ouml;zel)</td>\r\n</tr>\r\n<tr>\r\n<td>meta http-equiv=\"Copyright\"</td>\r\n<td>Sayfanın telif hakkı bilgisini belirtir.</td>\r\n</tr>\r\n</tbody>\r\n</table>','seo, meta tag, seo optimizasyonu','/res/img/entry/seo.jpg','2017-10-11 00:15:59','2017-11-19 12:22:28','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (3,1,9,'MsSQL Transaction, Commit ve Rollback Kavramı','Transaction kullandığımızda yaptığımız işlem bitene kadar diğer işlemlerin yapılmasını engelleyebiliriz. Transaction birden çok işlemin bir arada yapıldığı durumlarda eğer işlemlerden herhangi birinde sorun olursa tüm işlemleri iptal etmeyi sağlar.','<p>Transaction kullandigimizda yaptigimiz islem bitene kadar diger islemlerin yapilmasini engelleyebiliriz. Transaction birden &ccedil;ok islemin bir arada yapildigi durumlarda eger par&ccedil;ayi olusturan islemlerden herhangi birinde sorun olursa t&uuml;m islemleri iptal etmeyi saglar.</p>\r\n<p>Bildiginiz &uuml;zere SQL Server&rsquo;da default transaction t&uuml;r&uuml; <span class=\"high-light\">&ldquo;Auto Commit&rdquo;</span> dir. Yani yapilan islemler aninda kalici hale getirilir. Bu durumun avantajlari oldugu gibi dezavantajlari da vardir. Yapilan bir islem sonucunda bir hata olursa ya da bu islemi takip eden islem hata alirsa veri tabaninda verilerde uyusmazliklar meydana gelecektir.</p>\r\n<p>&Ouml;rnegin siz bir transaction a&ccedil;tiniz, sonra bir kayit eklediniz. Sonra baska bir tabloyu sildiniz. 2 dk sonra commit ettiniz. Bu durumda yaptiginiz islemler ancak commit veya rollback komutunu g&ouml;rd&uuml;g&uuml; anda kalici hale getirilecektir. &Ouml;rnek kullanim :</p>\r\n<pre class=\"language-sql\"><code>BEGIN TRANSACTION\r\nINSERT INTO dbo.demoTransaction (col1) VALUES (1);\r\nINSERT INTO dbo.demoTransaction (col1) VALUES (2);\r\nCOMMIT TRANSACTION</code></pre>\r\n<p class=\"mt20\"><b>Rollback</b></p>\r\n<p><span class=\"high-light\">ROLLBACK</span> komutu ile, veri tabaninda kullanicilarin veri tabani &ccedil;alismaya baslamasinda itibaren yaptigi t&uuml;m degisiklikleri yada en son kullanilan <span class=\"high-light\">COMMIT</span> komutundan sonra yapilan t&uuml;m degisiklikleriiptal etmek m&uuml;mk&uuml;nd&uuml;r.</p>\r\n<p><span class=\"high-light\">ROLLBACK</span> komutu girildikten sonra, tablodan kolon silme, kolon g&uuml;ncelleme, tablonun, t&uuml;m&uuml;n&uuml; silme, view silme gibi degisiklik islemleri t&uuml;m&uuml; iptal edilerek &ouml;nceki duruma geri d&ouml;n&uuml;l&uuml;r.</p>\r\n<pre class=\"language-sql\"><code>begin transaction\r\n-- any SQL code to execute here\r\nrollback transaction</code></pre>\r\n<p class=\"mt20\"><b>Commit</b></p>\r\n<p><span class=\"high-light\">COMMIT</span> komutu ise,kullanicilarin veri tabanina baglandigi andan itibaren yada kullanilan en son <span class=\"high-light\">COMMIT</span> komutundan sonraki yukarida bahsedilen t&uuml;rde b&uuml;t&uuml;n degisikliklerin kalici olarak veri tabanina aksettirilmesi ve saklanmasini saglar.</p>\r\n<p><span class=\"high-light\">COMMIT</span> komutu ile o ana kadar ger&ccedil;eklestirilen b&uuml;t&uuml;n degisiklikler, sistemde kalici olarak yerlesecektir.</p>\r\n<pre class=\"language-sql\"><code>BEGIN TRAN  \r\n    UPDATE dbo.Hesap SET Bakiye-=100 WHERE TCKimlikNo=\'23456789101\'\r\n    RAISERROR(\'Elektrikler Kesildi\',16,2)\r\n    UPDATE dbo.Hesap SET Bakiye+=100 WHERE TCKimlikNo=\'12345678910\'\r\nCOMMIT TRAN<br />\r\nBEGIN TRANSACTION\r\n   INSERT INTO dbo.demoTransaction (col1) VALUES (1);\r\n   INSERT INTO dbo.demoTransaction (col1) VALUES (2);\r\nCOMMIT TRANSACTION</code></pre>','MsSQL, Transaction, Rollback, Commit','/res/img/entry/mssql.jpg','2017-10-17 12:41:24','2017-11-10 01:36:32',NULL,1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (4,1,11,'Interface ve Abstract Classlar Arasındaki Farklar','Interface ve Abstract Classlar arasındaki farklar nelerdir? Nasil kullanilir?  Bir sınıf tek Abstract Class\'tan türeyebilirken, birden fazla Interface\'i implemente edebilir. Bu bakımdan Interface\'ler daha esnektir. Fakat Interface\'den türeyen sınıflar..','<p>Bir sinif tek <b>Abstract Class</b>\'tan t&uuml;reyebilirken, birden fazla <b>Interface</b>\'i implemente edebilir. Bu bakimdan Interface\'ler daha esnektir. Fakat Interface\'den t&uuml;reyen siniflar, Abstract Class\'tan t&uuml;reyen siniflardan daha yavas &ccedil;alistigi i&ccedil;in hiz bakimindan dezevantaji var diyebiliriz.</p>\r\n<p>Interface\'lerde sadece metod tanimlari vardir. Abstract Class\'lar ise abstract metodlar i&ccedil;erebilecegi ayni zamanda kalitim alan siniflarin kullanabilecegi metod ve &ouml;zellikleri implemente edebilirler. Eger birden fazla sinif ayni abstract classdan veya interfaceden t&uuml;r&uuml;yorsa hangisini tercih etmeli? Burada suna bakacagiz, eger t&uuml;reyen siniflarda ortak kullanilan kod yapisi fazlaysa abstract class tercih etmek daha mantikli.</p>\r\n<p>Hem interface\'den hem de Abstract class\'lardan nesne &ouml;rnegi olusturamayiz. Bu yapilari bir kalip veya sema olarak d&uuml;s&uuml;n&uuml;n. Bu semayi kullanan siniflardan ancak nesne &ouml;rnegi alabiliriz (ki bu sinifinda abstract olmamasi lazim..).</p>\r\n<p>Interface ile yapabildigimiz herseyi hatta daha fazlasini Abstract Class\'lar ile de yapabiliriz. Bir Interface i&ccedil;inde yer alan t&uuml;m elemanlar erisim olarak public, private vs access modified almaz ve varsayilan olarak public\'tir. Abstract Class metod ve &ouml;zellikleri ise normal classlarda oldugu gibi public, protected ya da private olarak tanimlanabilir.</p>\r\n<p>Interface\'in sundugu t&uuml;m imzalar (metod tanimlari) bu interface\'i kullanan siniflarda implemente edilmek zorundadir. Abstract Class\'lardan t&uuml;reyen siniflar ise sadece abstract olarak tanimlanan metodlari implemente etmek durumundadir. Ayrica Abstract Class i&ccedil;erisinde tanimli virtual metodlar da t&uuml;reyen siniflarda overiide edilerek yeniden tanimlanabilir.</p>','C#, Interface, Abstract Class, Abstract Metod, Virtual Metod, Abstract Sinif','/res/img/entry/no-image.jpg','2017-10-18 12:02:11','2017-11-10 01:37:40','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (5,1,5,'Garanti Bankası Sanal Pos Entegrasyonu - XML API','Garanti Sanal Posu üzerinden XML API ile ödeme işlemi nasıl gerçekleştirilir. XML API için nasıl bir istek oluşturulmalı, bankadan dönen cevap nasıl işlenmeli, hash kontrolleri vs. Bu makalede 3D Doğrulama adımı olmadan xml post ederek nasıl ödeme işlemini gerçekleştireceğimizi inceleyeceğiz.','<p>Başlamadan; Garanti Bankası\'nın kendi sanal pos entegrasyon d&ouml;k&uuml;manlarını <a href=\"http://www.garantipos.com.tr/mailing/GVP.zip\">buradan</a> indirebilirsiniz.</p>\r\n<p>XML API ile &ouml;demeden kasıt 3D Secure doğrulama işlemi olmadan direkt xml post ederek &ouml;deme işleminin ger&ccedil;ekleştirilmesidir (provizyon alma işlemi). &Ouml;rnek senaryoda; m&uuml;şterimiz sitemizden 29.90 TL tutarında sipariş vermiş olsun. Sipariş işlemini ger&ccedil;ekleştirdikten sonra siparişin onaylanması i&ccedil;in sipariş tutarının m&uuml;şteri kredi kartından &ccedil;ekilmesi gerekiyor. Bunun i&ccedil;in &ouml;deme sayfamızda m&uuml;şteriden aldığımız kredi kartı bilgileriyle birlikte Garanti Sanal Pos\'umuza &ouml;deme işlemi i&ccedil;in xml oluşturarak istekte bulunacağız.</p>\r\n<p>Yapılacak işlem aslında bankanın ihtiya&ccedil; duyacağı minimum bilgiyi i&ccedil;eren bir xml d&ouml;k&uuml;manı hazırlayarak, bankanın &ouml;deme sistemine provizyon isteği yollamak. Banka isteğinizi değerlendirdikten sonra başarılı/başarısız cevabını yine xml formatında bize d&ouml;nd&uuml;recek.</p>\r\n<p>Peki bankanın istediği xml nasıl bir yapıya sahip? Aşağıda &ouml;deme (satış) işlemi i&ccedil;in hazırlanmış &ouml;rnek bir xml yapısı mevcut.</p>\r\n<pre class=\"language-markup\"><code>&lt;xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;GVPSRequest&gt;\r\n    &lt;Mode&gt;PROD&lt;/Mode&gt;\r\n    &lt;Version&gt;v0.01&lt;/Version&gt;\r\n    &lt;ChannelCode&gt;&lt;/ChannelCode&gt;\r\n    &lt;Terminal&gt;\r\n        &lt;ProvUserID&gt;PROVAUT&lt;/ProvUserID&gt;\r\n        &lt;HashData&gt;A4BBFB8B305F0E6E899B362A951E4060CDEE5277&lt;/HashData&gt;\r\n        &lt;UserID&gt;PROVAUT&lt;/UserID&gt;\r\n        &lt;ID&gt;30691292&lt;/ID&gt;\r\n        &lt;MerchantID&gt;3424113&lt;/MerchantID&gt;\r\n    &lt;/Terminal&gt;\r\n    &lt;Customer&gt;\r\n        &lt;IPAddress&gt;127.0.0.1&lt;/IPAddress&gt;\r\n        &lt;EmailAddress&gt;eticaret@garanti.com.tr&lt;/EmailAddress&gt;\r\n    &lt;/Customer&gt;\r\n    &lt;Card&gt;\r\n        &lt;Number&gt;5549609023***012&lt;/Number&gt;\r\n        &lt;ExpireDate&gt;1015&lt;/ExpireDate&gt;\r\n        &lt;CVV2&gt;718&lt;/CVV2&gt;\r\n    &lt;/Card&gt;\r\n    &lt;Order&gt;\r\n        &lt;OrderID&gt;234232332&lt;/OrderID&gt;\r\n        &lt;GroupID&gt;&lt;/GroupID&gt;\r\n    &lt;/Order&gt;\r\n    &lt;Transaction&gt;\r\n        &lt;Type&gt;sales&lt;/Type&gt;\r\n        &lt;InstallmentCnt&gt;&lt;/InstallmentCnt&gt;\r\n        &lt;Amount&gt;100&lt;/Amount&gt;\r\n        &lt;CurrencyCode&gt;949&lt;/CurrencyCode&gt;\r\n        &lt;CardholderPresentCode&gt;0&lt;/CardholderPresentCode&gt;\r\n        &lt;MotoInd&gt;N&lt;/MotoInd&gt;\r\n        &lt;OriginalRetrefNum &gt; &lt;/OriginalRetrefNum &gt;\r\n    &lt;/Transaction&gt;\r\n&lt;/GVPSRequest&gt;</code></pre>\r\n<p class=\"mt20\">Bu istek mesajında yer alan alanlar ve a&ccedil;ıklamaları ş&ouml;yle;</p>\r\n<table class=\"table table-bordered table-striped table-condensed\">\r\n<thead>\r\n<tr>\r\n<th width=\"16%\">Alan</th>\r\n<th>A&ccedil;ıklama</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Mode</td>\r\n<td>Yapılan işlemin test mi yoksa ger&ccedil;ek mi olduğunu belirtir. Test işlemi i&ccedil;in TEST, ger&ccedil;ek işlemler i&ccedil;in PROD değerini belirtin.</td>\r\n</tr>\r\n<tr>\r\n<td>ProvUserID</td>\r\n<td>Kullanılan provizyon kullanıcı adının g&ouml;nderildiği alandır. PROVAUT ve PROVRFN ifadelerini alabilir. PROVAUT provizyon kullanıcısı olarak kullanılır (iade ve iptal harici işlemlerde kullanılır). PROVRFN iptal ve iade işlemleri i&ccedil;in kullanılan kullanıcıdır.</td>\r\n</tr>\r\n<tr>\r\n<td>HashData</td>\r\n<td>Aşağıda nasıl hesaplandığını anlatacağım.</td>\r\n</tr>\r\n<tr>\r\n<td>ID</td>\r\n<td>Bankadan aldığınız Terminal No (TerminalID) bilgisi</td>\r\n</tr>\r\n<tr>\r\n<td>MerchantID</td>\r\n<td>&Uuml;ye işyeri numarası</td>\r\n</tr>\r\n<tr>\r\n<td>IPAddress</td>\r\n<td>İşlem yaptığınız m&uuml;şterinin IP Adresi</td>\r\n</tr>\r\n<tr>\r\n<td>EmailAddress</td>\r\n<td>İşlem yaptığınız m&uuml;şterinin e-posta adresi</td>\r\n</tr>\r\n<tr>\r\n<td>Number</td>\r\n<td>İşlem yapılacak 16 haneli kredi kartı numarası</td>\r\n</tr>\r\n<tr>\r\n<td>ExpireDate</td>\r\n<td>Kredi kartının son kullanma tarihinin ay ve yıl bilgisi. MMYY formatında. Yıl bilgisinin son iki hanesi baz alınır. &Ouml;rneğin 10/2015 i&ccedil;in &ldquo;1015&rdquo; g&ouml;nderilmeli.</td>\r\n</tr>\r\n<tr>\r\n<td>CVV2</td>\r\n<td>Kredi kartının arkasında yer alan 3 haneli g&uuml;venlik numarası</td>\r\n</tr>\r\n<tr>\r\n<td>OrderID</td>\r\n<td>&Ouml;demesi yapılacak siparişin ID bilgisi(Sipariş No), boş g&ouml;nderilirse Garanti sizin i&ccedil;in bir tane &uuml;retecektir.</td>\r\n</tr>\r\n<tr>\r\n<td>Type</td>\r\n<td>İşlem tipi satış mı, iade mi, iptal mi, &ouml;n satış mı vs bilgisi. Satış İ&ccedil;in &ldquo;sales&rdquo;, İade i&ccedil;in &ldquo;refund&rdquo; ve iptal i&ccedil;in &ldquo;void&rdquo; değerini alır.</td>\r\n</tr>\r\n<tr>\r\n<td>InstallmentCnt</td>\r\n<td>İşlem taksitli ise taksit sayısı, taksit yoksa boş bırakın.</td>\r\n</tr>\r\n<tr>\r\n<td>Amount</td>\r\n<td>İşlem tutarı. Tutardaki \'.\' ve \',\' karakterilerini temizleyin. Garanti son iki haneyi kuruş olarak algılıyor. &Ouml;rneğin 102.55 TL tutarındaki işlem i&ccedil;in 10255 g&ouml;nderin 1 TL&rsquo;lik işlem i&ccedil;in 100 g&ouml;nderin.</td>\r\n</tr>\r\n<tr>\r\n<td>CurrencyCode</td>\r\n<td>İşlemin para birimi. 949 TL, 840 USD ve 978 EURO i&ccedil;in kullanılıyor. Diğerleri i&ccedil;in garanti d&ouml;k&uuml;manını inceleyin.</td>\r\n</tr>\r\n<tr>\r\n<td>CardholderPresentCode</td>\r\n<td>XML API ile yaptığınız &ouml;demeler i&ccedil;in 0, 3D Secure &ouml;demeler i&ccedil;in 13 g&ouml;nderin</td>\r\n</tr>\r\n<tr>\r\n<td>MotoInd</td>\r\n<td>işlemin MailOrder bir işlem olup olmadığı bilgisinin g&ouml;nderildiği alandır. Y ise işlem mail order bir işlemdir. N ise işlem ecommerce işlemidir. E-ticaret sanal pos &ouml;demelerinde N değeri g&ouml;nderilmeli.</td>\r\n</tr>\r\n<tr>\r\n<td>OriginalRetrefNum</td>\r\n<td>İade ve İptal işlemleri i&ccedil;in iadesi yada iptali yapılacak işlem i&ccedil;in bankadan d&ouml;nen cevaptaki &ldquo;RetrefNum&rdquo; bilgisi eklenir. Satış, &ouml;n satış vb işlemler i&ccedil;in boş bırakın.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Hash Data Oluşturma :</h3>\r\n<p>3D olmayan, XML-API &ouml;demelerinde Hash Data 2 aşamada oluşturulur.</p>\r\n<p>1) Bankadan aldığınız kullanıcı şifresi ile TerminalID sini birleştirin. TermimalID 9 karakterden az ise başına 9 karaktere tamamlayana kadar 0 ekleyin. Sonra bu bilgiyi SHA1 algoritması ile hashleyip, sonucu b&uuml;y&uuml;k karakterlere &ccedil;evirin.</p>\r\n<pre class=\"language-csharp\"><code>var _sTerminalID=terminalID.PadLeft(9, \'0\');\r\nvar securityData=SHA1(password+_sTerminalID).ToUpperInvariant();</code></pre>\r\n<p class=\"mt20\">2) Sipariş Numarası, Terminal ID (başında 0 olmadan), kredi kartı numarası, sipariş tutarı ve 1. adımda oluşturduğunuz hash bilgisini (securityData) birleştirin ve tekrar SHA1 algoritması ile hashleyin.</p>\r\n<pre class=\"language-csharp\"><code>var hashString = orderID + terminalID + cardNumber + amount + securityData;\r\nvar hashData = SHA1(hashString).ToUpperInvariant();</code></pre>\r\n<p><i>Not : sipariş tutarını belirtirken \'.\' ve \',\' karakterlerini tutardan temizleyin. Unutmayın ki garanti son iki haneyi kuruş olarak algılar. &Ouml;rneğin 29.90 TL i&ccedil;in &ldquo;2990&rdquo; belirtin.</i></p>\r\n<h3>XML İsteğinin G&ouml;nderilmesi :</h3>\r\n<p>Bu noktada bankanın bize tanımladığı sanal pos &uuml;zerinden m&uuml;şterinin kredi kartından &ccedil;ekim yapabilmesi i&ccedil;in gerekli xml\'i &uuml;rettik. Şimdi bu xml bankaya g&ouml;ndermemiz gerekiyor. Bunun i&ccedil;in bir web request oluşturacağız. Garanti Bankası, 3D olmayan xml-post işlemleri i&ccedil;in https://sanalposprov.garanti.com.tr/VPServlet adresine istek yapılmasını istiyor. &Ouml;rnek istek;</p>\r\n<pre class=\"language-csharp\"><code>var xmlData = ... oluşturduğunuz xml ...\r\nstring data = \"data=\" + xmlData.OuterXml;\r\n\r\nWebRequest request = WebRequest.Create(_definition.PostUrl);\r\nrequest.Method = \"POST\";\r\nrequest.Timeout = 30000;\r\n\r\nbyte[] byteArray = Encoding.UTF8.GetBytes(data);\r\nrequest.ContentType = \"application/x-www-form-urlencoded\";\r\nrequest.ContentLength = byteArray.Length;\r\n\r\nStream dataStream = request.GetRequestStream();\r\ndataStream.Write(byteArray, 0, byteArray.Length);\r\ndataStream.Close();\r\n\r\nWebResponse response = request.GetResponse();\r\ndataStream = response.GetResponseStream();\r\nStreamReader reader = new StreamReader(dataStream);\r\n\r\nstring responseString = reader.ReadToEnd();  //bankadan d&ouml;nen cevabı okuyoruz\r\nLog.Info(\"Bank Response : {0}\", response);</code></pre>\r\n<p class=\"mt20\">Banka işlemle ilgili cevabını yine xml formatında d&ouml;necektir.</p>\r\n<h3>Bankadan Gelen Cevabın İşlenmesi:</h3>\r\n<p>Bankadan aşağıdaki gibi bir cevap mesajı d&ouml;necektir. Gelen cevap mesajını inceleyerek işlemin başarılı olup olmadığını anlayabiliriz.</p>\r\n<pre class=\"language-markup\"><code>&lt;xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;GVPSResponse&gt;\r\n    &lt;Mode&gt;&lt;/Mode&gt;\r\n    &lt;Order&gt;\r\n       &lt;OrderID&gt;&lt;/OrderID&gt;\r\n       &lt;GroupID&gt;&lt;/GroupID&gt;\r\n    &lt;/Order&gt;\r\n    &lt;Transaction&gt;\r\n       &lt;Response&gt;\r\n            &lt;Source&gt;HOST&lt;/Source&gt;\r\n            &lt;Code&gt;96&lt;/Code&gt;\r\n            &lt;ReasonCode&gt;9600&lt;/ReasonCode&gt;\r\n            &lt;Message&gt;Declined&lt;/Message&gt;\r\n            &lt;ErrorMsg&gt;Expire card&lt;/ErrorMsg&gt;\r\n            &lt;SysErrMsg&gt;Son kullanma tarihi hatali&lt;/SysErrMsg&gt;\r\n       &lt;/Response&gt;\r\n       &lt;RetrefNum&gt;&lt;/RetrefNum&gt;\r\n       &lt;AuthCode&gt;&lt;/AuthCode&gt;\r\n       &lt;BatchNum&gt;&lt;/BatchNum&gt;\r\n       &lt;SequenceNum&gt;&lt;/SequenceNum&gt;\r\n       &lt;ProvDate&gt;&lt;/ProvDate&gt;\r\n       &lt;CardNumberMasked&gt;&lt;/CardNumberMasked&gt;\r\n       &lt;CardHolderName&gt;&lt;/CardHolderName&gt;\r\n       &lt;HashData&gt;&lt;/HashData&gt;\r\n    &lt;/Transaction&gt;\r\n&lt;/GVPSResponse&gt;</code></pre>\r\n<p class=\"mt20\">D&ouml;nen değerlerden işlemin başarılı olup olmadığını anlayacağımız alanlar ve a&ccedil;ıklamaları ş&ouml;yle;</p>\r\n<table class=\"table table-bordered table-striped table-condensed\">\r\n<thead>\r\n<tr>\r\n<th width=\"16%\">Alan</th>\r\n<th>A&ccedil;ıklama</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Response/Code</td>\r\n<td>İşlemin cevap kodunu g&ouml;sterir. Eğer 00 ise işlem başarılı demektir. Diğer değerler i&ccedil;in bankanın hata kodlarına g&ouml;z atın.</td>\r\n</tr>\r\n<tr>\r\n<td>Response/ReasonCode</td>\r\n<td>işleme ait alt cevap kodunu g&ouml;sterir.</td>\r\n</tr>\r\n<tr>\r\n<td>Response/Message</td>\r\n<td>İşlem sonu&ccedil; mesajı</td>\r\n</tr>\r\n<tr>\r\n<td>Response/ErrorMsg</td>\r\n<td>İşlem sonucunda bir hata alınmışsa hata i&ccedil;eriği</td>\r\n</tr>\r\n<tr>\r\n<td>Response/SysErrMsg</td>\r\n<td>Alınan hatanın detaylı a&ccedil;ıklaması</td>\r\n</tr>\r\n<tr>\r\n<td>RetrefNum</td>\r\n<td>İşleme ait referans numarasının d&ouml;n&uuml;ld&uuml;ğ&uuml; alandır. İade ve iptal işlemlerinde OriginalRetrefNum alanına bu değer eklenir. Bu y&uuml;zden kullanmayı d&uuml;ş&uuml;n&uuml;yorsanız bi yerde saklamayı unutmayın.</td>\r\n</tr>\r\n<tr>\r\n<td>AuthCode</td>\r\n<td>Başarılı bir işlem i&ccedil;in provizyon sonucunun d&ouml;n&uuml;ld&uuml;ğ&uuml; alandır.</td>\r\n</tr>\r\n<tr>\r\n<td>ProvDate</td>\r\n<td>İşlem tarih bilgisi d&ouml;nd&uuml;r&uuml;l&uuml;r.</td>\r\n</tr>\r\n<tr>\r\n<td>HashData</td>\r\n<td>Cevap mesajının banka tarafından g&ouml;nderilip g&ouml;nderilmediğinin kontrol&uuml; i&ccedil;in d&ouml;nen değerdir. İşlem cevabında d&ouml;nen değerler ile aşağıda belirtilen hesaplama yapılarak hesaplanan hash değeri ile cevap mesajında d&ouml;nen değerin aynı olup olmadığı kontrol edilmelidir.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"mt20\"><i>Not : İşlemin başarılı olup olmadığını d&ouml;nen cevaptaki &ldquo;Code&rdquo; alanına bakarak anlayabiliriz. Eğer bu alan i&ccedil;in &ldquo;00&rdquo; değeri d&ouml;nm&uuml;şse işlem başarılıdır. Ancak d&ouml;nen cevabın bankadan mı yoksa başka bir yerden mi geldiğini anlamak i&ccedil;in hash kontrol&uuml;n&uuml; yapmak fraud riskini azaltacaktır.</i></p>\r\n<h4>Hash Kontrol&uuml; :</h4>\r\n<p>Bankadan d&ouml;nen cevapdaki <span class=\"highliht\">HASHDATA</span> alanı bize cevabın bankaya ait olup olmadığını kontrol etme şansı verir. Bunun i&ccedil;in şifre ve terminalID kullanarak oluşturduğumuz &ldquo;securityData&rdquo; ile birlikte d&ouml;nen cevaptaki Code, RetrefNum, AuthCode, ProvDate, orderID yi kullanacağız:</p>\r\n<pre class=\"language-csharp\"><code>var securityData = SHA1(password + terminalID.PadLeft(9,\'0\')).ToUpperInvariant();\r\nvar hashString = Code + RetrefNum + AuthCode + ProvDate + orderID + securityData;\r\nvar hashData = SHA1(hashString).ToUpperInvariant();\r\nvar isSuccess = (hashData == HASHDATA &amp;&amp; Code == \"00\");</code></pre>\r\n<p class=\"mt20\">Bir sonraki makalede İade ve İptal işlemlerinin de yine <span class=\"highliht\">XML-API</span> kullanılarak nasıl ger&ccedil;ekleştirildiğini a&ccedil;ıklamaya &ccedil;alışacağım.</p>','Garanti Sanal Pos Entegrasyonu, Sanal Pos,  XML API, Sanal Pos Ödeme, Hash Kontrolü, XML İsteği','/res/img/entry/garanti_sanal_pos.jpg','2017-10-20 13:53:31','2017-10-28 07:16:40','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (6,1,5,'Garanti Bankası Sanal Pos Entegrasyonu - İade İşlemi','Garanti Sanal Posu üzerinden XML API ile iade işlemi nasıl gerçekleştirilir.  Satış işleminden farkı nedir? Hangi alanlar gönderilir. Nelere dikkat edilmeli. Bu makalede iade işlemini inceleyeceğiz.','<p>Daha &ouml;nce <a href=\"../../../makale/garanti-bankasi-sanal-pos-entegrasyonu-xml-api/5\">Garanti Bankası Sanal Posu &uuml;zerinden XML API ile &ouml;deme (satış) işlemi</a> nasıl yapılıyor a&ccedil;ıklamaya &ccedil;alıştık. Bu makalede iade işlemini inceleyeceğiz.</p>\r\n<p>İade bir işlemin aynı g&uuml;n i&ccedil;erisinde kısmi tutarının ya da takip eden g&uuml;nler i&ccedil;in tamamının ya da bir kısminın karta geri yansıtılması i&ccedil;in yapılan işlemdir.</p>\r\n<p>İade işlemi, &ouml;demesi başarılı olmuş bir işlem i&ccedil;in yapılır. &Ouml;rneğin, m&uuml;şteri sipariş ettiği &uuml;r&uuml;n yada &uuml;r&uuml;nleri iade etmek istediğinde, &uuml;r&uuml;n bedellerini tekrar m&uuml;şteri kartına iade etmemiz gerekiyor. Bunun i&ccedil;in sanal pos &uuml;zerinden bankaya iade isteğinde bulunmamız lazım.</p>\r\n<p>Garanti Bankası, iade işlemlerinde satış işlemlerinde olduğu gibi bir XML hazırlanarak <b>https://sanalposprov.garanti.com.tr/VPServlet</b> adresine post edilmesini istiyor. Aynı zamanda İade işlemi yapabilmemiz i&ccedil;in Sanal Pos Y&ouml;netim Ekranı\'nda <b>İade Kullanıcısı</b> tanımlamamız gerekiyor. Satış işlemi i&ccedil;in <span class=\"highlight\">PROVAUT</span> kullanıcısı kullanılırken, iade ve iptal işlemleri i&ccedil;in <span class=\"highlight\">PROVRFN</span> kullanıcısı kullanılır. Bu da demektir XML\'imizi hazırlarken; şifre kullandığımız yerlerde <span class=\"highlight\">PROVRFN</span> kullanıcısının şifresini kullanacağız.</p>\r\n<p>Ayrıca oluşturacağımız XML\'e kredi kartı bilgilerini eklemeyeceğiz. &Ccedil;&uuml;nk&uuml; zaten &ouml;demesi yapılmış bir işlem i&ccedil;in istekte bulunacağız. İade isteklerinde iade tutarı iadesi yapılacak işlem tutarından da y&uuml;ksek olamaz. Diğer işlemler satış işleminde olduğu gibidir. &Ouml;zetlemek gerekirse &ouml;nce iade işlemi i&ccedil;in bir xml oluşturacağız. Xml\'deki hash alanını satış işleminde olduğu gibi hesaplayacağız. Daha sonra bu xml\'i https://sanalposprov.garanti.com.tr/VPServlet adresine web request oluşturarak g&ouml;ndereceğiz. İşlemin başarılı olup olmamasına g&ouml;re banka yine bize bir XML cevabı d&ouml;necek. Satış işleminde yaptığımız gibi bankadan d&ouml;nen XML cevabı kontrol edeceğiz. Sipariş işleminden farklı olarak XML\'de aşağıdaki d&uuml;zenlemeler yapılır.</p>\r\n<table class=\"table table-bordered table-striped table-condensed\">\r\n<thead>\r\n<tr>\r\n<th width=\"16%\">Alan</th>\r\n<th>A&ccedil;ıklama</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Type</td>\r\n<td>İade işlemleri bu alanda \'refund\' değeri belirtilir</td>\r\n</tr>\r\n<tr>\r\n<td>OriginalRetrefNum</td>\r\n<td>Bu alana iadesi yapılacak işlem i&ccedil;in i&ccedil;in bankadan d&ouml;nen cevaptaki \'RetrefNum\' bilgisini girilir</td>\r\n</tr>\r\n<tr>\r\n<td>OrderID</td>\r\n<td>İadesi yapılacak işlem sipariş ID si.</td>\r\n</tr>\r\n<tr>\r\n<td>ProvUserID</td>\r\n<td>İade işlemleri i&ccedil;in \'PROVRFN\' belirtilmeli.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"mt20\">&Ouml;rnek xml aşağıdaki gibi olacaktır;</p>\r\n<pre class=\"language-markup\"><code>&lt;xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;GVPSRequest&gt;\r\n    &lt;Mode&gt;PROD&lt;/Mode&gt;\r\n    &lt;Version&gt;v0.01&lt;/Version&gt;\r\n    &lt;ChannelCode&gt;&lt;/ChannelCode&gt;\r\n    &lt;Terminal&gt;\r\n        &lt;ProvUserID&gt;PROVRFN&lt;/ProvUserID&gt;\r\n        &lt;HashData&gt;A4BBFB8B305F0E6E899B362A951E4060CDEE5277&lt;/HashData&gt;\r\n        &lt;UserID&gt;PROVAUT&lt;/UserID&gt;\r\n        &lt;ID&gt;30691292&lt;/ID&gt;\r\n        &lt;MerchantID&gt;3424113&lt;/MerchantID&gt;\r\n    &lt;/Terminal&gt;\r\n    &lt;Customer&gt;\r\n        &lt;IPAddress&gt;127.0.0.1&lt;/IPAddress&gt;\r\n        &lt;EmailAddress&gt;eticaret@garanti.com.tr&lt;/EmailAddress&gt;\r\n    &lt;/Customer&gt;\r\n    &lt;Order&gt;\r\n        &lt;OrderID&gt;234232332&lt;/OrderID&gt;\r\n        &lt;GroupID&gt;&lt;/GroupID&gt;\r\n    &lt;/Order&gt;\r\n    &lt;Transaction&gt;\r\n        &lt;Type&gt;refund&lt;/Type&gt;\r\n        &lt;InstallmentCnt&gt;&lt;/InstallmentCnt&gt;\r\n        &lt;Amount&gt;100&lt;/Amount&gt;\r\n        &lt;CurrencyCode&gt;949&lt;/CurrencyCode&gt;\r\n        &lt;CardholderPresentCode&gt;0&lt;/CardholderPresentCode&gt;\r\n        &lt;MotoInd&gt;N&lt;/MotoInd&gt;\r\n        &lt;OriginalRetrefNum&gt;Satış işleminden d&ouml;nen RetrefNum bilgisi&lt;/OriginalRetrefNum&gt;\r\n    &lt;/Transaction&gt;\r\n&lt;/GVPSRequest&gt;</code></pre>\r\n<p><i>Not : Tekrar etmekte fayda var, iade işlemlerinde hash data oluşturulurken şifre alanında iade kullanıcısının (PROVRFN) şifresi kullanılır. HashData oluşturulurken kart numarası boş ge&ccedil;ilir. Ayrıca iade isteklerinde iade tutarı işlem tutarından y&uuml;ksek olamaz.</i></p>','Garanti Sanal Pos Entegrasyonu, Sanal Pos,  XML API, İade İşlemi, İade Xml Yapısı','/res/img/entry/garanti_sanal_pos.jpg','2017-10-28 11:47:17','2017-10-28 12:02:35','2',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (7,1,5,'Garanti Bankası Sanal Pos Entegrasyonu - İptal İşlemi','Garanti Bankası Sanal Posu üzerinden XML API ile iptal işlemi nasıl gerçekleştirilir.  İade işleminden farkı nedir? Hangi alanlar gönderilir. Nelere dikkat edilmeli. Bu makalede iptal işleminin detaylarını inceleyeceğiz.','<p>Daha &ouml;nce <a href=\"../../../makale/garanti-bankasi-sanal-pos-entegrasyonu-xml-api/5\">Garanti Bankası Sanal Posu &uuml;zerinden XML API ile &ouml;deme (satış) işlemi</a> nasıl yapılıyor a&ccedil;ıklamaya &ccedil;alıştık. Bu makalede Garanti Sanal Posu &uuml;zerinden İptal İşlemi\'ni inceleyeceğiz.</p>\r\n<p>İptal, yapılan bir işlemin g&uuml;n i&ccedil;erisinde ge&ccedil;ersiz olması i&ccedil;in yapılan işlemdir. İşlemler aynı g&uuml;n i&ccedil;erisinde iptal edilebilir. Takip eden g&uuml;nler i&ccedil;in işlemin iptal edilmesi gerekiyorsa yapılması gereken işlem iadedir. İptal işleminin iptali yoktur. Bu sebeple yanlışlıkla bir iptal yapılırsa bu durumda iptal edilen işlemin tekrar yaptırılması gerekmektedir. Kısmi tutar iptali yoktur. Eğer kısmi tutarın iptali gerekiyor ise iade se&ccedil;eneği kullanılmalı ve iade edilecek tutar alanına kısmi tutar yazılmalıdır. İptal işlemleri kart &uuml;zerinden iz oluşturmaz. Kart ekstrelerinde ya da d&ouml;nem i&ccedil;i işlemlerde iptal işlemi g&ouml;z&uuml;kmez.</p>\r\n<p>İptal işlemi, iade işlemi gibi yapılır. Tek fark <b>Type</b> alanına <b>void</b> değeri belirtilir. Bunun i&ccedil;in <a href=\"../../../makale/garanti-bankasi-sanal-pos-entegrasyonu-iade-islemi/6\">Garanti Bankası Sanal Pos Entegrasyonu - İade İşlemi</a> makalemizi inceleyebilirsiniz.</p>\r\n<p>Sipariş işleminden farklı olarak XML\'de aşağıdaki d&uuml;zenlemeler yapılır.</p>\r\n<table class=\"table table-bordered table-striped table-condensed\">\r\n<thead>\r\n<tr>\r\n<th width=\"16%\">Alan</th>\r\n<th>A&ccedil;ıklama</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Type</td>\r\n<td>İptal işlemleri bu alanda <b>void</b> değeri belirtilir</td>\r\n</tr>\r\n<tr>\r\n<td>OriginalRetrefNum</td>\r\n<td>Bu alana iptal edilecek işlem i&ccedil;in i&ccedil;in bankadan d&ouml;nen cevaptaki \'RetrefNum\' bilgisi girilir</td>\r\n</tr>\r\n<tr>\r\n<td>OrderID</td>\r\n<td>İptal edilecek işlemin sipariş ID si.</td>\r\n</tr>\r\n<tr>\r\n<td>ProvUserID</td>\r\n<td>İptal ve iade işlemleri i&ccedil;in iptal &amp; iade kullanıcısı \'PROVRFN\' belirtilmeli.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"mt20\">&Ouml;rnek xml aşağıdaki gibi olacaktır;</p>\r\n<pre class=\"language-markup\"><code>&lt;xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;GVPSRequest&gt;\r\n    &lt;Mode&gt;PROD&lt;/Mode&gt;\r\n    &lt;Version&gt;v0.01&lt;/Version&gt;\r\n    &lt;ChannelCode&gt;&lt;/ChannelCode&gt;\r\n    &lt;Terminal&gt;\r\n        &lt;ProvUserID&gt;PROVRFN&lt;/ProvUserID&gt;\r\n        &lt;HashData&gt;A4BBFB8B305F0E6E899B362A951E4060CDEE5277&lt;/HashData&gt;\r\n        &lt;UserID&gt;PROVAUT&lt;/UserID&gt;\r\n        &lt;ID&gt;30691292&lt;/ID&gt;\r\n        &lt;MerchantID&gt;3424113&lt;/MerchantID&gt;\r\n    &lt;/Terminal&gt;\r\n    &lt;Customer&gt;\r\n        &lt;IPAddress&gt;127.0.0.1&lt;/IPAddress&gt;\r\n        &lt;EmailAddress&gt;eticaret@garanti.com.tr&lt;/EmailAddress&gt;\r\n    &lt;/Customer&gt;\r\n    &lt;Order&gt;\r\n        &lt;OrderID&gt;234232332&lt;/OrderID&gt;\r\n        &lt;GroupID&gt;&lt;/GroupID&gt;\r\n    &lt;/Order&gt;\r\n    &lt;Transaction&gt;\r\n        &lt;Type&gt;void&lt;/Type&gt;\r\n        &lt;InstallmentCnt&gt;&lt;/InstallmentCnt&gt;\r\n        &lt;Amount&gt;100&lt;/Amount&gt;\r\n        &lt;CurrencyCode&gt;949&lt;/CurrencyCode&gt;\r\n        &lt;CardholderPresentCode&gt;0&lt;/CardholderPresentCode&gt;\r\n        &lt;MotoInd&gt;N&lt;/MotoInd&gt;\r\n        &lt;OriginalRetrefNum&gt;Satış işleminden d&ouml;nen RetrefNum bilgisi&lt;/OriginalRetrefNum&gt;\r\n    &lt;/Transaction&gt;\r\n&lt;/GVPSRequest&gt;</code></pre>\r\n<p><i>Not : İptal işleimini kullanarak iade işlemini de iptal edebilirsiniz. Bunun i&ccedil;in aynı şekilde bir iptal isteği oluşturduktan sonra OrginialRetrefNum alanına iptal edilecek iade işleminin işlem numarasını yazmanız gerekiyor.</i></p>','Garanti Sanal Pos Entegrasyonu, Sanal Pos,  XML API, İptal İşlemi, İptal İsteği Xml Yapısı','/res/img/entry/garanti_sanal_pos.jpg','2017-10-28 12:13:32','2017-10-28 12:15:20','3',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (8,1,12,'Design Patterns & Singleton Design Pattern','Tasarım Desenleri veya Design Pattern kavramı nedir, ne için kullanılır? Creational, Structural ve Behavioral Tasarım Desenleri  nelerdir? Singleton Design Pattern ne için ve nasıl kullanılır. Bu yazımda bu sorulara cevap vermeye çalışacağım. Tasarım Desenleri (Design Patterns) yazılım dünyasında özellikle nesne tabanlı dillerde karşılaşılan genel-geçer problemlere üretilen çözümlerin..','<p>Tasarım Desenleri (Design Patterns) yazılım d&uuml;nyasında &ouml;zellikle nesne tabanlı dillerde karşılaşılan genel-ge&ccedil;er problemlere &uuml;retilen &ccedil;&ouml;z&uuml;mlerin belli bir standarda oturtulmasıyla ve kod kullanılabilirliğini arttırmak amacıyla ortaya &ccedil;ıkan yapılardır. Kısaca tekerleği yeniden keşfetmeye gerek yok. Yazılım geliştirirken kuracağınız yapı aslında farkında olsanızda olmasanızda bir patterne ait olacaktır. Peki nedir bunlar? Tasarım desenleri temelde &uuml;&ccedil; sınıfa ayrılır:</p>\r\n<ul>\r\n<li>Creational Design Pattern : Yeni nesne oluşturma s&uuml;re&ccedil;lerini y&ouml;neten desenlerdir. &Ouml;rneğin Singleton, Prototype, Abstract Factory, vb</li>\r\n<li>Structural Design Patterns : Nesnelerin birbirleri ile olan ilişkilerini d&uuml;zenleyen desenlerdir. Facade, Decorator, Adapter, vb</li>\r\n<li>Behavioral Design Patterns : Sınıf ve nesnelerin davranışlarını, birbirleriyle nasıl iletişime ge&ccedil;eceklerini y&ouml;neten desenlerdir. &Ouml;rneğin Observer, Memento,Chain of Responsibility, vb</li>\r\n</ul>\r\n<p>Şimdi creational patternlerden olan Singleton Design Pattern\'i ile hızlıca başlayalım. Bu tasarım deseni uygulamanın yaşamı s&uuml;resince bir nesnenin sadece bir &ouml;rneğinin (instance) oluşturulmasını garantiler. Ama&ccedil; nesneye her ihtiya&ccedil; duyulduğunda s&uuml;rekli yenisini &uuml;retmek yerine bir kez &uuml;retip sonrasında hep bunu kullanmaktır. &Ouml;rneğin g&ouml;revi &uuml;r&uuml;nleri sepete eklemek olan bir sınıf yazdınız. Client tarafından her sepete &uuml;r&uuml;n ekleme isteğinde bu sınıftan yeni bir nesne oluşturmaya gerek yok. Tek bir tane &uuml;retip t&uuml;m istekler i&ccedil;in bunu kullanabiliriz.</p>\r\n<pre class=\"language-csharp\"><code>public class SingletonBasketService : IBasketService\r\n{\r\n    private string _name;\r\n    private static SingletonBasketService _singletonInstance;\r\n    \r\n    // private constructor ile new SingletonBasketService() \r\n	//diyerek yeni instance oluşturmayı engelliyoruz\r\n    private SingletonBasketService() { } \r\n    private SingletonBasketService(string name) { _name=name; }\r\n   \r\n    public static Singleton GetInstance(string name)\r\n    {\r\n        if (_single == null) { _single = new Singleton(name); }\r\n        return _single;\r\n    }\r\n\r\n    public override string ToString()\r\n    {\r\n        return _name;\r\n    }\r\n}</code></pre>\r\n<p>Multi thread uygulamalarda singleton design pattern kullanılacaksa \"lock\" ile aynı anda birden fazla threadin instance oluşturmasının &ouml;n&uuml;ne ge&ccedil;ebiliriz.</p>\r\n<pre class=\"language-csharp\"><code>private static object _lock = new object();\r\npublic static Singleton GetThreadSafeInstance(){\r\n    if (_single == null)\r\n    {\r\n        lock (_lock)\r\n        {\r\n            if (_single == null)\r\n                _single = new Singleton();\r\n        }\r\n    }\r\n    return _single;\r\n}</code></pre>','Design Pattern, Singleton Design Pattern, Creational Design Patterns','/res/img/entry/design_pattern.jpg','2017-11-07 12:18:13','2017-11-10 01:36:19','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (9,1,9,'MsSQL Sayfalama Yapma','MsSQL\'de vritabanından kayıt çekerken tüm kayıtları çekip backend tarafında sayfalama yapmak yerine direk veritabanında sayfalama yapıp sadece gerekli kayıtları çekebilirsiniz. ','<p>MsSQL\'de vritabanından kayıt &ccedil;ekerken t&uuml;m kayıtları &ccedil;ekip backend tarafında sayfalama yapmak yerine direk veritabanında sayfalama yapıp sadece gerekli kayıtları &ccedil;ekebilirsiniz. Bunun i&ccedil;in aşağıdaki gibi bir sorgu &ccedil;alıştırabilirsiniz.</p>\r\n<p>Diyelim ki &uuml;r&uuml;nler sayfanız var ve her sayfada 25 &uuml;r&uuml;n g&ouml;steriyorsunuz. Bu durumda 2. sayfadaki &uuml;r&uuml;nleri i&ccedil;in ş&ouml;yle bir sorgu hazırlıyoruz :</p>\r\n<pre class=\"language-sql\"><code>SELECT TOP 25 * FROM (\r\n       SELECT ROW_NUMBER() OVER (ORDER BY P.ProductID) AS ROW_NUM, P.*\r\n       FROM Products P\r\n  ) AS TT\r\n  WHERE TT.ROW_NUM&gt;25</code></pre>\r\n<p class=\"mt20\">Daha genel bir sorgu yazarsak;</p>\r\n<pre class=\"language-sql\"><code>DECLARE @page int;\r\nDECLARE @size int;\r\nSELECT TOP @size * FROM (\r\n     SELECT ROW_NUMBER() OVER (ORDER BY P.ProductID) AS ROW_NUM, P.*\r\n     FROM Products P\r\n) AS TT\r\nWHERE TT.ROW_NUM&gt;((@page-1) * @size)</code></pre>','MsSQL, Sayfalama Yapma, ROW_NUMBER Kullanımı','/res/img/entry/mssql.jpg','2017-11-09 10:15:14','2017-11-10 01:36:09','2',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (10,1,2,'AngularJS - Directive Kavramı','AngularJS\'de Directive kavramı nedir? Directive nasıl tanımlanır ve nasıl kullanılır? Directive hangi özelliklere sahiptir bu özllikler nasıl tanımlanır?  Bu makalede kısaca bu sorulara cevap vermeye çalışacağım. AngularJS\'nin en güçlü yönlerinden biri htmle müdahale edebilmesi, html\'in sınırları dışına çıkılabilmesine imkan vermesidir. Bunu ise directive yapısı sayesinde sağlar. Directive\'ler tekrar kullanılabilir html\'ler üreten yapılardır. ','<p>AngularJS\'nin en g&uuml;&ccedil;l&uuml; y&ouml;nlerinden biri htmle m&uuml;dahale edebilmesi, html\'in sınırları dışına &ccedil;ıkılabilmesine imkan vermesidir. Bunu ise directive yapısı sayesinde sağlar. Directive\'ler tekrar kullanılabilir html\'ler &uuml;reten yapılardır. Aşağıdaki gibi directive tanımı yapabiliriz.</p>\r\n<pre class=\"language-javascript\"><code>myApp.directive(\"firstDirective\", function () {\r\n    var result = {\r\n        restrict: \"E\", //Sadece html elemanı (tag) olarak kullanılabilir.\r\n        template: \"Merhaba D&uuml;nya, bu ilk directivim, yuppi..\",\r\n        replace:false\r\n    };\r\n    return result;\r\n});</code></pre>\r\n<p>myApp.directive(...) ile angularJS uygulamasına bir directive oluştur diyoruz. \"firstDirective\" ise directive\'in ismi. İkinci parametre ie directive\'in ne yapacağını belirleyen kuralları i&ccedil;eren nesneyi d&ouml;nd&uuml;ren fonksiyon. Bu kurallara yeri geldik&ccedil;e değineceğim. Oluşturduğumuz directive\'i html tarafında şu şekilde kullanırız.</p>\r\n<pre class=\"language-javascript\"><code>&lt;first-directive&gt;Y&uuml;kleniyor..&lt;/first-directive&gt;\r\nSonu&ccedil; : Merhaba D&uuml;nya, bu ilk directivim, yuppi..</code></pre>\r\n<p class=\"mt20\"><i>Not: Directive tanımında verdiğimiz \"firstDirective\" ismi ile html tarafında kullandığımız \"first-directice\" eşleşmiyor. Angular bunu nasıl anlıyor peki? Angular html tarafında kullandığımız isimlendirmenin başındaki x- veya data- etiketlerini siler. Daha sonra kalan kısımda - kısımlarını siler ve kalan kısmı da camelCase yapıya d&ouml;n&uuml;şt&uuml;r&uuml;r. Oluşan isimle bir directive eşleşirse angular directive bu noktada &ccedil;alıştırır. Mesela data-custom-directive işlendikten sonra customDirective\'e &ccedil;evrilir.</i></p>\r\n<h3>Restrict</h3>\r\n<p>Bu &ouml;zellik directivin html tarafında nasıl kullanılabileceğini belirtir. D&ouml;rt değer alır: E, A, C ve M. Sırasıyla E; html element(tag), A; html attribute, C css class, M html yorum (comment). Bunlardan birini se&ccedil;ebileceğimiz gibi kombinasyonu da se&ccedil;ebiliriz. &Ouml;rneğin restrict:\"EA\" ile hem eleman olarak hem attribute olarak kullan diyoruz.</p>\r\n<pre class=\"language-javascript\"><code>//html tag olarak kullanımı\r\n&lt;first-directive&gt;Y&uuml;kleniyor..&lt;/first-directive&gt;\r\n//html attribute olarak kullanım\r\n&lt;div first-directive &gt;Y&uuml;kleniyor..&lt;/div&gt;\r\n//css class olarak kullanım\r\n&lt;div class=\"wrapper first-directive\" &gt;Y&uuml;kleniyor..&lt;/div&gt;\r\n//html yorum olarak kullanım, &ccedil;ok fazla tercih edilmez.\r\n&lt;!-- directive: first-directive exp --&gt;</code></pre>\r\n<h3>Template</h3>\r\n<p>Bu &ouml;zellik directice compile edildiğinde oluşacak html &ccedil;ıktısını belirtir. Diğer bir ifadeyle directivin kullanacağı html şablondur. html ile birlikte angular ifadeleri (expression) de i&ccedil;erebilir. Eğer &ccedil;ıkacak html &ccedil;ıktısı b&uuml;y&uuml;kse \"template\" &ouml;zelliği yerine \"templateUrl\" &ouml;zelliğini kullanmak daha mantıklı. B&ouml;ylece &uuml;retilecek htmli ayrı bir dosyaya taşıyabilir ve directive i&ccedil;erisinden templateUrl ile alabilirsiniz.</p>\r\n<pre class=\"language-javascript\"><code>template:\"<b>Hello</b> world {{name}} <br />\"\r\n//veya product-list.html dosyasındaki htmli şablon olarak kullan diyebiliriz.\r\ntemplateUrl:\"product-list.html\"</code></pre>\r\n<h3>Replace</h3>\r\n<p>Bu &ouml;zellik &uuml;retilecek html\'in directive\'in kullanıldığı elemanın yerine ge&ccedil;ip ge&ccedil;meyeceğini belirler. Eğer true olursa \"first-directice\" i&ccedil;in &lt;first-directive&gt;...&lt;/first-directive&gt; tagları silinecek ve &uuml;retilen html bunun yerine ge&ccedil;ecektir, false değeri verilirse &uuml;retilen html bu tagların i&ccedil;ine yazılacaktır.</p>\r\n<h3>Scope</h3>\r\n<p>&Ouml;zellikle belirtilmediği s&uuml;rece directive kendi scope\'unu oluşturmaz ve parent scope\'u kullanır. Bu ise directivin i&ccedil;inde kullanıldığı ng-controller\'a ait scope\'dur. Ancak bazı durumlarda directive\'in parent scope\'a erişmesini istemeyiz. Mesela directive bir&ccedil;ok yerde (birden fazla) kullanılacaksa parent scope\'a bağımlı olması istenmez. Ayrıca parent scope\'a erişmesi durumunda birşeyler değiştirmesi, m&uuml;dahale etmesi olasıdır. Bu durumlarda directive scope &ouml;zelliği ekleriz. Buna \"Isolated scope\" da denir.</p>\r\n<pre class=\"language-javascript\"><code>myApp.directive(\'directiveScope\', function () {\r\n    return {\r\n        restrict: \"EA\",\r\n        scope: {},  //Controller scope\'u yerine isolated scope kullan\r\n        template: \'Name: {{customer.name}} Address: {{customer.address}}\'\r\n    };\r\n});</code></pre>\r\n<p class=\"mt20\"><b>scope</b> &ouml;zelliği &uuml;&ccedil; değer alır : true, false ve {}. Eğer false ge&ccedil;ersek directive parent scope\'u kullanır. Eğer true yaparsak bu durumda directive yeni bir scope alır ancak bu scope parent scopedan t&uuml;rer. Yani directive scopunda değişen birşey parenta yansımaz. Ancak parent scopeda bir değişiklik directive scopunda da değişir. {} ise tamamen yeni bir scope (isolated scope) oluşturur. Isolated Scope kavramına bir sonraki makalede daha detaylı değineceğim.</p>','AngularJS, Directive Kavramı, Isolated Scope, AngularJS Directive','/res/img/entry/angularjs.jpg','2017-11-12 02:56:12','2017-11-12 03:49:04','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (11,1,2,'AngularJS - Directive Scope Isolation','Isolated Scope nedir? Directive\'ler niye isolated scope\'a ihtiyaç duyar? İsolated scope parent scope ile nasıl etkileşim kurabilir? Bu makalede bu sorulara yanıt bulmaya çalışacağım. Directive\'ler normalde parent scope\'u kullanırlar. Ancak bazı durumlarda directive\'in parent scope\'a erişmesini iste..','<p>Directive\'ler normalde parent scope\'u kullanırlar. Ancak bazı durumlarda directive\'in parent scope\'a erişmesini istemeyiz. Mesela directive bir&ccedil;ok yerde (birden fazla kez) kullanılacaksa parent scope\'a bağımlı olması istenmez. Ayrıca parent scope\'a erişmesi durumunda birşeyler değiştirmesi, m&uuml;dahale etmesi olasıdır. Bu durumlarda directive scope &ouml;zelliği ekleriz. Buna \"Isolated scope\" da denir. Varsayılan olarak oluşturduğumuz directive parent scopu kullanır. Eğer directive\'in scope &ouml;zelliğini \"true\" yaparsak parent scopedan t&uuml;reyen bir child scopu olur:</p>\r\n<pre class=\"language-javascript\"><code>myApp.directive(\"firstDirective\", function () {\r\n    var result = {\r\n        restrict: \"E\", //Sadece html elemanı (tag) olarak kullanılabilir.\r\n        template: \"Merhaba D&uuml;nya, bu ilk directivim, yuppi..\",\r\n        scope: true //parent scopedan t&uuml;reyen bir child scope kullan\r\n    };\r\n    return result;\r\n});</code></pre>\r\n<p class=\"mt20\">Eğer parent scope erişimi tamamen kısıtlamak istersek scope &ouml;zelliğini {} olarak belirtiriz. B&ouml;ylece directive, parent scope\'dan bağımsız kendine has bir scope sahibi olur. Peki parent scope ile hi&ccedil; mi iletişime ge&ccedil;emeyeceğiz? Ge&ccedil;mek istersek &uuml;&ccedil; farklı şekilde iletişim kurmaya devam edebiliriz :</p>\r\n<h3>@ ile One Way Text Binding</h3>\r\n<p>@ prefix\'ini kullanarak isolated scope ile parent scope arasında tek y&ouml;nl&uuml; bir iletişim kurarız. Bu iletişim kanalının &ouml;zelliği sadece metinsel ifadeleri parent scopedan isolated scopa yollayabiliriz. Tersi m&uuml;mk&uuml;n değil. Html tarafında aşağıdaki gibi directive iki değer g&ouml;nderiyoruz:</p>\r\n<p class=\"demo-row\"><a href=\"../../../angular-demo/isolated-scope\">Demo i&ccedil;in Tıklayın</a></p>\r\n<pre class=\"language-markup\"><code>&lt;input type=\"text\" ng-model=\"colortext\" placeholder=\"Enter a color\" /&gt;\r\n&lt;color-me color=\"{{colortext}}\" color-pattern=\"hexadecimal\" /&gt;</code></pre>\r\n<p class=\"mt20\">Directive \"color\" ve \"color-pattern\" &ouml;zelliklerine aşağıdaki gibi erişebilir. \"color\" &ouml;zelliği isolated scope\'da da aynı isimle kullanıldığı i&ccedil;in \"color:\'@\'\" demek yeterli oluyor. \"color-pattern\" ise i&ccedil; scope\'da \"pattern\" olarak yeniden isimlendirilmiş :</p>\r\n<pre class=\"language-javascript\"><code>myApp.directive(\'colorMe\', function () {\r\n    return {\r\n        scope: {\r\n            pattern:\'@colorPattern\'\r\n            color: \'@\'\r\n        },\r\n        restrict: \'AE\',\r\n        replace: true,\r\n        template: \'&lt;p style=\"background-color:{{color}};\"&gt;I was colored by {{pattern}}&lt;/p&gt;\',\r\n    };\r\n});</code></pre>\r\n<h3>\'=\' ile Two Way Binding</h3>\r\n<p>= prefix\'i ise \"@\"den farklı olarak iki y&ouml;nl&uuml; bir iletişim kanalı a&ccedil;ar. &Uuml;stelik bu iletişim kanalında d&uuml;z metinler değil scope modelleri de taşınabilir. İki y&ouml;nl&uuml; iletim olduğu i&ccedil;in parent scopedaki değişim i&ccedil; scopu i&ccedil; scopdaki değişim ise parent scopu etkiler. Html tarafında aşağıdaki gibi \"color\" ve \"title\" &ouml;zelliklerini directive g&ouml;nderiyoruz :</p>\r\n<pre class=\"language-markup\"><code>&lt;input type=\"text\" ng-model=\"colortext\" placeholder=\"Enter a color for parent scope\" /&gt;\r\n&lt;new-color-me color=\"colortext\" title=\"{{customer.name}}\" /&gt;</code></pre>\r\n<p class=\"mt20\">Directive bu &ouml;zelliklere aşağıdaki gibi erişip kullanabilir.</p>\r\n<pre ng-non-bindable=\"\"><code>myApp.directive(\'newColorMe\', function () {\r\n    return {\r\n        scope: {\r\n            color: \'=\',\r\n            title:\'@\'\r\n        },\r\n        restrict: \'AE\',\r\n        replace: true,\r\n        template: \'&lt;div&gt;&lt;input type=\"text\" ng-model=\"color\" placeholder=\"Enter a color for isolated scope\" /&gt;&lt;p style=\"background-color:{{color}}\"&gt;I was colored by {{title}}&lt;/p&gt;&lt;/div&gt;\',\r\n    };\r\n});</code></pre>\r\n<h3>&amp; ile Parent Scope\'daki Methodları Kullanma</h3>\r\n<p>Bazen directive parent scope\'un bir methodunu kullanmak isteyebilir. &amp; prefixi ile bunu sağlayabiliriz. Mesela girilen metni tersden yazan bir directive yapalım. Ama directive parent scope\'da yer alan controller\'ın reverse() metodu ile yapsın bunu. Html tarafında aşağıdaki gibi \"reverseMe()\" metodunu directive\'in kullanımına sunabiliriz. :</p>\r\n<pre class=\"language-markup\"><code>&lt;reversable reverseMethod=\"reverseMe(chore)\" /&gt;</code></pre>\r\n<p class=\"mt20\">Directive ise kendi i&ccedil;inde bu metodu ş&ouml;yle kullanabilir artık :</p>\r\n<pre ng-non-bindable=\"\" class=\"language-javascript\"><code>myApp.directive(\'reversable\', function () {\r\n    return {\r\n        restrict: \'E\',\r\n        scope: {\r\n            reverse: \"&amp;reverseMethod\"\r\n        },\r\n        template: \'&lt;input type=\"text\" ng-model=\"message\" /&gt;{{message}}&lt;button class=\"btn btn-success\" ng-click=\"reverse({msg:message})\"&gt;Terse &Ccedil;evir&lt;/button&lt;\'\r\n    };\r\n});\r\n\r\n//ve controller i&ccedil;erisinde reverseMe metodu\r\nmyApp.controller(\'choreCntrl\', function ($scope, $filter) {\r\n    $scope.reverseMe = function (msg) {\r\n        //msg = $filter(\'reverseText\')(msg);\r\n        alert($filter(\'reverseText\')(msg));\r\n    };\r\n});</code></pre>','AngularJS, Directive Isolated Scope, One Way Text Binding, Two Way Text Binding','/res/img/entry/angularjs.jpg','2017-11-15 12:26:20','2017-11-16 01:47:51','2',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (12,2,16,'C# Hashset  Kullanımı','HashSet<T>  C#\'da kullanabileceğimiz Generic bir yapıdır. Generic olduğu için class veya diğer string, int, double vb veri türleri içinde kullanabilir. İçerisine eklenen verileri özel bir hash yapısı ile saklar ve bu verilerde tekrar eden kayıt var ise bunları listesine eklemez.','<p>HashSet&lt;T&gt; C#\'da kullanabileceğimiz Generic bir yapıdır. Generic olduğu i&ccedil;in class veya diğer string, int, double vb veri t&uuml;rleri i&ccedil;inde kullanabilir. İ&ccedil;erisine eklenen verileri &ouml;zel bir hash yapısı ile saklar ve bu verilerde tekrar eden kayıt var ise bunları listesine eklemez.</p>\r\n<h3>&Ouml;zellikler</h3>\r\n<ul>\r\n<li>&Ccedil;ok hızlıdır</li>\r\n<li>Generic olduğu i&ccedil;in b&uuml;t&uuml;n tipteki kayıtları listeye ekleyebiliris. Null değer de buna dahil.</li>\r\n<li>Sıralı bir kolleksiyon tipi değildir i&ccedil;erisine eklenen değerlerin indexleri ile ilgili değişmeme garantisi yoktur.</li>\r\n<li>Listesine yani i&ccedil;erisine eklenen kayıtlar tekrarlanamaz. Tekrarlayan kayıtlar var ise sadece 1 kaydı geri verir.</li>\r\n<li>İ&ccedil;erisinde arama yaparken&nbsp;hash-based searching algorithm&nbsp;ile arama yapar.</li>\r\n</ul>\r\n<p><strong>&Ouml;rnek Kullanımı</strong></p>\r\n<pre class=\"language-csharp\"><code>var nameList = new HashSet&lt;string&gt; {\"yener\",\"osman\",\"ahmet\",\"ali\",\"orhan\"};\r\n\r\n//Listedeki toplam kayıt sayısı\r\nvar nameCount = nameList.Count;\r\n\r\n//Liste i&ccedil;erisinde olan kayıdı arama\r\nvar hasName = nameList.Contains(\"yener\");\r\n\r\n//İ&ccedil;erindeki kayıtlara erişip kullanmak\r\nforeach (var itemName in nameList)\r\n{\r\n    Console.WriteLine(itemName);\r\n}</code></pre>','CSharp, Hashset Kullanımı, Hashset Özellikleri, Hashset HashBased Searching Algorithm','/res/img/entry/no-image.jpg','2017-11-16 08:52:43','2017-11-17 14:45:56','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (13,1,2,'Angular JS - Directive Transclude & Compile & Link Function','Directive\'in transclude özelliği directive\'in şablonu içerisine dışardan html şablon eklemeyi mümkün kılar. Bu makalede transclusion yapısını  ve ng-transclude directive\'ini açıklamaya çalışacağım. Sonrasında directive\'in compile ve link fonksiyonlarına ve kullanımlarına örnekler üzerinden inceleyeceğiz.','<h3>Transclude</h3>\r\n<p>Transclution, directive\'in şablonu i&ccedil;erisine dışardan html şablon eklemeyi m&uuml;mk&uuml;n kılar. Diğer bir ifadeyle directive\'i kim kullanıyorsa istiyorki kendi &ouml;zel html\'i de directive i&ccedil;inde kullanılabilsin. Tabi şunu belirtmek lazım eklenen şablon directive scope\'u yerine parent scope\'u kullanacaktır.&nbsp; Peki transclution yapısını nasıl kullanacağız?&nbsp; &Ouml;nce directive\'in \"transclude\" &ouml;zelliğini true yapacağız, sonrasında directive\'in şablonu i&ccedil;erisinde dışardan verilen html nereye yazılacaksa o kısma \"ng-transclude\" directive\'ni yazacağız. &Ouml;rneğin;</p>\r\n<pre class=\"language-javascript\"><code>myApp.directive(\"transcludeMe\", function () {\r\n    return {\r\n        scope: {},\r\n        restrict: \'E\',\r\n        transclude: true,\r\n        template: \'&lt;div style=\"text-align:left;padding:0;\"&gt;\r\n                        &lt;span style=\"color:#dc143c;\"&gt;Bu i&ccedil;erik directive şablonundan geliyor.&lt;/span&gt;\r\n                        &lt;span ng-transclude style=\"color:blue;\"&gt;Transclude i&ccedil;eriği buraya gelecek&lt;/span&gt;\r\n                  &lt;/div&gt;\'\r\n    };\r\n});</code></pre>\r\n<p class=\"mt20\">Bu directive\'i aşağıdaki gibi kullandığımızda directive i&ccedil;erisinde yer alan html şablon directive\'in kendi şablonunda \"ng-transclude\" ile belirttiğimiz elemanla yer değiştirecek ve directive scope\'u yerine parent scope\'u kullanacaktır :</p>\r\n<p class=\"demo-row\"><a href=\"../../../angular-demo/transclusion-compile-link\">Demo i&ccedil;in Tıklayın</a></p>\r\n<pre class=\"language-markup\"><code>&lt;transclude-me&gt;\r\n	Bu i&ccedil;erik directive\'de \"ng-transclude\" alanında g&ouml;z&uuml;kecek.\r\n	&lt;button ng-click=\"showMessage()\" class=\"btn btn-info\"&gt;Click Me!&lt;/button&gt;\r\n&lt;/transclude-me&gt;</code></pre>\r\n<h3>Compile Fonksiyonu</h3>\r\n<p>Compile fonksiyonu uygulama y&uuml;klenirken bir kez &ccedil;alışan directive metodudur. AngularJS html sayfası y&uuml;klendikten sonra bu metodu bir kez &ccedil;ağırır. Compile fonksiyonu ayrıca link fonksiyonu d&ouml;nd&uuml;r&uuml;r. Bu fonksiyon directive\'in bağlı olduğu html elementlerin yer aldığı $scope değiştik&ccedil;e &ccedil;ağrılır.</p>\r\n<p>Compile fonksiyonu $scope almaz bu aslında bi yerde performanslıdır. Mesela directive\'in ng-repeat ile birlikte birden fazla kez kullanılacaksa Compile fonksiyonu sadece bir kez &ccedil;alıştırılır. Ancak link fonksiyonu her klon (her tekrarda) i&ccedil;in &ccedil;alıştırılır.</p>\r\n<pre class=\"language-javascript\"><code>demoApp.directive(\"compileDemo\", function () {\r\n    return {\r\n        restrict: \'A\',\r\n        compile: function (element, attributes) {\r\n            element.css(\"border\", \"1px solid #cccccc\");\r\n            var deneme = attributes.deneme; //accessing an attribute\r\n            console.log(\" attributes.deneme : \", deneme);\r\n\r\n            //linkFunction is linked with each element with scope to get the element specific data.\r\n            var linkFunction = function ($scope, element, attributes) {\r\n                element.html(\"Student: \" + $scope.student.name + \", Age: \" + $scope.student.age);\r\n                element.css(\"background-color\", \"#ff00ff\");\r\n            }\r\n            return linkFunction;\r\n        }\r\n    };\r\n});</code></pre>\r\n<p class=\"mt20\">Bu directive\'i aşağıdaki gibi kullanabiliriz :</p>\r\n<pre class=\"language-markup\"><code>&lt;div compile-demo deneme=\"Ses 1,2,3\"&gt;Y&uuml;kleniyor...&lt;/div&gt;</code></pre>\r\n<h3>Link Fonksiyonu</h3>\r\n<p>Link fonksiyonu directive\'in DOM &uuml;zerinde değişiklikler yapmasına imkan sağlar. Compile fonksiyonu sadece birkez başlangı&ccedil;ta &ccedil;alıştığı i&ccedil;in scope değiştik&ccedil;e html &uuml;zerinde birşeyler yapacaksak compile() yerine link() fonksiyonunu kullanmak lazım. Link fonksiyonu d&ouml;rt parametre alır:</p>\r\n<ul>\r\n<li>scope : Directive scopu (kendi scopu yoksa parent scope)</li>\r\n<li>elem : html tarafındaki directivin kendisi (DOM elemanı)</li>\r\n<li>directive\'in sahip olduğu &ouml;zellikler (attribute) k&uuml;mesi</li>\r\n<li>controller : Directive\'in kullanacağı controller dizini (array). Başka bir makalede detaylı inceleyeceğiz.</li>\r\n</ul>\r\n<pre class=\"language-javascript\"><code>demoApp.directive(\"linkDemo\", function () {\r\n    return {\r\n        restrict: \'AE\',\r\n        replace: true,\r\n        template: \'&lt;p style=\"color:{{textColor}}\"&gt;Buraya Tıkla&lt;/p&gt;\',\r\n        link: function (scope, elem, attrs) {\r\n            elem.bind(\'click\', function () {\r\n                elem.css(\'background-color\', \'#f00\');\r\n                scope.$apply(function () {\r\n                    scope.colortext = \"blue\";\r\n                });\r\n            });\r\n\r\n            elem.bind(\'mouseover\', function () {\r\n                elem.css(\'cursor\', \'pointer\');\r\n                elem.css(\'background-color\', \'yellowgreen\');\r\n            });\r\n        }\r\n    };\r\n});</code></pre>\r\n<p class=\"mt20\">Bu directive\'i aşağıdaki gibi kullanabiliriz :</p>\r\n<pre class=\"language-markup\"><code>&lt;div link-demo&gt;Y&uuml;kleniyor...&lt;/div&gt;</code></pre>','AngularJS, Transclude, Transclution, Compile Function, Link Function','/res/img/entry/angularjs.jpg','2017-11-23 07:55:49','2017-11-24 03:58:15','3',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (14,1,9,'MsSQL Truncate, Delete ve Drop Table','Bu makalede MsSQL veritabanında Truncate Table, Drop Table ve Delete sql komutlarının nasıl çalıştığına, nasıl kullanıldığını ve aralarındaki kullanım farklılıklarını inceleyeceğiz. ','<h3>Delete From Kullanımı</h3>\r\n<p>DELETE deyimi, veritabanında bulunan bir tablodaki istenilen kayıtları silmek amacıyla kullanılan bir SQL deyimidir. Eğer tablodakit&uuml;m kayıtları silmek isterseniz WHERE koşulu kullanmadan sorguyu &ccedil;alıştırmanız yeterlidir. Ancak sadece belirli şartlara uyan kayıtları silmek istiyorsanız WHERE kullanarak koşullarınızı belirtebilirsiniz.</p>\r\n<pre class=\"language-sql\"><code>DELETE FROM Products;\r\n\r\nDELETE FROM Products WHERE [Status]=0 AND CatgoryID=2;\r\n\r\nDELETE FROM Products WHERE BrandID IN \r\n	(SELECT ID FROM Brands WHERE Name = \'Adidas\');\r\n\r\nDELETE FROM Suppliers s (NOLOCK) WHERE EXISTS\r\n     (SELECT c.Name FROM Customers c (NOLOCK)\r\n      WHERE c.ID = s.SupplierID AND c.Name = \'Aware\');</code></pre>\r\n<p class=\"mt20\">İlk satırda Products tablosundaki t&uuml;m kayıtları siliyoruz. Fakat burada dikkat edilmesi gereken husus, bu işlemden sonra personel tablosu yapısını aynen korur. Yani i&ccedil;indeki kayıtlar silinir ama tablo yapısı, alan isimleri, veri t&uuml;rleri, birincil anahtar, vs. hepsi korunur. İkinci satırda ise sadece pasif ve kategorisi \'XXX\' olan kayıtları sil diyoruz.</p>\r\n<h3>Drop Table Kullanımı</h3>\r\n<p>DELETE komutu ile sadece tablodaki kayıtları silebiliriz. Ancak eğer tabloyu i&ccedil;indeki kayıtlarla beraber tamamen silmek istersek DELETE yerine DROP TABLE komutunu kullanırız. Veri tabanında bir tablo, DROP TABLE komutu ile silindiği takdirde bu tablodan &uuml;retilmiş b&uuml;t&uuml;n VIEW\'ler, tablo &uuml;zerindeki indeksler ve tablo i&ccedil;in konulmuş b&uuml;t&uuml;n &ouml;zellikler de sistemden silinir. Bir tabloyu sadece sahibi kaldırabilir.</p>\r\n<pre class=\"language-sql\"><code>DROP TABLE table_name\r\nDROP TABLE Products;\r\nDROP TABLE Customers;</code></pre>\r\n<h3>Truncate Table Kullanımı</h3>\r\n<p>Truncate Table komutu da yine tablodaki t&uuml;m kayıtları silmeye yarar. Delete Table ile &ccedil;alışma mantığı benziyor yazım şekillleri, performans, kaynak kullanımı gibi konularda farklı davranırlar.</p>\r\n<pre class=\"language-sql\"><code>TRUNCATE TABLE table_name;\r\nTRUNCATE TABLE Products;</code></pre>\r\n<p class=\"mt20\">Truncate ve Delete komutlarının ikiside bir tabloda bulunan kayıtları silmek i&ccedil;in kullanılır. Ancak Truncate komutu Delete komutu gibi WHERE koşulu ile birlikte kullanılamaz. İki komutta tabloyu fiziksel olarak ortadan kaldırmaz. Truncate komutu Delete komutuna g&ouml;re daha hızlı ve performanslıdır.</p>\r\n<p class=\"mt20\">Delete komutu tabloda ilgili satırları silerken, her satır silme işlemi i&ccedil;in transaction log tutulur. Truncate komutu &ccedil;alışırken ise her satır i&ccedil;in log tutulmaz, sadece yapılan işlem i&ccedil;in log tutulur (tabloya ait veri bloğunu (data pages) serbest bırakır, b&ouml;ylece t&uuml;m satırları tek seferde siler ve sadece bu serbest bırakma işleminim logunu tutar). Bu y&uuml;zden de sildiğimiz tablo ne kadar b&uuml;y&uuml;k olursa olsun Delete komutuna g&ouml;re olduk&ccedil;a performanslı ve hızlı &ccedil;alışır.</p>\r\n<p>Aslında truncate komutu tabloda bulunan verileri silmez sadece veri bloğunu serbest bırakır. Bu y&uuml;zden veritabanı shrink yapılana kadar veya bu bloğa yeni veri yazılana kadar silindiğini sandığımız veriler hala ordadır. Bu işlem &ccedil;ok fazla kaynak t&uuml;ketmeyeceği i&ccedil;in Truncate komutu &ccedil;ok hızlı &ccedil;alışmaktadır. Eğer Truncate komutunu bir transaction i&ccedil;inde kullanırsanız ve sonrasında roll-back yaparsanız, serbest bırakılan veri bloğu yeniden tabloya bağlanarak eski haline getirilmiş olur.</p>','MsSQL, Truncate, Truncate Table, Drop Table, Delete, Delete From, Truncate vs Delete','/res/img/entry/mssql.jpg','2017-11-27 13:33:10','2018-01-25 07:15:18','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (15,1,9,'MsSQL - Char, VarChar, NChar, NVarChar ve Text Tipleri','MsSQL de metinsel veri saklamak istediğimiz durumlarda kullanabileceğimiz veri tipleri nelerdir? Char, VarChar, NChar, NVarChar ve Text Tipleri arasındaki farklar nelerdir? Çoklu dilde veri tutmak için hangi tipleri kullanabilirim veya hangisi hafızada daha az yer kaplar? Kısaca bu konudaki notlarımı paylaşıyorum.','<p>MsSQL de metinsel veri saklamak istediğimiz durumlarda kullanabileceğimiz 5 farklı veri tipi vardır. Bunlardan NCHAR ve NVARCHAR tipi, &ccedil;oklu dilde (multilanguage) &ldquo;UNICODE&rdquo; verileri tutma imkanı sunar. Her bir karakter 16bit (2 BYTE) yer kaplarken en fazla en fazla 4000 karaktere kadar i&ccedil;erik tutabiliriz.</p>\r\n<p>Buna karşın CHAR ve VARCHAR ise UNICODE olmayan ASCII karakterleri tutmak i&ccedil;in kullanılabilir. Bu tiplerde her karakter 8 bit (1 BYTE) yer kaplar ve en fazla en fazla 8000 karaktere kadar i&ccedil;erik tutabiliriz. Fakat bu kadar bize yetmez derseniz VARCHAR(MAX) ile 2GB\'a kadar veri saklayabilirsiniz.</p>\r\n<p>CHAR ve NCHAR tipleri sabit boyutludur. Yani CHAR(100) dediğinizde hafızada 100 karakter boyutu yer a&ccedil;ılır. Siz bu alana 2 karakter de yazsanız 99 karakter de yazsanız hafızada 100\'l&uuml;k yer ayrılır. Buna karşın NVARCHAR ve VARCHAR değişken boyutludur. Yani VARCHAR(100) alana 2 karakter yazdığınızda hafızada sadece 2 karakterlik yer a&ccedil;ılır.</p>\r\n<p>TEXT tipi ise eski versiyonları desteklemek i&ccedil;in var. VARCHAR(MAX) ile aynı &ouml;zelliktedir. 2147483647 karaktere (yani 2GB) kadar veri saklar. TEXT tipi yerine varchar(MAX) kullanımı tavsiye ediliyor.</p>','MsSQL, Char, Varchar, Nchar, Nvarchar, Text, Veri Tipleri','/res/img/entry/mssql.jpg','2017-12-10 03:52:45','2017-12-10 03:52:45','3',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (16,1,12,'Facade Tasarım Deseni','Bu makalede yapısal tasarım desenlerinden olan Facade Tasarım desenini, nasıl ve hangi amaçla kullanıldığını anlatmaya çalışacağım.  Yapısal (structural) tasarım desenlerinden olan Facade Tasarım Deseni, istemci sınıfların tüm sistemi tanımasına gerek kalmadan\r\n Facade nesnesi üzerinden alt sistemdeki nesneleri kullanabilmesini sağlar.','<p>Facade Design Pattern (yada Facade Tasarım Deseni) yapısal (structural) tasarım desenlerinden olup, istemci sınıfların t&uuml;m sistemi tanımasına gerek kalmadan Facade nesnesi &uuml;zerinden alt sistemdeki nesneleri kullanabilmesini sağlar. Ama&ccedil; varolan kompleks bir sistemi daha kolay anlaşılabilir ve daha kolay kullanılabilir hale getirmektir. Ş&ouml;yle bir &ouml;rnek vereyim, diyelim ki e-ticaret sitesinde sepete &uuml;r&uuml;n ekleyeceksiniz. &Uuml;r&uuml;n&uuml; sepete eklemek i&ccedil;in &ouml;nce &uuml;r&uuml;n servisinden &uuml;r&uuml;n&uuml; bulmanız lazım, sonra sepet servisinden kullanıcının sepetini getirmelisiniz. Ve belki eğer &uuml;r&uuml;n&uuml;n varyant se&ccedil;imleri varsa varyant servisinden varyant &uuml;r&uuml;nleri bulmanız gerekecek. Bu durumda web yada mobilden sepete &uuml;r&uuml;n eklemek isteyen istemci sınıfları t&uuml;m bu akışa sokmak yerine bir Facade sınıfı oluşturup t&uuml;m s&uuml;reci bu sınıf &uuml;zerinden y&ouml;netebiliriz. B&ouml;ylece istemci t&uuml;m bu servislerin &ccedil;alışma mantığını bilmeden facade ara y&uuml;z&uuml;nden gerekli parametreleri yollar ve Facade nesnesi gerekli s&uuml;reci tamamlar.</p>\r\n<p>Facade tasarım deseni ile ilgili bilmeniz gereken, facade aray&uuml;z&uuml;nde kurulan kurallar, asıl işi yapan sınıflarla sıkı sıkıya bağlı olmamalıdır. Yani facade aray&uuml;z&uuml;n&uuml; sistemden tamamen &ccedil;ıkarttığımızda mevcut sistem aynen &ccedil;alışabilmelidir.</p>\r\n<p><img src=\"../../../res/img/entry/facade_pattern.jpg\" class=\"img-responsive\" alt=\"facade_pattern.jpg\" title=\"Facade Tasarım Deseni\" /></p>\r\n<p>Yukarda bahsettiğimiz sepete &uuml;r&uuml;n ekleme senaryosunu kodlarla &ouml;rnekleyelim. İstemci, &uuml;r&uuml;n-sepet-varyant servisleri ile tek tek &ccedil;alışmak yerine Facade sınıfının \"AddToBasket()\" metodunu &ccedil;ağıracak ve m&uuml;şterinin se&ccedil;tiği &uuml;r&uuml;n&uuml;n m&uuml;şteri sepetine eklenmesini sağlayacak.</p>\r\n<pre class=\"mt20 language-csharp\"><code>public class Facade\r\n{\r\n    private readonly IProductService _productService;\r\n	private readonly IBasketService _basketService;\r\n	private readonly IVariantService _variantService;\r\n	\r\n	public Facade(){\r\n		_productService = new ProductService();\r\n		_basketService = new BasketService();\r\n		_variantService = new VariantService();\r\n	}\r\n	\r\n    public bool AddToBasket(int userID, int productID, int quantity, string variantSelection)\r\n    {\r\n        var product = _productService.GetProduct(productID);\r\n        var basketID = _basketService.GetUserBasket(userID);\r\n        var variantItems = _variantService.GetVariants(variantSelection);\r\n        var result = _basketService.AddToBasket(basketID,product,quantity,variantItems);\r\n        return result;\r\n    }\r\n	\r\n	public bool RemoveFromBasket(int basketItemID)\r\n    {\r\n        var result = _basketService.RemoveBasketItem(basketItemID);\r\n        if(result.OK){\r\n			_productService.RefreshProductStock(basketItemID);\r\n		}\r\n        return result;\r\n    }\r\n}\r\n\r\npublic class ProductService : IProductService\r\n{\r\n    public Product GetProduct(int productID)\r\n    {\r\n		//Get product here\r\n        return product;\r\n    }\r\n}\r\n\r\npublic class BasketService : IBasketService\r\n{\r\n    public int GetUserBasket(int userID)\r\n    {\r\n		//Find user basket here\r\n        return basketID;\r\n    }\r\n	\r\n    public bool AddToBasket(int basketID,object product,int quantity,object variantItems)\r\n    {\r\n        //handle ad to basket here\r\n		return true;\r\n    }\r\n}\r\n\r\npublic class VariantService : IVariantService\r\n{\r\n    public List<variant> GetVariants(string variantSelection)\r\n    {\r\n		//Find variant items here\r\n        return result;\r\n    }\r\n}</variant></code></pre>','Design Pattern, Facade Design Pattern, Facade Tasarım Deseni, Structural Design Patterns','/res/img/entry/design_pattern.jpg','2017-12-13 06:11:59','2017-12-18 03:28:18','2',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (17,1,2,'AngularJS - Service ve Factory Kullanımı','AngularJS mimari olarak MVC mimarisini uygulamaya çalışır. AngularJS Servisleri ise bu yapıda controller ve view arasındaki model yapısını sunan business katmanını oluşturur diyebiliriz. \"Controller\" model için gerekli veriyi servislerden alır view tarafına sunar ve aynı şekilde viewdan gelen isteği de servislere yönlendirerek kod akışını kontrol eder.','<p>AngularJS mimari olarak MVC mimarisini uygulamaya &ccedil;alışır. AngularJS Servisleri ise bu yapıda controller ve view arasındaki model yapısını sunan business katmanını oluşturur diyebiliriz. \"Controller\" model i&ccedil;in gerekli veriyi servislerden alır view tarafına sunar ve aynı şekilde viewdan gelen isteği de servislere y&ouml;nlendirerek kod akışını kontrol eder.</p>\r\n<p>AngularJS\'de tanımlı hazır servisler olduğu gibi ($http, $location, $route vb) kendi &ouml;zel servislerimizi de oluşturabiliriz. Bir servisi oluşturduktan sonra <b>controller</b>, <b>directive</b> ya da <b>filter</b> i&ccedil;erisine enjekte (injection) ederek kullanabiliriz. Angularda servis g&ouml;revi g&ouml;ren iki yapı var: Service ve Factory. Aşağıda her ikisini nasıl tanımladığımızı ve kullandığımızı &ouml;rneklemeye &ccedil;alıştım.</p>\r\n<pre class=\"language-js\"><code>myApp.service(\'myService\', function () {\r\n    this.getInfo=function(){\r\n		return \"myService v1.0.0\";\r\n	};\r\n	\r\n	this.getPhones=function(keyword){\r\n		var phoneList=[\r\n			{name:\"Samsung Galaxy S6\", price:2599},\r\n			{name:\"Nokia 3310\", price:94.99}\r\n		];\r\n		\r\n		return {\r\n			list:phoneList,\r\n			query:keyword\r\n		}\r\n	};\r\n});</code></pre>\r\n<p class=\"mt20\">Servisler i&ccedil;in her ihtiya&ccedil; duyulduğunda yeni instance oluşturulur. Factory ise singleton bir yapıdadır ve uygulama genelinde tek bir instance oluşturulur. Factory oluşturmak i&ccedil;in;</p>\r\n<pre class=\"language-js\"><code>myApp.factory(\'githubFactory\', function ($http, $q) {\r\n    var githubFactory = {};\r\n    githubFactory.search = function (repoName) {\r\n        var deferred = $q.defer();\r\n        $http.get(\'https://api.github.com/search/repositories?q=\' + repoName + \'&amp;sort=stars&amp;order=desc\')\r\n            .then(function (response) {\r\n                deferred.resolve(response.data);\r\n            });\r\n        return deferred.promise;\r\n    };\r\n    return githubFactory;\r\n});\r\n</code></pre>\r\n<p class=\"mt20\">Serivis yada Factory oluşturduktan sonra controller, directive veya filter i&ccedil;erisine enjekte ederek kullanabiliriz;</p>\r\n<pre class=\"language-js\"><code>myApp.controller(\'serviceCntrl\', [\'$scope\', \'myService\',\'githubFactory\', \r\n	function ($scope, myService,githubFactory) {\r\n    \r\n	$scope.serviceInfo = myService.getInfo();\r\n	$scope.getPhones = function (keyword) {\r\n            $scope.phoneList = myService.getPhones(keyword);\r\n        });\r\n    \r\n    $scope.search = function () {\r\n        githubFactory.search($scope.repoName).then(function (data) {\r\n            $scope.results = data.items;\r\n        });\r\n    };\r\n}</code></pre>\r\n<h3>$http Servisi</h3>\r\n<p>$http servisi asenkron ajax istekleri yapmak i&ccedil;in kullanılan bir angularjs servisidir.</p>\r\n<pre class=\"language-js\"><code>myApp.service(\'myService\', function ($http) {\r\n    this.getPhones=function(keyword){\r\n		$http.get(\"/PhoneList/Search\",{q:keyword}).then(function(response){\r\n			return {\r\n				success:true\r\n				list:response.list,\r\n				query:keyword\r\n			}},\r\n			function(response) { //işlem hatalı ise\r\n				return {\r\n					success : false\r\n					message : response.message\r\n			}});\r\n	};\r\n});</code></pre>','AngularJS, AngularJS Service, AngularJS Factory, Service ve Factory, Service vs Factory','/res/img/entry/angularjs.jpg','2017-12-20 07:57:43','2017-12-20 08:00:05','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (18,1,17,'WCF Servislerine Giriş','WCF, uzun adıyla Windows Communication Foundation, Microsoft\'un dağıtık uygulama geliştirmeyi tek bir eksende birleştirdiği, servis yönelimli mimari (Service Oriented Architecture, SOA) yapısını baz alan bir framework API\'si olarak açıklanabilir.','<h3>WCF Nedir?</h3>\r\n<p>WCF, uzun adıyla Windows Communication Foundation, Microsoft\'un dağıtık uygulama geliştirmeyi tek bir eksende birleştirdiği, servis y&ouml;nelimli mimari (Service Oriented Architecture, SOA) yapısını baz alan bir framework API\'si olarak a&ccedil;ıklanabilir. WCF\'den &ouml;nce Microsoft\'un geliştirdiği XML Web Servisleri, .Net Remoting, MSMQ, COM+ gibi teknolojiler vardı. &Ouml;rneğin XML Web Servisleri, HTTP protokol&uuml; &uuml;zerinden SOAP tabanlı XML mesajları &uuml;zerinden mesajlaşmayı sağlarken, .NET Remoting ile TCP protokol&uuml; &uuml;zerinden daha performanslı olduğu i&ccedil;in binary mesajlaşma yapılabiliyordu.</p>\r\n<p>WCF ise t&uuml;m bu teknolojileri tek bir &ccedil;atı altında topladı. HTTP, TCP, Named Pipes ve MSMQ vb protokoller &uuml;zerinden haberleşme imkanı sağlaması onu platform bağımsız kıldı (Interoperability). Hem .NET uygulamaları hemde Java tabanlı uygulamalar ile windows, Linux ve Unix ortamlarından WCF servislerle iletişim kurulabilir. Bu esnek yapısı daha kolay ve hızlı uygulama geliştirmeyi sağladı. Ş&ouml;yle bir &ouml;rnek d&uuml;ş&uuml;n&uuml;n; e-ticaret siteleri i&ccedil;i ortak bir &ouml;deme servisi yazacaksınız. X web sitesi .NET teknolojisi kullanan ve daha iyi performans i&ccedil;in servisinizle TCP protokol&uuml; &uuml;zerinden binary mesaj yapısıyla haberleşmek isterken, Y web sitesi ise .NET teknoloji olmayan PHP tabanlı bir web sitesi olsun ve HTTP protokol&uuml; &uuml;zerinden XML/JSON mesajlarıyla haberleşmek istesin. WCF\'den &ouml;nce bu iki web sitesine hizmet verebilmek i&ccedil;in iki ayrı teknoloji &ouml;ğrenip, iki ayrı servis yapısı hazırlamanız gerekecekti. WCF ise bize şu motto ile gelir; bir kere geliştir, bir &ccedil;ok yerde kullan! Nasıl mı?</p>\r\n<p><img src=\"../../../res/img/entry/wcf_mimari.jpg\" alt=\"\" class=\"img-responsive\" /></p>\r\n<h3>EndPoint Kavramı ve WCF\'in ABC\'si</h3>\r\n<p>Bir WCF servis geliştirirken ilk olarak istemcilerin(client) servisimizle iletişime ge&ccedil;tiğinde servisin hangi fonksiyonaliteleri kullanabileceğini belirlememiz lazım. Bunu yapmanın en kolay yolu bir imza/kontrat (Contract) hazırlayıp istemcilere sunmaktır. Yazılım dilinde bunun karşılığı ise interface\'lerdir.</p>\r\n<p>Interface ve WCF servis arasındaki bağı ise [ServiceContract] ve [OperationContract] &ouml;zellikleri kurar. [ServiceContract] eklendiği interface\'i WCF servis\'in kontratına d&ouml;n&uuml;şt&uuml;r&uuml;rken [OperationContract] ise bu kontratta sunulacak hizmet şartlarını belirler (istemciler WCF servisin hangi metodlarını kullanabilecek) :</p>\r\n<pre class=\"language-csharp\"><code>[ServiceContract]\r\npublic interface IMyService\r\n{\r\n    [OperationContract]\r\n    string GetVersion();\r\n\r\n    [OperationContract]\r\n    List<employee> GetEmployeeList(Statuses status = Statuses.None);\r\n\r\n    [OperationContract(Name = \"GetEmployeeWithID\")]\r\n    Employee GetEmployee(int id);\r\n}</employee></code></pre>\r\n<p>Interface ile sunulacak hizmet tanımlarını belirledik. Şimdi bu kontratı işlevsel hale getirmemiz lazım. Bunun i&ccedil;in bu interface\'i tanımlayan(implement eden) bir sınıf oluşturuyoruz:</p>\r\n<pre class=\"language-csharp\"><code>[ServiceBehavior]\r\npublic class MyService : IMyService\r\n{\r\n    public string GetVersion()\r\n    {\r\n        return \"V1.0.0\";\r\n    }\r\n\r\n    public List<employee> GetEmployeeList(Statuses status = Statuses.None)\r\n    {\r\n        return null;\r\n    }\r\n\r\n    public Employee GetEmployee(int id)\r\n    {\r\n        return null;\r\n    }\r\n}</employee></code></pre>\r\n<p>B&ouml;ylece basit bir WCF servisin geliştirme(kodlama) kısmını tanımlamış olduk. Fakat servisin işlevsel olabilmesi i&ccedil;in, servisi dış d&uuml;nyaya yani istemciler(client)\'in kullanımına a&ccedil;mamız lazım. Bunun i&ccedil;in ise istemcilerin servisimize nasıl ve nereden ulaşacağı ile ilgili tanımlamalar yapmamız gerekiyor. Nasıl ulaşacağı sorusunun cevabı <b>binding</b> tanımı yapmaktır.</p>\r\n<p>Binding tanımları servisin iletişimde kullanacağı aktarım protokol&uuml;n&uuml;(Http, Tcp, NamedPipes vb.), kodlama(encoding text/xml, binary, mtom vb.) yapısını ve g&uuml;venlik gereksinimlerini(SSL, SOAP message security vb.) belirler. Diğer bir ifade ile istemcilerin wcf servisle nasıl iletişim kuracağını belirler. WCF servisin kendi yapısında tanımlı hazır bir s&uuml;r&uuml; binding &ccedil;eşidi vardır. &Ouml;rneğin netTcpBinding, TCP protokol&uuml; &uuml;zerinden binary mesajlaşmayı sağlarken, wsHttpBinding HTTP protokol&uuml; &uuml;zerinden g&uuml;venli mesajlaşma imkanı sunar. İlerleyen makalelerde binding &ccedil;eşitlerini daha detaylı inceleyeceğiz.</p>\r\n<p>Nereden ulaşacağı sorusunun cevabı ise <b>address</b> tanımı yapmaktır. Bu tanım aslında bir url yapısıdır ve wcf servisin hangi url\'den hizmet vereceğini belirler. Aynı zamanda se&ccedil;eceğimiz binding yapısına g&ouml;re adres protokol&uuml; değişmektedir.</p>\r\n<pre class=\"language-csharp\"><code>http://localhost:4782/MyService //Http protokol&uuml; &uuml;zerinden\r\nnet.tcp://localhost:9000/MyService //TCP protokol&uuml; &uuml;zerinden</code></pre>\r\n<p class=\"mt20\"><img src=\"../../../res/img/entry/wcf_abc.jpg\" alt=\"\" class=\"img-responsive\" /></p>\r\n<p>Toparlarsak tanımladığımız \"Address\", \"Binding\" ve \"Contract\" bir WCF servisin ABC\'sini oluşturur ve &uuml;&ccedil;&uuml; birlikte \"EndPoint\" yapısını oluştururlar. EndPoint ise bir servisin dış ortama sunulan aray&uuml;z&uuml; olarak d&uuml;ş&uuml;n&uuml;lebilir. İstemciler bu endpoint tanımları &uuml;zerinden servisle iletişim kurar ve servise istek yapmaya başlarlar. Bir wcf servis birden fazla endpoint &uuml;zerinden hizmet verebilir. B&ouml;ylece servisi bir kez geliştirip bir &ccedil;ok istemcinin kullanımına sunmuş oluruz :) Endpoint tanımlarını aşağıdaki şekilde konfig&uuml;rasyon dosyasından yapabiliriz:</p>\r\n<pre class=\"language-markup\"><code> &lt;system.serviceModel&gt;\r\n  &lt;services&gt;\r\n    &lt;service name=\"MyWcfService.MyService\"&gt;\r\n      &lt;endpoint binding=\"basicHttpBinding\" name=\"httpEndPoint\" contract=\"MyWcfService.IMyService\"&gt;&lt;/endpoint&gt;\r\n      &lt;endpoint binding=\"netTcpBinding\" name=\"tcpEndPoint\" contract=\"MyWcfService.IMyService\"&gt;&lt;/endpoint&gt;\r\n      \r\n      &lt;host&gt;\r\n        &lt;baseAddresses&gt;\r\n          &lt;add baseAddress=\"http://localhost:8080/myservice\" /&gt;\r\n          &lt;add baseAddress=\"net.tcp://localhost:900/myservice\" /&gt;\r\n        &lt;/baseAddresses&gt;\r\n      &lt;/host&gt;\r\n    &lt;/service&gt;\r\n  &lt;/services&gt;\r\n&lt;/system.serviceModel&gt;</code></pre>\r\n<p>Burada diğer tanımlamalara takılmadan, \"endpoint\" etiketlerini incelediğinizde servisin netTcpBinding ve basicHttpBinding &uuml;zerinden farklı istemcilere, iki farklı baseAddress &uuml;zerinden aynı kontratla hizmet verebildiğini g&ouml;rebilirsiniz.</p>\r\n<h3>WCF Kontratları (Contracts)</h3>\r\n<p>Yazdığımız bir WCF servisi t&uuml;ketecek istemcilerin servisin neler yapabildiğini, neleri desteklediğini bilmesi gerekir. Bunu da WCF servisin sunduğu kontrat yapıları &uuml;zerinden istemcilere bildiririz. Yukarıda [ServiceContract] ve [OperationContract] dan kısaca bahsettim.</p>\r\n<p><b>ServiceContact</b> eklendiği tipin(sınıf yada interface) WCF servisi olarak kullanılacağını belirtir. Namespace parametresi alır ve bu parametre aynı isimde farklı wcf servislerin karışmaması i&ccedil;in kullanılabilir. Siz bir değer vermezseniz framework \"http://tempuri.org/\" değerini atar.</p>\r\n<pre class=\"language-csharp\"><code>[ServiceContract(Namespace=\"http://www.osmansokuoglu.com/wcfcontracts\")]</code></pre>\r\n<p><b>OperationContact</b> ise eklendiği servis metodlarını istemcilerin kullanımına a&ccedil;ar. Eğer bir metod [OperationContract] ile işaretlenmemişse istemci proxy sınıfları bu metodu g&ouml;remezler. \"Name\" parametresine bir değer atadığınızda metodun ismi ne olursa olsun istemciler proxy nesnesi oluştururken bu değerle oluştururlar. Mesela aşağıdaki tanımlama ile \"GetEmployee(5)\" şeklinde değil \"GetEmployeeWithID(5)\" şeklinde istek yapacaktır.</p>\r\n<pre class=\"language-csharp\"><code>[OperationContract(Name = \"GetEmployeeWithID\")]\r\nEmployee GetEmployee(int id);</code></pre>\r\n<p><b>DataContract</b> ise WCF serviste oluşturduğumuz &ouml;zel sınıf tiplerini istemcilere bildirmek ve istemcilerin de bu sınıfları kullanabilmesi i&ccedil;in kullanılır. Normalde int, string, bool gibi primitive tipler gerek wcf tarafında gerek istemciler tarafında direk serialize/deserialize edilebilmektedir. &Ccedil;&uuml;nk&uuml; bilinen tiplerdir. Java uygulamalarında da .NET uygulamalarında da \"5\" değeri int tipindedir ve kolayca serialize/deserialize edilebilir. Ama aşağıdaki gbi tanımladığımız &ouml;zel sınıflar var ise bunların d&uuml;zg&uuml;n serialize/deserialize edilebilmesi i&ccedil;in [DataContract] ve [DataMember] &ouml;zellikleri ile donatılmaları gerekmektedir. [DataContract] eklendiği sınıfların istemciler tarafından tanınmasını sağlarken, [DataMember] ise bu sınıfın hangi &ouml;zellikleri istemcilere a&ccedil;ılacaksa işaretlemek i&ccedil;in kullanılır. Diğer bir ifade ile bir sınıfa ait &ouml;zelliklerden bir kısmını istemcilerden gizlemek isterseniz bu &ouml;zellikler i&ccedil;in [DataMember] &ouml;zelliği kullanmayın.</p>\r\n<pre class=\"language-csharp\"><code>[DataContract]\r\npublic class Employee\r\n{\r\n    [DataMember]\r\n    public int ID { get; set; }\r\n    [DataMember]\r\n    public string Name { get; set; }\r\n    [DataMember]\r\n    public Statuses Status { get; set; }\r\n\r\n    public int Salary { get; set; } //istemciler bunu g&ouml;remez\r\n}</code></pre>\r\n<p>Peki diyelim ki WCF servisinizde kendi Enum tiplerinizi tanımladınız ve bu tipleri istemcilerede a&ccedil;mak istiyorsunuz. Bunun i&ccedil;in tanımladığınız Enum tipi i&ccedil;in yine [DataContract] &ouml;zelliğini kullanabilirsiniz. Enum tipinin değerleri i&ccedil;in ise [DataMember] yerine [EnumMember] kullanmalısınız.</p>\r\n<pre class=\"language-csharp\"><code>[DataContract]\r\npublic enum Statuses\r\n{\r\n    [EnumMember] None=0,\r\n    [EnumMember] Active=1,\r\n    [EnumMember] Passive=2,\r\n    NotActivated=3 //istemci tarafında kullanılmayacak\r\n}</code></pre>\r\n<p><b>FaultContract</b> ise WCF servis tarafında hangi tip hataların oluşabileceğini, servisin bunları nasıl y&ouml;neteceğini ve oluşan bu &ouml;zel hataları istemcilere nasıl ileteceğini belirtmek i&ccedil;in kullanılır. WCF servis tarafında oluşan &ouml;zel hatalar y&ouml;netilmezse servis bunları direk istemcilere d&ouml;nmek yerine istemcilere genel bir hata mesajı d&ouml;nd&uuml;r&uuml;r. Bunun nedeni ise istemcilerin sadece .NET uygulaması değil aynı zamanda .NET olmayan uygulamalarda olabilmesidir. Ş&ouml;yle bir &ouml;rnek vereyim 100/0 işleminin sonucu \"DivideByZeroException\" fırlatır. .NET olmayan bir istemci bu hata tipini nasıl yorumlayacak? İşte bu tip &ouml;zel hataları her t&uuml;rden istemcinin d&uuml;zg&uuml;n yorumlayabilmesi i&ccedil;in [FaultContract] kullanılır. Wcf servislerde hata y&ouml;netimini ve FaultContract kullanımını başka bir makalede daha detaylı değineceğim.</p>\r\n<pre class=\"language-csharp\"><code>[ServiceContract ]  \r\npublic interface ICalculator  \r\n{  \r\n    [OperationContract]  \r\n    [FaultContract(typeof(MathFault))]  \r\n    int Divide(int num1, int num2);  \r\n}</code></pre>\r\n<p>Bu makalede ile birlikte WCF servis yapısına kısa bir giriş yapmış olduk. Devam eden makalelerde servis metadata yapısını, wcf servislerin nasıl host edileceğini, wcf servislerde kullanılan binding &ccedil;eşitlerini, wcf hata y&ouml;netimi vb wcf ile bir&ccedil;ok konu hakkında bilgi paylaşmaya devam edeceğim.</p>','WCF, WCF Servisleri, WCF Nedir, WCF Endpoint Yapısı, WCF ABC, WCF Kontratları, WCF Contracts, WCF Metadata','/res/img/entry/wcf.jpg','2018-01-27 10:04:56','2018-01-28 04:31:44','1',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (19,1,17,'WCF Servislerde Metadata Yapısı','İstemcilerin WCF servislere istek yapabilmesi için servisin hizmet ve fonksiyonalitelerini bilen proxy nesnelerini ve servisle iletişimde kullanılacak endpoint tanımlarını üretmeleri gerekmektedir.  Böylece servisin sunduğu endpointler ile istemcinin endpoint tanımları arasında bir iletişim kanalı oluşturulur ve bu iletişim..','<p>Bir &ouml;nceki makalede WCF servis yapısına detaylı bir giriş yapmıştık. <a href=\"../../../makale/wcf-servislerine-giris/18\">Buradan</a> o makaleye erişebilirsiniz. Bir WCF servis geliştirmek i&ccedil;in servisin sunacağı fonksiyonaliter i&ccedil;in bir kontrat oluşturmamız ve istemcilerin iletişime ge&ccedil;eceği endpoint tanımlamalarını yapmamız gerektiğinden bahsetmiştik. Fakat servisi istemcilerin kullanımına sunabilmek i&ccedil;in hala atılması gereken iki adım daha var.</p>\r\n<p>Birincisi servisin hizmet verebilmesi i&ccedil;in servisi \"Host\" etmemiz lazım. WCF servislerin nasıl host edilebileceği konusuna bir sonraki makalede yer vermek istiyorum. Bu makalenin konusu ve atılacak ikinci adım ise WCF servislerin metadata yapısı. İstemcilerin WCF servislere istek yapabilmesi i&ccedil;in servisin hizmet ve fonksiyonalitelerini bilen proxy nesnelerini ve servisle iletişimde kullanılacak endpoint tanımlarını &uuml;retmeleri gerekmektedir. B&ouml;ylece servisin sunduğu endpointler ile istemcinin endpoint tanımları arasında bir iletişim kanalı oluşturulur ve bu iletişim kanalı &uuml;zerinden istemciler WCF servislere istek yapmaya başlarlar. Peki bu istemciler bu proxy nesnelerini ve endpoint tanımlarını nasıl ve neye g&ouml;re oluşturacaklar? Tahmin edersiniz ki bunu s&ouml;ylemesi gereken WCF servisin yine ta kendisi.</p>\r\n<p>WCF servisler, \"Metadata\" bilgisini istemcilerle paylaşarak onların proxy nesnelerini ve endpoint tanımlarını &uuml;retmesini sağlar. Metadata bilgisi aslında WCF servisin sunduğu hizmetlerin bir şablonudur ve istemciler bu şablona bakıp kendi tarafında servisle iletişimde kullanılacak proxy nesnelerini &uuml;retir. Biraz detaya inersek bu metadata aslında servisin [DataContract]\'larını tanımlayan XML şemayı, servis fonksiyonalitelerini tanımlamada kullanılan WSDL\'i, servisin kullanacağı endpoint yapısını ve konfig&uuml;rasyonları tutar.</p>\r\n<p>Metadata bilgisinin paylaşımı g&uuml;venlik gerek&ccedil;eleriyle varsayılan olarak kapalıdır. &Ccedil;&uuml;nk&uuml; bu bilgiye sahip biri servis yapınızı kolayca anlayabilir servisinize saldırabilir. Bu nedenle eğer WCF servisin metadata bilgisini istemcilerle paylaşacaksanız bu ayarı a&ccedil;manız gerekiyor. Bunu yapmanın iki yolu var. Ya servisi host ederken kod tarafında servis host &ouml;rneğine bir \"ServiceMetadataBehavior\" &ouml;zelliği ekleyeceğiz;</p>\r\n<pre class=\"language-csharp\"><code>//Metadata bilgisini paylaşma\r\nServiceMetadataBehavior smb = new ServiceMetadataBehavior();   \r\nsmb.HttpGetEnabled = true;  //Enable metadata exchange using HTTP-GET\r\nhost.Description.Behaviors.Add(smb);</code></pre>\r\n<p>Ya da config dosyasında &lt;services&gt; b&ouml;l&uuml;m&uuml;nde &lt;serviceBehaviors&gt; tanımı ekleyerek metadata bilgisini \"serviceMetadata\" d&uuml;ğ&uuml;m&uuml; &uuml;zerinden aşağıdaki gibi a&ccedil;abiliriz. Burada httpGetEnabled=\"true\" ile HTTP &uuml;zerinden metadata bilgisini paylaştığımızı s&ouml;yl&uuml;yoruz.</p>\r\n<pre class=\"language-markup\"><code>&lt;system.serviceModel&gt;\r\n  &lt;services&gt;\r\n    &lt;service name=\"MyWcfService.MyService\"&gt;\r\n      &lt;endpoint binding=\"basicHttpBinding\" name=\"basicHttpEndPoint\" contract=\"MyWcfService.IMyService\"/&gt;\r\n      &lt;host&gt;\r\n        &lt;baseAddresses&gt;\r\n          &lt;add baseAddress=\"http://localhost:8080/myservice\" /&gt;\r\n        &lt;/baseAddresses&gt;\r\n      &lt;/host&gt;\r\n    &lt;/service&gt;\r\n  &lt;/services&gt;\r\n  &lt;behaviors&gt;\r\n    &lt;serviceBehaviors&gt;\r\n      &lt;behavior&gt;\r\n        &lt;serviceMetadata httpGetEnabled=\"True\" httpsGetEnabled=\"True\" /&gt;\r\n      &lt;/behavior&gt;\r\n    &lt;/serviceBehaviors&gt;\r\n  &lt;/behaviors&gt;\r\n&lt;/system.serviceModel&gt;</code></pre>\r\n<p>Gerek konfig&uuml;rasyon dosyasında gerek kod tarafında siz bu tanımlamaları yaptığınızda wcf servis varsayılan olarak \"Metadata Exchange Point\" olarak bir endpoint tanımı oluşturur ve bu endpoint &uuml;zerinden metadata bilgisini paylaşır. WCF servis adresinin sonuna \"?wsdl\" ekleyerek istek yaptığınızda metadata bilgisine artık ulaşabilirsiniz. Ancak eğer bu varsayılan endpointi kullanmak istemezseniz veya &ouml;zelleştirmek isterseniz aşağıdaki gibi yeni bir endpoint ekleyerek metadata paylaşımını bu emdpoint &uuml;zerinden yapabilirsiniz.</p>\r\n<pre class=\"language-markup\"><code>&lt;endpoint address=\"mex\" binding=\"mexHttpBinding\" contract=\"IMetadataExchange\"/&gt;</code></pre>\r\n<p>Bu &ouml;zel endpoint System.ServiceModel namespacinde tanımlı \"IMetadataExchange\" kontratını kullanır. Binding i&ccedil;in Framework\'te metadata paylaşımı i&ccedil;in &ouml;zel tanımlanan d&ouml;rt tane mex(Metadata Exchange Point) binding vardır. Bunlar mexHttpBinding, mexHttpsBinding, mexNamedPipesBinding ve mexTcpBinding. Hangi protokol &uuml;zerinden hizmet verecekseniz, ihtiyacınıza uygun olanı se&ccedil;ebilirsiniz.</p>\r\n<p>Metadata adresi olarak ise genelde hangi binding se&ccedil;ildiyse o binding\'in base adresi ve \"mex\" kelimesi kullanılır. &Ouml;rneğin basicHttpBinding i&ccedil;in http://localhost:4782/MyService/mex veya netTcpBinding i&ccedil;in \"net.tcp://localhost:9001/MyService/mex\" se&ccedil;ilebilir.</p>\r\n<p>Kod tarafında servisi host ederken de aşağıdaki gibi kendi &ouml;zel metadata endpoint\'imizi ekleyebiliriz;</p>\r\n<pre class=\"language-csharp\"><code>Binding mexBinding = MetadataExchangeBindings.CreateMexHttpBinding ();\r\nhost.AddServiceEndpoint(typeof(IMetadataExchange), mexBinding, \"mex\");</code></pre>\r\n<p>İstemci tarafında ise proxy nesneleri iki şekilde oluşturulabilir. Eğer client .NET uygulaması ise Visual Studio &uuml;zerinden \"Add Service Reference\" diyerek a&ccedil;ılan ekranda servisin metadata adresi(mex) girdikten sonra servis referansı projeye eklediğinde servisle iletişimde kullanılacak proxy nesneleri ve endpoint tanımları otomatik &uuml;retilir. Ayrıca Microsoft\'un sunduğu \"SvcUtil.exe\" kullanılarak komut satırında servis metadata adresi belirtilerek yine proxy nesneleri (servis kontratları) ve endpoint tanımları &uuml;retilebilir.</p>\r\n<pre class=\"language-csharp\"><code>svcutil.exe net.tcp://localhost:9001/myservice/demo/mex </code></pre>\r\n<p>Buraya kadar bir WCF servisin istemcilere hizmet verebilmesi i&ccedil;in servis tarafında yapılacak gerekli geliştirme ve yapılandırmalardan bahsettik. Bir sonraki makalede WCF servislerin hizmet vermeye başlaması i&ccedil;in nasıl host edileceğine değineceğiz.</p>','WCF, WCF Servisler, WCF Metadata, WCF Metadata Kavramı','/res/img/entry/wcf.jpg','2018-01-28 04:17:24','2018-01-28 04:21:02','2',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (20,1,9,'MsSQL - Index Kullanımı','Veritabanınızda yer alan tablolarda yüz binlerce, milyonlarca kayıt varsa ve bu tablolardaki belirli kayıtlara erişmek istediğinizde veritabanının sonuçları çok geç getirdiğini gözlemlemişsinizdir. Sorgu performansını arttırmak ve verilere erişimi hızlandırmak için çok fazla kayıt içeren, çok fazla okuma/sorgulamanın yapıldığı tablolarda indeks kullanılmalıdır.','<p>Veritabanınızda yer alan tablolarda y&uuml;z binlerce, milyonlarca kayıt varsa ve bu tablolardaki belirli kayıtlara erişmek istediğinizde veritabanının sonu&ccedil;ları &ccedil;ok ge&ccedil; getirdiğini g&ouml;zlemlemişsinizdir. Bunun nedeni veritabanı sonu&ccedil;ları getirmeye &ccedil;alışırken full-table-scan yaparak tablodaki kayıtları tek tek inceler ve sadece uygun kayıtları d&ouml;nd&uuml;r&uuml;r. Tablo i&ccedil;erisinde ne kadar &ccedil;ok kayıt varsa hem kontrol edip sonu&ccedil; getirme s&uuml;resi uzayacak hem de daha &ccedil;ok sistem kaynağı kullanılacak ve sistem performası d&uuml;şecektir. Hatta veritabanı her sorguya anında cevap veremeceği i&ccedil;in belkide &ccedil;oğu sorgu zaman aşımına uğrayacaktır.</p>\r\n<p>Bunun &ouml;n&uuml;ne ge&ccedil;mek, sorgu performansını arttırmak ve verilere erişimi hızlandırmak i&ccedil;in; &ccedil;ok fazla kayıt i&ccedil;eren ve &ccedil;ok fazla okuma/sorgulamanın yapıldığı tablolarda indeks kullanılmalıdır. Ders kitaplarının başında yer alan i&ccedil;indekiler b&ouml;l&uuml;m&uuml;n&uuml; bilirsiniz. Herhangi bir konuya gitmek istediğinizde sayfaları tek tek incelemek yerine i&ccedil;indekiler b&ouml;l&uuml;m&uuml;nden konunun hangi sayfada olduğunu bulup direk o sayfaya gidersiniz. İndeksler de benzer mantıkla tabloda yer alan kayıtlara erişim ile ilgili d&uuml;zenli bir yapı sunarlar. B&ouml;ylece aranan kayıtlar daha hızlı bulunur, veritabanı sorgulara daha hızlı cevap verir ve daha az sistem kaynağı kullanılır.</p>\r\n<pre class=\"language-sql\"><code>CREATE [ CLUSTERED | NONCLUSTERED ] INDEX IndexAdı ON TabloAdı ( { Kolon | (ifade) }</code></pre>\r\n<p>Peki bu kadar performans artışı nasıl ger&ccedil;ekleşiyor? Indekslerin yapısı balanced-tree dediğimiz <b>B-Tree</b> yapısındadır. Aşağıdaki fig&uuml;rde g&ouml;rebileceğiniz gibi B-Tree yapısında Root dediğimiz k&ouml;k dizin, intermediade dediğimiz ara seviyeler ve en altta \"Leaf Node\" tabir ettiğimiz yaprak d&uuml;ğ&uuml;mleri yer alır. İndekslenen veri ise \"Leaf Node\" kısmında tutulur. Bu yapı sayesinde de t&uuml;m kayıtlar tek tek taranmak yerine ilgili kayıtlara hızlıca ulaşılır.</p>\r\n<p><img src=\"../../../res/img/entry/b-tree.jpg\" class=\"img-responsive\" alt=\"B-Tree\" /></p>\r\n<h3>İndeks &Ccedil;eşitleri</h3>\r\n<p>Genel olarak iki farklı indeks yapısından bahsedebiliriz. Bunlar;</p>\r\n<p><b>Clustered Index:</b> T&uuml;rk&ccedil;e-İngilizce bir s&ouml;zl&uuml;kte veriler nasıl alfabetik sıralanıyorsa, clustured indeks yapısında da veriler veritabanındaki tablonun bir yada daha fazla kolonuna g&ouml;re B-Tree yapısında grouplanarak ve sıralanmış olarak indekslenir. B-Tree\'nin leaf d&uuml;ğ&uuml;mlerinde verinin kendisi olduğu i&ccedil;in direk veriye erişilir. Bu y&uuml;zden de bir tabloda sadece bir tane clustured indeks oluşturabilirsiniz. Tabloyu oluştururken eğer Primary Key belirlerseniz veritabanı otomatik olarak bir clustured-indeks oluşturacaktır.</p>\r\n<pre class=\"language-sql\"><code>CREATE CLUSTERED INDEX [Indeks_Adi] ON [Tablo_Adi]([Kolon/lar])\r\nCREATE CLUSTERED INDEX ProductNameIndex ON Product(Name)\r\nCREATE CLUSTERED INDEX OrderID_DateIndex ON Orders(OrderID, OrderDate)</code></pre>\r\n<p><b>Non-Clustered:</b> Kitapların arkasında yer alan fihrist yapısını bilirsiniz. Kitapta ge&ccedil;en bir kelimeyi aradığınızı d&uuml;ş&uuml;n&uuml;n, kitabı baştan sona okumaya mı &ccedil;alışırsınız yoksa fihriste gidip o kelimenin hangi sayfalarda yer aldığını bulup sonra o sayfaya mı gidersiniz? Non-clustured index yapısında da veriler bu mantıkla B-Tree yapısında indekslenir. Yalnız B-Tree\'nin leaf d&uuml;ğ&uuml;mlerinde verinin kendisi değil adresi tutulur. Bu adres &uuml;zerinden verinin kendisine ulaşırsınız.</p>\r\n<p>MsSQL 2008 ile birlikte 999\'a kadar non-clustured-index oluşturabilirsiniz. Fakat bu demek değildir ki ne kadar &ccedil;ok indeks oluşturursam o kadar hızlı sonu&ccedil; alırım. Burada &ouml;l&ccedil;&uuml;t tabloda yer alan veriler, verilere erişim oranı ve verilerin değiştirilme sıklığı. Eğer indekslediğiniz kolonlardaki veriler &ccedil;ok sık değişiyorsa ve &ccedil;ok fazla okuma yapılmıyorsa m&uuml;mk&uuml;n mertebe az indeks kullanmak lazım. Tersi durumda da eğer veriler genelde sabitse ve &ccedil;ok fazla okuma/sorgulama işlemine tabi tutuluyorsa o kolonları indekslemek performansı arttıracaktır.</p>\r\n<pre class=\"language-sql\"><code>CREATE NONCLUSTERED INDEX [Indeks_Adi] ON [dbo].[Tablo_Adi]([Kolon_1] ASC,[Kolon_2] ASC,...)\r\nCREATE NONCLUSTERED INDEX ProductNameDescr_Index ON Product([Name] ASC,[Description] ASC)</code></pre>\r\n<p>Tabloya yeni kayıt eklendiğinde veya tablodaki kayıtlar silindiğinde, tablonun yapısı değiştiğinde tablo &uuml;zerindeki indekslerde otomatik olarak g&uuml;ncellenir. Bu y&ouml;n&uuml;yle indeksler yazma/silme işlemlerinde az da olsa yavaşlığa neden olur. Ayrıca unutulmamalı ki indeksler ek veri alanına ihtiya&ccedil; duyarlar. Oluşturduğunuz bir indeksi silmek i&ccedil;in;</p>\r\n<pre class=\"language-sql\"><code>DROP INDEX [Index_Adı] ON [Tablo_Adı]\r\nDROP INDEX ProductNameDescr_Index ON [Product]</code></pre>\r\n<p>Sorgu yaparken WHERE koşullarında fonksiyon kullandığınızda veritabanı indeksleri kullanmaz, bunun i&ccedil;in indekslenen kolonlar &uuml;zerinden filtreleme yaparken fonksiyon kullanımından ka&ccedil;ının;</p>\r\n<pre class=\"language-sql\"><code>SELECT CustomerName FROM Customers WHERE LEFT(CustomerName, 1) = \'L\';\r\nSELECT FirmUserID FROM TblRealty WHERE ISNULL(FirmUserID,100013)=100013;\r\n\r\n-- yukardaki queryler aşağıdaki gibi kullanılırsa indeks kullanılacaktır.\r\nSELECT CustomerName FROM Customers WHERE CustomerName LIKE \'L%\';\r\nSELECT FirmUserID FROM TblRealty WHERE FirmUserID IS NULL OR FirmUserID=100013;\r\n</code></pre>','MsSQL, Index Kullanımı, Clustured Index, NonClustured Index','/res/img/entry/mssql.jpg','2018-02-03 11:54:57','2018-02-04 12:13:30','4',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (21,3,18,'C Programlama - Struct  Kullanımı','Kullanım olarak dizlere benzer  fakat dizilerden farklı olarak birden fazla değişken tipini tutabilir ve bunlarla işlem yapabilmemize olanak sağlar. Dizilerden daha önemli olmasının bir sebebi de diziler verileri peş peşe tutar ve bu biraz karışık olur dizilere göre yapılar daha düzenlidir.','<p>Struct (Yapılar)&nbsp; main metodu dışında tanımlanır ve kendine &ouml;zel isimleri olur. Şimdi bir yapı tanımlayalım adı&nbsp; <strong>mystruct&nbsp;</strong>olsun ve i&ccedil;ine birden &ccedil;ok değer koyalım.</p>\r\n<pre class=\"language-c\"><code>struct mystruct{\r\n char name;\r\n int money;\r\n char father;\r\n float amount;\r\n} mystr;</code></pre>\r\n<p>G&ouml;r&uuml;ld&uuml;ğ&uuml; gibi int, char ve float şeklinde tipleri bir araya getirmiş olduk ve hafızada bu işlem i&ccedil;in yer ayırmadık. Şimdi bu yapıdan istediğimiz kadar değer &ccedil;ekip bu değerlere atama yapabiliriz, peki bunu nasıl yapacağız? Main i&ccedil;inde struct\' a atadığımız değişken ismini kullanarak değer atayabilir ve bu değerleri ekrana bastırabiliriz.</p>\r\n<pre class=\"language-c\"><code>strcpy(mystr.name=\"ramazan\");\r\nmystr.money=25000000;</code></pre>\r\n<p>Eğer ekrana bastırmamız gerekirse de <strong>printf(\"%d\",mystr.money);</strong> kodunu kullanmamız işimizi g&ouml;r&uuml;r. Şimdi gelelim <strong>dizilerle</strong> olan işbirliğine;</p>\r\n<pre class=\"language-c\"><code>struct ogrenci{\r\n	char isim[20];\r\n	char soyad[20];\r\n	int yas[2];\r\n	char okul[2];\r\n}\r\nogr[1];</code></pre>\r\n<p>&Ouml;ğrenci adında tanımladığımız struct hazır şimdi bu struct\'a kullanıcıdan değer alalım ve bu değeri ekrana basalım:</p>\r\n<pre class=\"language-c\"><code>for (i=0;i&lt;1;i++){\r\n	printf(\"%d isim:\",i); scanf(\"%s \",ogr[i].isim);\r\n}</code></pre>\r\n<p>Şimdi kullanıcıdan aldığımız&nbsp; veriyi yine&nbsp;<strong>for d&ouml;ng&uuml;s&uuml;</strong> yardımıyla ekrana basalım;</p>\r\n<pre class=\"language-c\"><code>for(i=0;i&lt;1;i++){\r\n	printf(\"%s\",ogr[i].isim);\r\n}</code></pre>\r\n<p>Struct\'ların&nbsp;<strong>pointer&nbsp;</strong> ile kullanımında ise &ccedil;ok k&uuml;&ccedil;&uuml;k bir fark var struct\'taki &ouml;ğeye erişirken kullandığımız&nbsp;<strong>&nbsp; &nbsp; \"&nbsp; &nbsp;. \"&nbsp; &nbsp;</strong> yerine&nbsp;&nbsp;<strong> \"&nbsp; &nbsp; -&gt;&nbsp; \"&nbsp;</strong> bu işareti tanımlıyoruz tabiki s&ouml;z konusu pointer olunca pointer ile ilgili gerekli bilgileri bilmek gerekiyor bu y&uuml;zden tanımlamalara dikkat ediniz. Peki bir struct\'ı fonksiyon ile nasıl tanımlanırız&nbsp; ? &Ouml;ncelikle bir fonksiyon oluşturalım&nbsp;</p>\r\n<pre class=\"language-c\"><code>void g&ouml;ster (struct&nbsp; ogrenci ogr){\r\n	printf(\"%s\",ogr.isim);\r\n}\r\n\r\n//Kullanırken\r\nstruct ogrenci ogr={ \"Ramazan\"};\r\ng&ouml;ster(&nbsp; ogr );\r\n</code></pre>\r\n<p>Bu konuyla ilgili bol bol &ouml;rnek &ccedil;&ouml;zerek kendinizi geliştirmelisiniz .</p>','C Programlama, Struct Kullanımı','/res/img/entry/no-image.jpg','2018-02-25 07:34:00','2018-02-28 05:34:45','5',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (22,3,18,'C Programlama - String Kullanımı','C Programlamada input-output işlemlerinde kullanıcıdan veri alıp ve  basarken  char tipinde bir dizi oluşturup for döngüsü yardımıyla bu diziye teker teker veri işlerdik fakat String öğrenmeye başladığımız andan itibaren artık kelime kelime veya cümle halinde verimizi çekebileceğiz .Öğreneceğimiz Scan Set\'ler sayesinde sadece sayı  ya da sedece ünlü harf,küçük harf çekmeyi öğreneceğiz.','<p>C Programlama\'da string yapısı i&ccedil;in; değişken tipi <strong>char</strong> olan karakter dizileri diyebiliriz. Dilimize <strong>katar</strong> olarak &ccedil;evrilmiştir. Sanırım veriyi bellekte art arda sakladığı i&ccedil;in bu ismi m&uuml;nasip g&ouml;rm&uuml;şler. Şimdi <strong>stringleri</strong> tanımlamaya ve onları kullanmaya ge&ccedil;elim.</p>\r\n<pre class=\"language-c\"><code>char city[]={\'C\',\'o\',\'r\',\'u\',\'m\'};\r\nprintf(\"%s\",city);</code></pre>\r\n<p>Stringlere bu şekilde değer atayabilir ve atanan değeri printf komutu ile ekrana bastırabilirsiniz ya da aşağıdaki y&ouml;ntemi de deneyebilirsiniz.</p>\r\n<pre class=\"language-c\"><code>char city[]=\"corum\";\r\nprintf(\"%s\",city);</code></pre>\r\n<p>Şimdi yukarıdaki &ouml;rnekte <strong>%s</strong> yerine <strong>%c</strong> kullansaydık hata alırdık &ccedil;&uuml;nk&uuml; <strong>%c</strong> ile bastırabilmemiz i&ccedil;in&nbsp; <strong>city[0]</strong> ile dizinin bi elemanına erişmemiz lazımdı. String ile kullanıcıdan veri alırken şu yolu izleriz :</p>\r\n<pre class=\"language-c\"><code>char sentence[50];\r\nprintf(\"enter a sentence:\");\r\nscanf(\"%s\",&amp;sentence);</code></pre>\r\n<p>Aldığımız veriyi bastırmak i&ccedil;inde <strong>printf(\"%s\",sentence);</strong> dediğimiz zaman kodumuz &ccedil;alışmış olur. Fakat kod &ccedil;alıştığında şunu g&ouml;receksiniz ki girdiğimiz c&uuml;mlenin sadece boşluğa kadar ki kısmını alacak bunu aşmak i&ccedil;in de aşağıdaki <strong>scan setleri&nbsp;</strong> kullanmalıyız.</p>\r\n<h3>Scan Set</h3>\r\n<p>%[a-z] : Klavyeden girilen sadece k&uuml;&ccedil;&uuml;k harfleri alır</p>\r\n<p>%[0-9] : Klavyeden girilen sadece sayıları alır</p>\r\n<p>%[a-zA-z] : Klavyeden girilen sadece k&uuml;&ccedil;&uuml;k harf ve b&uuml;y&uuml;k harfleri alır</p>\r\n<p>%[aeiouAEIOU] : Klavyeden Girilen sadece &uuml;nl&uuml; harfleri alır</p>\r\n<h3>Ters Scan Set:</h3>\r\n<p>%[^0-9] :Sayı varsa alır yoksa hi&ccedil;bir şey almaz</p>\r\n<p>%[^aeiouAEIOU] : Bir &uuml;nl&uuml; harfe kadar her şeyi yaz</p>\r\n<p>%[^\\n] : Yeni satıra kadar her şeyi alır</p>\r\n<p>Evet şimdi girilen c&uuml;mlenin tamamını almak i&ccedil;in scan set kullanalım, <strong>scanf(\" %[^\\n ]\",&amp;sentence);</strong> dersek işlemi başarıyla tamamlarız. Stringler ile ilgili bol bol &ouml;rnek &ccedil;&ouml;zmenizi tavsiye ediyorum.</p>','C Programlama, String Kullanımı','/res/img/entry/no-image.jpg','2018-03-03 04:12:33','2018-03-22 02:30:00','2',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (23,1,17,'WCF Servisleri Host Etme','WCF servisleri kendi kendine çalışan program parçacıkları değildir. İstemci uygulamaların WCF servislerle iletişime geçip hizmet alabilmesi için servislerin host edilmesi gerekmektedir. Bunu yapmanın ise temelde dört farklı yolu var : ','<p>WCF servisleri kendi kendine &ccedil;alışan program par&ccedil;acıkları (self-execution) değildir. İstemci uygulamaların WCF servislerle iletişime ge&ccedil;ip hizmet alabilmesi i&ccedil;in servislerin host edilmesi gerekmektedir. Bunu yapmanın ise temelde d&ouml;rt farklı yolu var. Yazdığımız servisin verdiği hizmetlere ve istemcilerin ihtiya&ccedil;larına g&ouml;re bir wcf servisi konsol uygulaması veya windows form uygulaması &uuml;zerinden (Self-Hosting), Windows Servis\'leri &uuml;zerinden, IIS &uuml;zerinden web uygulaması olarak veya Windows Activation Service (WAS) &uuml;zerinden host edebiliriz.</p>\r\n<h3>Self-Hosting</h3>\r\n<p>WCF servisler herhangi bir Windows .NET Framework uygulaması &uuml;zerinden host edilebilir. Bu bir konsol uygulaması, windows form veya WPF uygulaması olabilir. Bir kullanıcı aray&uuml;z&uuml; sundukları i&ccedil;in wcf servisleri debug etmek i&ccedil;in bu hosting y&ouml;ntemi kullanılabilir. Ancak wcf servisin yaşam d&ouml;ng&uuml;s&uuml; host edilen uygulamanın yaşam d&ouml;ng&uuml;s&uuml; kadardır. Uygulama sonlandırıldığında WCF hizmeti de durmuş olur. Self-hosting t&uuml;m binding ve transport protokollerini destekler.</p>\r\n<p>WCF servisleri self-hosting kullanarak host etmek i&ccedil;in biraz kod yazmamız gerekiyor. Bunun i&ccedil;in aşağıdaki kod &ouml;rneğinde de g&ouml;receğiniz gibi <b>ServiceHost</b> sınıfından faydalanacağız. ServiceHost sınıfına, host etmek istediğimiz WCF servisin tip bilgisini ve servisin barınacağı adres (domain url) bilgisini parametre olarak ge&ccedil;ip bir nesne &ouml;rneği oluşturacağız. Servisin end-point tanımlarını, meta data paylaşımını ve servis davranışlarını vb konfig&uuml;rasyonları ister config dosyasında ister kod tarafında aşağıdaki gibi ayarlayabiliriz. Open() metodu servisin hizmet vermeye başlamasını sağlarken Close() metodu ise hizmeti sonlandırıyor.</p>\r\n<pre class=\"language-csharp\"><code>public static void Main()\r\n{\r\n    try\r\n    {\r\n      var httpUrl = \"http://localhost:8080/MyWCFService/Demo\";\r\n      ServiceHost host = new ServiceHost(typeof(MyWcfService.MyService), new Uri(httpUrl));\r\n\r\n      //Endpoint tanımları \r\n      var endpoint=host.AddServiceEndpoint(typeof(MyWcfService.IMyService),\r\n           new WSHttpBinding(), \"\");\r\n      //host.AddServiceEndpoint(ServiceMetadataBehavior.MexContractName,\r\n          MetadataExchangeBindings.CreateMexHttpBinding(),\"mex\");\r\n\r\n      //Metadata paylaşımını a&ccedil;\r\n      ServiceMetadataBehavior smb = new ServiceMetadataBehavior();\r\n      smb.HttpGetEnabled = true;\r\n      smb.HttpGetUrl = new Uri(baseUri, \"mex\");\r\n      host.Description.Behaviors.Add(smb);\r\n\r\n      //Servisi başlat\r\n      host.Open();\r\n      Console.WriteLine(\"Service hosted at address \" + httpUrl);\r\n      Console.WriteLine(\"Metadata Address is \" + httpUrl + \"/mex\");\r\n      Console.WriteLine(\"Start time : \" + DateTime.Now);\r\n      Console.WriteLine(\"To stop hosting press any key..\");\r\n      Console.ReadLine();\r\n\r\n      host.Close();\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n      Console.WriteLine(ex.Message);\r\n    }\r\n}</code></pre>\r\n<p>Uygulamayı &ccedil;alıştırdıktan sonra tarayıcınızdan WCF servisin http endpoint adresini veya metadata adresini yazdığınızda (http://localhost:17062/myservice) wcf servisin &ccedil;alıştığını g&ouml;receksiniz.</p>\r\n<p class=\"my-info\"><i>Not: WCF servis i&ccedil;in hem config dosyasında hemde kod tarafında tanımlama yaptıysanız; servis &ouml;nce config dosyasındakileri sonrada kod tarafındaki tanımlamaları alır. Ancak bunların biribirini ezmemesi gerekir.</i></p>\r\n<p class=\"my-info\"><i>Not: ServiceHost sınıfının Close() metodu &ccedil;ağrıldıktan sonra yeni istekler reddedilir ancak mevcut istekler işlenene kadar beklenir. Normalde 10 sn sonra service kapanır ancak bu zaman aşımını isterseniz host.CloseTimeout = TimeSpan.FromSeconds(20); şeklinde değiştirebilirsiniz. Eğer hi&ccedil; beklemesin direk kapansın derseniz o zaman Close() yerine Abort() metodunu kullanabilirsiniz.</i></p>\r\n<h3>Windows Servis &Uuml;zerinden Host Etme</h3>\r\n<p>Eğer s&uuml;rekli &ccedil;alışmasını istediğiniz bir hizmetiniz varsa ve bunun i&ccedil;in kullanıcı etkileşimine ihtiya&ccedil; duymayacaksanız arka planda kendi kendine &ccedil;alışan windows servisleri bunun i&ccedil;in bi&ccedil;ilmiş kaftandır. WCF Servisleri de bu tanıma uyan hizmetlerdir ve kolaylıkla Windows Servisler &uuml;zerinde host edebiliriz. Windows servisleri Auto-Start &ouml;zelliği sayesinde bilgisayar a&ccedil;ıldığında kullanıcı girişi yapılmasına gerek olmadan &ccedil;alışabilirler, buda demektir ki WCF servisleri windows servis &uuml;zerinde host ettiğimizde onlarda otomatik olarak başlatılacaktır. Ayrıca windows servisleri bir hata oluştuğunda otomatik olarak yeniden başlatılabilirler. Self-hosting\'de olduğu gibi windows servisleri de t&uuml;m binding ve transport protokollerini desteklerler. Dezevantaj olarakda self-hostingde oluğu gibi biraz kod yazmak gerekiyor, debug etmesi zor.</p>\r\n<p>WCF servisi, Windows Servis &uuml;zerinde host etmek i&ccedil;in &ouml;ncelikle Visual Studio &uuml;zerinde yeni bir Windows Service projesi a&ccedil;ın. Visual Studio şablondan otomatik olarak <b>ServiceBase</b> sınıfından t&uuml;reyen \"Service1.cs\" sınıfını oluşturacaktır. Bu sınıfı istediğiniz gibi isimlendirin, ben MyWindowsService diyeceğim. Bu sınıfın i&ccedil;inde OnStart() ve OnStop() metodlarını aşağıdaki gibi override edin. OnStart() metodunda self-hostingde yaptığımız gibi \"ServiceHost\" nesnesi &uuml;zerinden oluşturduğumuz \"MyWcfService.MyService\" sınıfını host edip Open() metoduyla WCF servis hizmetini ayağa kaldırıyoruz. OnStop() metodu ise Windows Servis duruduğunda tetiklenir. Dolaysıyla bu noktada WCF Servis hizmetinide sonlandırabiliriz.</p>\r\n<pre class=\"language-csharp\"><code>public class MyWindowsService : ServiceBase\r\n{\r\n    private ServiceHost _wcfHost;\r\n    public MyWindowsService(){ InitializeComponent();}\r\n    \r\n    protected override void OnStart(string[] args)\r\n    {\r\n       if (_wcfHost != null){ _wcfHost.Close();}\r\n       _wcfHost = new ServiceHost(typeof(MyWcfService.MyService));\r\n       //Bu kısımda istediğiniz konfig&uuml;rasyonları yapın\r\n       _wcfHost.Open();\r\n    }\r\n    protected override void OnStop()\r\n    { \r\n       if (_wcfHost != null)\r\n       {\r\n         _wcfHost.Close();\r\n         _wcfHost = null;\r\n       }\r\n    }\r\n}</code></pre>\r\n<p>Windows Service projesinin \"Program.cs\" dosyasını incelediğinizde Main metodunda MyWindowsService sınıfının aşağıdaki gibi eklendiğini g&ouml;rebilirsiniz. Yoksa da siz ekleyin;</p>\r\n<pre class=\"language-csharp\"><code>static void Main()\r\n{\r\n    ServiceBase[] ServicesToRun = new ServiceBase[] \r\n    { \r\n        new MyWindowsService() \r\n    };\r\n    ServiceBase.Run(ServicesToRun);\r\n}</code></pre>\r\n<p>Geriye bu windows servisini sistemdeki servisler arasına eklemek kaldı. Fakat bu kurulumu yapmak i&ccedil;in projeye installer eklememiz lazım. \"MyWindowsService.cs\" dosyasını design modda a&ccedil;ın. Sağ tıklayıp \"Add Installer\" deyin. Projeye \"ServiceProcessInstaller\" ve \"ServiceInstaller\" eklenecektir. Bunlara sağ tıklayıp &ouml;zelliklerden windows servis ismini, servisin başlangı&ccedil; tipi (Auto-Start gibi) &ouml;zelliklerini değiştirebilirsiniz. Sonrasında bilgisayarınızda y&uuml;kl&uuml; \"Visual Studio Command Prompt\" konsol ekranını y&ouml;netici olarak a&ccedil;ıp aşağıdaki kurulum kodunu &ccedil;alıştırarak windows servisini sistemde kurabilirsiniz. Kurulum başarılı olursa başlat ekranında \"services.msc\" yazıp \"Services\" uygulamasını a&ccedil;tığınızda sistemde kurulu windows servisleri arasında kendi windows servisinizi g&ouml;rebilirsiniz. Son olarak tarayıcınızdan WCF servisin http endpoint adresini veya metadata adresini yazdığınızda (http://localhost:17062/myservice) wcf servisin &ccedil;alıştığını g&ouml;rmeniz lazım.</p>\r\n<pre class=\"language-markup\"><code>//sc create [Servis Adı] binpath=[Servis Exe Yolu] start=[Başlama Şekli]\r\nsc create MyWindowsService binpath=\"D:\\Demo\\WCF\\MyService\\MyService.exe\" start=auto\r\n            \r\n//veya servise farklı bir isim vermek istersek;\r\nsc create MyService displayname=\"MyCalculatorService\" binpath= \"D:\\Demo...\\MyService.exe\" start=auto\r\n\r\n//Windows servisini sistemden kaldırmak i&ccedil;in;\r\nsc delete [Servis Adı]\r\nsc delete MyWindowsService\r\n</code></pre>\r\n<h3>IIS &Uuml;zerinde Host Etme</h3>\r\n<p>Bu y&ouml;ntemde servis IIS (Internet Information Services) &uuml;zerinden web hizmeti olarak host edilir ve IIS\'in t&uuml;m nimetlerinden (health monitoring, idle time shutdown, process recycling vb) faydalanılır. Self-hostingde olduğu gibi uygulamayı &ouml;nceden başlatmaya gerek kalmaz. IIS gelen ilk istekle uyanır, WCF servisi ayağa kaldırır ve servis cevap vermeye başlar. Servisin yaşam d&ouml;ng&uuml;s&uuml; IIS &uuml;zerinden y&ouml;netildiği i&ccedil;in istenildiği zaman servis durdurulup başlatılabilir. IIS &uuml;zerinde host etmenin dezevantajı ise sadece HTTP bindingleri kullanılabilir.</p>\r\n<p>WCF servisinizi IIS\'de host ederken self-hosting\'de olduğu gibi ekstra kod yazmanıza da gerek yok. Web-servislerini IIS &uuml;zerinde yayınlarken \".asmx\" uzantılı bir dosyayay ihtiyacımız vardı. WCF servisleri host ederken benzer şekilde \".svc\" bir dosyaya ihtiyacımız var. Bunun i&ccedil;in Visual Studio &uuml;zerinde &ouml;nce bir \"WCF Service Application\" projesi oluşturun. Projenin i&ccedil;inde &ouml;rnek olarak bir WCF servisi ve bu servisi host etmek i&ccedil;in kullanılacak \".svc\" uzantılı dosya hazır olarak gelecektir. Dilerseniz bu wcf servisi d&uuml;zenleyebilir veya hazırladığınız WCF servis k&uuml;t&uuml;phanesini bu projeye referans olarak ekleyebilirsiniz. Sonrasında \"svc\" dosyasının i&ccedil;erisini aşağıdaki gibi d&uuml;zenleyerek kendi WCF servisimizi host edeceğimizi belirtiyoruz. Servis konfig&uuml;rasyonunu ve end-point tanımlarını ise web.config dosyasında yaptıktan sonra IIS &uuml;zerinde herhangi bir web sitesi host eder gibi WCF servisimizi host edeceğiz. Eğer herşey d&uuml;zg&uuml;n gittiyse tarayıcıdan wcf servis adresini (http://localhost:17062/myservice) yazdığınızda servisin &ccedil;alıştığını g&ouml;rmeniz gerekiyor.</p>\r\n<pre class=\"language-markup\"><code>&lt;%@ ServiceHost Language=\"C#\" Debug=\"true\" Service=\"MyWcfService.MyService\"%&gt;</code></pre>\r\n<h3>WAS &Uuml;zerinde Host Etme</h3>\r\n<p>IIS 6 ve &ouml;ncesinde sadece HTTP bindingleri ile WCF servislerini host edebiliyorduk. IIS 7 ile birlikte WAS (Windows Activation Services) &uuml;zerinden HTTP dışındaki bindingleri (TCP, MSMQ vb) de IIS &uuml;zerinde host etme imkanına kavuştuk. WAS; Windows Vista, Windows Server 2008, Windows 7 ve sonrası &uuml;zerinde yer alan, genel ama&ccedil;lı kullanılan bir hosting servisi. WAS\'ın kendisi aslında ne host ettiğinin farkında değil (WCF servis mi, web sitesi mi bilmiyor). Siz wcf servisinizi yine IIS 7 &uuml;zerinde host ederek IIS\'in t&uuml;m nimetlerinden faydalanırken aynı zamanda WAS\'ın desteği ile HTTP dışındaki protokolleri de destekleme imkanınız olur. B&ouml;ylece IIS sadece httpBinding\'lerini desteklerken WAS ile birlikte netTcpBinding, netMsmqBinding gibi bindingleri de desteklemiş oluyoruz.</p>\r\n<h3>İstemcilerin WCF Servisleri T&uuml;ketmesi</h3>\r\n<p>WCF servisimizi host ettimizde servisimiz &ccedil;alışmaya ve hizmet vermeye başlar. İstemcilerin (clients) servisimizle iletişime ge&ccedil;ebilmesi ve istek yapabilmesi i&ccedil;in servisin end-point tanımları &uuml;zerinden servisle bir iletişim kanalı oluşturması gerekmektedir. Bunu ş&ouml;yle &ouml;rnekleyebiliriz. Yazılım hizmeti veriyorsunuz ve Alman ve Rus iki firma sizden yazılım hizmeti almak istedi. Bu firmalarla iletişim kurmak ve isteklerini belirlemek i&ccedil;in sırasıyla Almanca ve Rus&ccedil;a konuşmanız gerekecektir. WCF servis d&uuml;nyasında da end-point tanımları ile bir istemciyle TCP &uuml;zerinden konuşabilirken başka bir istemciyle HTTP &uuml;zerinden aynı anda konuşabilirsiniz.</p>\r\n<p>Peki istemciler servisle iletişimde kullanılacak proxy nesnelerini neye g&ouml;re ve nasıl &uuml;retecekler. Bunun cevabını <a href=\"../../../makale/wcf-servislerde-metadata-yapisi/19\">WCF Servislerde Metadata Yapısı</a> makalesinde detaylı olarak bahsettim. İstemciler wcf servisin metadata yapısını kullanarak proxy nesnelerini iki farklı şekilde oluşturulabilir. Eğer client .NET uygulaması ise Visual Studio &uuml;zerinden projeye \"Servis Referansı Ekle (Add Service Reference)\" diyerek a&ccedil;ılan ekranda servisin metadata adresini (mex address) ve servis adı bilgisini girdikten sonra servis referansını projeye ekleyebilir ve b&ouml;ylece servisle iletişimde kullanılacak proxy nesneleri ve servis konfig&uuml;rasyonları (end-point tanımları, servis davranışları vs)&nbsp; otomatik&nbsp; &uuml;retilerek projeye eklenir.&nbsp; Konfig&uuml;rasyon tanımlarını projenizin tipine bağlı olarak app.config veya web.config soyasında \"system.serviceModel\" d&uuml;ğ&uuml;m&uuml; altına eklendiğini g&ouml;rebilirsiniz.</p>\r\n<p>Diğer bir yolu ise Microsoft\'un sunduğu <b>SvcUtil.exe</b> aracı kullanılarak komut satırında servis metadata adresi belirtilerek proxy nesneleri (servis kontratları) ve servis konfig&uuml;rasyonu &uuml;retilir. Oluşan dosyaları projenize kopyalayarak kullanabilirsiniz.</p>\r\n<pre class=\" language-csharp\"><code class=\"language-csharp\">svcutil.exe net.tcp://localhost:9001/myservice/demo/mex</code></pre>\r\n<p>Sonrasında ise aşağıdaki gibi MyServiceClient proxy nesnesi kullanılarak wcf servise istek yollanabilir. Hangi end-point &uuml;zerinden iletişim kuracaksanız MyServiceClient sınıfından nesne &ouml;rneğini oluştururken constructor\'ına o end-point\'in adını verebilirsiniz ;</p>\r\n<pre class=\"language-csharp\"><code>static void Main(string[] args)\r\n{\r\n    using (MyServiceClient client = new MyServiceClient())\r\n    {\r\n        MyService.Person user = new MyService.Person { Name = \"Osman\" };\r\n        Console.WriteLine(client.AddUser(user));\r\n    }\r\n    Console.ReadLine();\r\n}</code></pre>','WCF, WCF Servisler, WCF Hosting,  WCF Self Hosting, WCF Windows Servis Hosting, WCF IIS Hosting','/res/img/entry/wcf.jpg','2018-03-31 13:06:44','2018-03-31 13:18:31','3',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (24,1,1,'Yazılım Deneme','Yazılım Deneme','<p>using System.IO;<br />using ZXing;<br />using ZXing.QrCode;<br />using ZXing.QrCode.Internal;</p>\r\n<p>public ActionResult QrCode()<br />{<br />var qrCodeWriter = new BarcodeWriter<br />{<br />Format = BarcodeFormat.QR_CODE,<br />Options = new QrCodeEncodingOptions<br />{<br />Margin = 1,<br />Height = 600,<br />Width = 600,<br />ErrorCorrection = ErrorCorrectionLevel.Q,<br />},<br />};</p>\r\n<p>var writeableBitmap = qrCodeWriter.Write(\"Gsb6UmRRqVHDmWg21sjIhewOxwANr+CTJWFB8/6KJgNOU15CSG8itrZz3dOwNN0U4O9+jhxg3UqbOeFKTd8kbg==\");<br />var memoryStream = new MemoryStream();<br />writeableBitmap.Save(memoryStream, System.Drawing.Imaging.ImageFormat.Jpeg);<br />return File(memoryStream.GetBuffer(), \"image/jpeg\");</p>\r\n<p>var writeableBitmap = qrCodeWriter.Write(\"Gsb6UmRRqVHDmWg21sjIhewOxwANr+CTJWFB8/6KJgNOU15CSG8itrZz3dOwNN0U4O9+jhxg3UqbOeFKTd8kbg==\");</p>\r\n<p>byte[] result = null;<br />using (MemoryStream ms = new MemoryStream())<br />{<br />writeableBitmap.Save(ms, System.Drawing.Imaging.ImageFormat.Jpeg);<br />result = ms.ToArray();<br />}<br />return File(result, \"image/jpeg\");</p>\r\n<p><br />}</p>',NULL,NULL,'2018-04-11 10:40:00','2018-09-26 14:20:04',NULL,5);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (25,1,17,'WCF Servislerde Binding Yapısı','Daha önceki WCF makalelerinde bir endpoint\'in adres-binding-contract yapısından oluştuğunu belirtmiştik. Bu makalede binding yapısını detaylı ele almaya çalışacağız. Bindingler (bağlayıcılar), wcf servis ve istemciler arasındaki iletişimin nasıl yapılacağını tanımlar..','<p>İstemci uygulamalar, WCF servisin hizmet verdiği endpoint tanımı &uuml;zerinden bir iletişim kanal oluşturarak servisle veri alış-verişi yaparlar. İstemciler .NET teknolojileri kullanıyor olacağı gibi, JAVA tabanlı diğer platformlarda &ccedil;alışan uygulamalar da olabilirler. Bu nedenle WCF servisler, istemcilerin mesajlaşma yapısına uygun endpoint tanımı yapmalıdırlar.</p>\r\n<p>Daha &ouml;nceki WCF makalelerinde bir endpoint\'in adres-binding-contract yapısından oluştuğunu belirtmiştik. Bu makalede binding yapısını detaylı ele almaya &ccedil;alışacağız. Bindingler (bağlayıcılar), wcf servis ve istemciler arasındaki iletişimin nasıl yapılacağını tanımlar. Bu tanımın i&ccedil;erisinde &uuml;&ccedil; başlık vardır :</p>\r\n<p><b>Transport Protokol :</b> Hangi iletişim protokol&uuml; kullanılacak? HTTP, TCP, Namedpipe, MSMQ vs.</p>\r\n<p><b>Protokol :</b> mesaj iletiminin g&uuml;venliği (SOAP, WS-*), sıralı mesaj g&ouml;nderimi (reliable-messaging), trnsaction desteği gibi kuralları tanımlar. Reliable messaging, msesajlarların sıralı olarak g&ouml;nderilip alınması ve tek bir kez alınması g&uuml;vencesini verir.</p>\r\n<p><b>Message-Encoding :</b> Mesajlar hangi formatta g&ouml;nderilecek, Text/Xml, JSON, Binary, MTOM. Eğer &ouml;nceliğiniz interoperability (platform desteği) ise text/xml (plain-text), performance ise binary, b&uuml;y&uuml;k verileri g&ouml;nderecekseniz MTOM se&ccedil;in. MTOM, Message Transmission Optimization Mechanism, b&uuml;y&uuml;k &ccedil;aplı mesaj veya eklerin iletimi i&ccedil;in kullanılıyormuş. WCF de varsayılan mesaj formatı, base64 text encoding ve veri SOAP envelope\'a eklenip g&ouml;nderilir. MTOM veriyi base64 ile encode etmez. B&ouml;ylece veriyi decode etmeye gerek kalmaz. Ayrıca veri SOAP envelopa eklenmez MIME eklentisi olarak g&ouml;nderilir. Aşağıdaki gibi binding configurationdan ayarlayabiliriz.</p>\r\n<pre class=\"language-markup\"><code>&lt;bindings&gt;\r\n    &lt;wsHttpBinding&gt;\r\n        &lt;binding name=\"wshttpbind\" messageEncoding=\"Text\"/&gt;\r\n        &lt;binding name=\"wshttpbind\" messageEncoding=\"Mtom\"/&gt;\r\n    &lt;/wsHttpBinding&gt;\r\n&lt;/bindings&gt;</code></pre>\r\n<p>Peki binding tanımlarını nasıl ve nerede yapacağız? Bunun i&ccedil;in ekstra birşey yapmamıza gerek yok, WCF kullanım ihtiya&ccedil;larımızı g&ouml;z&ouml;n&uuml;ne alarak &ccedil;eşitli binding tanımlarını hali hazırda bize zaten sunuyor. Bu bindingler \"System.ServiceModel\" namespace\'si altında yer almaktadır. Tek yapmamız gereken WCF servisi t&uuml;ketecek istemcilerin ihtiya&ccedil;larına uygun olan bir binding se&ccedil;mek. En &ccedil;ok kullanılan bazı bindingler ve &ouml;zellikler;</p>\r\n<h3>basicHttpBinding</h3>\r\n<p>basicHttpBinding, ASP.NET Web Servisleri\'ni (ASMX) desteklemek amacıyla oluşturulmuştur. B&ouml;ylece bir WCF servis Web Servis gibi hizmet verebilir ve Web Servisi kullanan client\'lar hi&ccedil; bir sorun olmadan WCF servisle de &ccedil;alışmaya devam edebilirler. Protokol olarak HTTP protokol&uuml; kullanılırken mesajlaşma ise text/XML olarak yapılır. Bu yapısı sayesinde platform desteği sunar (Interoperable). Bu binding\'de g&uuml;venlik (security), reliable-messaging yapısı yoktur. G&uuml;venlik i&ccedil;in HTTPS kullanılabilir.</p>\r\n<pre class=\"language-markup\"><code>&lt;endpoint address=\"http://localhost/basic\" binding=\"basicHttpBinding\"\r\ncontract=\"IMyService\" /&gt;</code></pre>\r\n<h3>wsHttpBinding</h3>\r\n<p>WSHttpBinding aslında basicHttpBinding\'in g&uuml;venlik sağlayan versiyonu diye d&uuml;ş&uuml;nebiliriz. SOAP mesajları varsayılan olarak encrypt edilir ve imzalanır. HTTP ve HTTPS &uuml;zerinden hizmet verdiği i&ccedil;in ve soap tabanlı xml mesajlaşmayı desteklediği i&ccedil;in platform desteği sunar. WS-* standartlarına uyduğu i&ccedil;in basicHttpBinding\'in desteklemediği reliable-messaging, transaction ve g&uuml;venli mesajlaşmayı destekler.</p>\r\n<pre class=\"language-markup\"><code>&lt;endpoint address=\"http://localhost/basic\" binding=\"wsHttpBinding\" contract=\"IMyService\" /&gt;</code></pre>\r\n<h3>netTcpBinding</h3>\r\n<p>Eğer platform desteğine ihtiyacınız yoksa ve istemci uygulamalar .NET tabanlı uygulamalar ise ve hızlı bir mesajlaşma istiyorsanız o zaman se&ccedil;iminiz NetTcpBinding olmalı. TCP protokol&uuml; &uuml;zerinden iletişim kurulur, bu y&uuml;zdende daha &ccedil;ok aynı networkde yer alan intranet uygulamalarında tercih edilir. Mesajlar binary formatta encode edilerek g&ouml;nderilir. TCP ve binary mesajlaşma ise HTTP protokol&uuml;n&uuml; kullanan bindinglere g&ouml;re daha hızlı ve performaslı bir hizmet sunar. Ayrıca reliable-messaging, transaction ve g&uuml;venli mesajlaşma desteği vardır.</p>\r\n<pre class=\"language-markup\"><code>&lt;endpoint address=\"net.tcp://localhost/tcp\" binding=\"netTcpBinding\" contract=\"IMyService\" /&gt;</code></pre>\r\n<h3>webHttpBinding</h3>\r\n<p>Eğer WCF servisiniz REST tabanlı bir servis ise webHttpBinding\'i kullanmalısınız. B&ouml;ylece XML tabanlı SOAP mesajları yerine HTTP-POST, HTTP-GET, HTTP-DELETE, HTTP-PUT isteklerini karşılayabilir, mesajlaşma yapısını XML veya JSON formatta yapabilirsiniz. &Ouml;rneğin RSS servisleri, Feed servisleri.</p>\r\n<pre class=\"language-markup\"><code>&lt;endpoint address=\"http://localhost/rest\" binding=\"webHttpBinding\" contract=\"IMyService\" /&gt;</code></pre>\r\n<h3>netMsmqBinding</h3>\r\n<p>Bu binding, .NET tabanlı uygulamalar arasında mesajların kuyruklanıp (message-queue) işlendiği yapılar i&ccedil;in tasarlanmıştır. B&ouml;ylece servisin mesajı işledği zaman ile istemcinin mesajı g&ouml;nderdiği zaman farklılık g&ouml;sterebilir ve ikisinin s&uuml;rekli bağlı olmasına gerek kalmaz. Taşıma protokol&uuml; olarak MSMQ kullanılır. Transaction ve reliable-messaging desteği var.</p>\r\n<pre class=\"language-markup\"><code>&lt;endpoint address=\"net.msmq://localhost/msmq\" binding=\"netMsmqBinding\"\r\ncontract=\"IMyService\" /&gt;</code></pre>\r\n<h3>netNamedPipeBinding</h3>\r\n<p>netTcpBinding\'e &ccedil;ok benzer, daha &ccedil;ok aynı makine &uuml;zerinde yer alan uygulamalar arası iletişim i&ccedil;in kullanılıyor. mesaj seviyesinde g&uuml;venlik yerine transport protokol seviyesinde g&uuml;venlik sunar. Mesaj iletimi i&ccedil;in NamedPipe protokol&uuml;n&uuml; ve binary-encoding kullanılır. Transaction desteği var.</p>\r\n<pre class=\"language-markup\"><code>&lt;endpoint address=\"net.pipe://localhost/netpipe\" binding=\"netNamedPipeBinding\"\r\ncontract=\"IMyService\" /&gt;</code></pre>\r\n<h3>netPeerTcpBinding</h3>\r\n<p>Birden fazla bilgisayarın katıldığı ve her bilgisayarın diğer bilgisayarlarla iletişim kurabildiği, \"peer-to-peer Network\" olarak tabir ettiğimiz networklerde iletişim kanalı i&ccedil;in bu binding kullanılabilir. İletişim TCP protokol&uuml; &uuml;zerinden kurulur. Transaction, reliability ve g&uuml;venlik desteği vardır.</p>\r\n<pre class=\"language-markup\"><code>&lt;endpoint address=\"net.p2p://localhost/netpeer\" binding=\"netPeerTcpBinding\" contract=\"IMyService\" /&gt;</code></pre>\r\n<h3>Custom Binding</h3>\r\n<p>Eğer WCF\'in size sunduğu binding tipleri ihtiyacınızı karşılamıyorsa elbette size &ouml;zel bir binding de oluşturup kullanabilirsiniz. Ancak yukarda bahsi ge&ccedil;en tipler hemen hemen her dağıtık uygulama senaryosu g&ouml;z &ouml;n&uuml;ne alınarak tasarlandığı i&ccedil;in \"custom binding\"e &ccedil;ok fazla ihtiya&ccedil; duymayabilirsiniz.</p>\r\n<p>WCF ile ilgili bir konfig&uuml;rasyon yapacaksanız bunun her zaman iki yolu var; config dosyasında gerekli konfig&uuml;rasyonu yapabileceğiniz gibi, kod tarafında biraz kod yazarak da yapabilirsiniz. Aşağıdaki gibi <b>&lt;bindings&gt;</b> d&uuml;ğ&uuml;m&uuml; altında \"customBinding\" tanımını yapılandırabilir ve endpoint tanımında binding=\"customBinding\" şeklinde kullanabilirsiniz.</p>\r\n<pre class=\"language-markup\"><code>&lt;system.serviceModel&gt;\r\n    &lt;bindings&gt;\r\n        &lt;customBinding&gt;\r\n            &lt;binding name=\"RawReceiveCapable\"&gt;\r\n              &lt;webMessageEncoding webContentTypeMapperType=\"...\" /&gt;\r\n              &lt;httpsTransport authenticationScheme=\"Basic\" transferMode=\"Streamed\" /&gt;\r\n            &lt;/binding&gt;\r\n        &lt;/customBinding&gt;\r\n    &lt;/bindings&gt;\r\n    &lt;services&gt;\r\n        &lt;service name=\"WcfSamples.HelloService\"&gt;\r\n            &lt;endpoint address=\"net.tcp://localhost:1010/demo\" binding=\"customBinding\" contract=\"IMyService\"&gt;&lt;/endpoint&gt;\r\n        &lt;/service&gt;\r\n    &lt;/services&gt;\r\n&lt;/system.serviceModel&gt;</code></pre>\r\n<p>Veya kod tarafında aşağıdaki gibi customBinding tanımı yapabilirsiniz;</p>\r\n<pre class=\"language-csharp\"><code>var myBinding = new CustomBinding();\r\n \r\n //burada customBinding\'i nasıl kullanacaksak yapılandırıyoruz.\r\n myBinding.Elements.Add(new BinaryMessageEncodingBindingElement());\r\n myBinding.Elements.Add(new HttpTransportBindingElement());\r\n \r\n //servise bu binding kullanan endpoint ekliyoruz.\r\n var host = new ServiceHost(typeof(HelloService));\r\n host.AddServiceEndpoint(typeof(IMyService),myBinding,\"http://localhost:1010/demo\");\r\n host.Open();</code></pre>','WCF, WCF Binding, netTcpBinding, wsHttpBinding, customBinding, basicHttpBinding','/res/img/entry/wcf.jpg','2018-04-21 09:56:09','2018-04-21 09:59:18','5',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (26,1,5,'Garanti 3D Sanal Pos Entegrasyonu','3D ödeme yöntemlerinde  banka ve uygulamanız ile birlikte işlemi yapan müşterinin de sürece dahil edilir. Eğer 3D kullanan bir sanal posunuz varsa müşteri ödeme işlemi yapmak istediğinde banka müşterinin sistemdeki telefonuna bir güvenlik şifresi göndererek kartından işlem tutarı kadar..','<p>3D kelime anlamı olarak &uuml;&ccedil; boyutlu demektir. Garanti Sanal Pos\'u &uuml;zerinden XML-API ile &ouml;deme aldığınızda m&uuml;şterinizin m&uuml;dahalesine gerek kalmadan kredi kartı bilgilerini alıp bankanın &ouml;deme sistemine provizyon isteği yolluyoruz. Bu aşamada s&uuml;re&ccedil; banka ve sizin uygulamanız (web sitesi, destktop ya da mobil uygulama) arasında ger&ccedil;ekleşir. Bu s&uuml;reci detaylı olarak <a href=\"../../../makale/garanti-bankasi-sanal-pos-entegrasyonu-xml-api/5\">Garanti Bankası Sanal Pos Entegrasyonu - XML API</a> konusunda işlemiştik.</p>\r\n<p>3D &ouml;deme y&ouml;ntemlerinde ise banka ve uygulamanız ile birlikte işlemi yapan m&uuml;şterinin de s&uuml;rece dahil edilir. Eğer 3D kullanan bir sanal posunuz varsa m&uuml;şteri &ouml;deme işlemi yapmak istediğinde banka m&uuml;şterinin sistemdeki telefonuna bir g&uuml;venlik şifresi g&ouml;ndererek kartından işlem tutarı kadar &ccedil;ekim yapılacağını ve onaylıyorsa işlemi doğrulamak i&ccedil;in bu şifreyi kullanmasını belirtir. Doğrulama sonucunda, doğrulama durumu uygulamanıza d&ouml;nd&uuml;r&uuml;l&uuml;r ve sizde b&ouml;ylece işlem yapan m&uuml;şteriye &ouml;demenin yapılıp yapılmadığı ile ilgili işlem sonucu g&ouml;sterebilirsiniz.</p>\r\n<p>XML-API &ouml;demelerinde, m&uuml;şteriden kart bilgilerini aldıktan sonra bu bilgilerle istediğiniz zaman istediğiniz kadar &ccedil;ekim yapabilirsiniz ve bu tamamen m&uuml;şterinin kontrol&uuml; dışında ger&ccedil;ekleşebilir. Kısaca her zaman bir g&uuml;venlik riski vardır. 3D-Secure &ouml;deme y&ouml;ntemlerinin ortaya &ccedil;ıkışı da aslında bu riski minimize etmek i&ccedil;indir. Elinizde kart bilgileri olsa dahi m&uuml;şteri g&uuml;venlik şifresini girmediği s&uuml;rece banka &ouml;deme işlemini ger&ccedil;ekleştirmez.</p>\r\n<p>Garanti Bankası\'ndan &ouml;deme işlemleriniz i&ccedil;in 3D sanal pos alacaksanız birden fazla se&ccedil;eneğiniz var. Bu se&ccedil;enekleri 3 ana grupta toplayabiliriz:</p>\r\n<ul>\r\n<li><b>3D :</b> Bu y&ouml;ntemde g&uuml;venlik doğrulaması 3D Secure olarak yapılır, sonrasında &ouml;deme isteğini XML-API &uuml;zerinden ger&ccedil;ekleştirirsiniz.</li>\r\n<li><b>3D-PAY :</b> Bu y&ouml;ntemde g&uuml;venlik doğrulaması ve &ouml;deme işlemi tamamen banka tarafından yapılır. Banka sonu&ccedil; olarak işlem sonucu d&ouml;nd&uuml;r&uuml;r.</li>\r\n<li><b>3D-OOS-PAY :</b> Diğer iki y&ouml;ntemden farklı olarak m&uuml;şteriden kart bilgisi talep etmezsiniz, t&uuml;m s&uuml;reci banka y&ouml;netir. M&uuml;şteri kart bilgilerini banka ortak &ouml;deme sayfasında girer, 3D g&uuml;venlik doğrulamasını yapar, daha sonra banka &ccedil;ekim işlemini ger&ccedil;ekleştirir ve uygulamanıza işlem sonucunu d&ouml;ner.</li>\r\n</ul>\r\n<p>Bu makalede <b>3D-PAY</b> &ouml;deme y&ouml;ntemini detaylı olarak ele alacağız. Diğer y&ouml;ntemleri başka makalelerde ele almaya &ccedil;alışacağım.</p>\r\n<h3>3D-PAY Secure &Ouml;deme</h3>\r\n<p>S&uuml;reci kolay ve anlaşılır kılmak i&ccedil;in &ouml;rnek bir senaryo &uuml;zerinden ilerleyelim. &Ccedil;eşitli kırtasiye &uuml;r&uuml;nleri sattığımız bir e-ticaret sitemiz olsun. Bu web sitesinde m&uuml;şterilere g&uuml;venli bir &ouml;deme ortamı sunmak adına Garanti 3D-Secure Sanal Posu &uuml;zerinden &ouml;deme yapma imkanı sunuyoruz. M&uuml;şterimiz 24.90 TL tutarında &uuml;r&uuml;n&uuml; sepetine ekleyip, sipariş etmek istediğinde &ouml;deme adımında m&uuml;şterimizden 16 haneli kart numarasını, kartın son kullanma tarihini ve kartın arka y&uuml;z&uuml;nde yer alan 3 haneli g&uuml;venlik kodu(CVC)\'nu aldıktan sonra sipariş tutarının m&uuml;şteri kartından &ccedil;ekilmesi i&ccedil;in bankaya bir provizyon isteği yapacağız.</p>\r\n<p>XML-API ile &ouml;deme isteğinde bankanın ihtiya&ccedil; duyduğu bilgilerle bir xml d&ouml;k&uuml;manı oluşturup, bankanın &ouml;deme sistemine bu isteği bir bir web isteği olarak g&ouml;nderiyorduk. 3D-PAY yapısında ise bankanın ihtiya&ccedil; duyduğu bilgilerle bir html form oluşturup bu formu bankanın 3D &ouml;deme adresine post edeceğiz. &Ouml;deme i&ccedil;in g&ouml;nderilecek form &ouml;rneğini aşağıda bulabilirsiniz;</p>\r\n<pre class=\"language-markup\" style=\"font-size: 13px;\"><code>&lt;form id=\"PaymentForm\" action=\"{POST_URL}\" method=\"POST\"&gt;\r\n	&lt;input type=\"hidden\" name=\"secure3dsecuritylevel\" id=\"secure3dsecuritylevel\" value=\"3D_PAY\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"mode\" id=\"mode\" value=\"{MODE}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"apiversion\" id=\"apiversion\" value=\"v0.01\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"terminalid\" id=\"terminalid\" value=\"{TERMINAL_ID}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"terminalprovuserid\" id=\"terminalprovuserid\" value=\"PROVOOS\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"terminaluserid\" id=\"terminaluserid\" value=\"{USER_ID}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"terminalmerchantid\" id=\"terminalmerchantid\" value=\"{MERCHANT_ID}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txntype\" id=\"txntype\" value=\"sales\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"cardnumber\" id=\"cardnumber\" value=\"{CARD_NUMBER}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"cardexpiredatemonth\" id=\"cardexpiredatemonth\" value=\"{EXPIRE_MONTH}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"cardexpiredateyear\" id=\"cardexpiredateyear\" value=\"{EXPIRE_YEAR}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"cardcvv2\" id=\"cardcvv2\" value=\"{CVC}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txnamount\" id=\"txnamount\" value=\"{AMOUNT}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txncurrencycode\" id=\"txncurrencycode\" value=\"{CURRENCY_CODE}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txninstallmentcount\" id=\"txninstallmentcount\" value=\"{INSTALLMENT}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"orderid\" id=\"orderid\" value=\"{ORDER_NO}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"successurl\" id=\"successurl\" value=\"{SUCCESS_URL}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"errorurl\" id=\"errorurl\" value=\"{ERROR_URL}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"secure3dhash\" id=\"secure3dhash\" value=\"{HASH_DATA}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"companyname\" id=\"companyname\" value=\"{COMPANY}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"customeremailaddress\" id=\"customeremailaddress\" value=\"{EMAIL}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"customeripaddress\" id=\"customeripaddress\" value=\"{IP_ADDRESS}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txntimestamp\" id=\"txntimestamp\" value=\"{TIME_STAMP}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"lang\" id=\"lang\" value=\"tr\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"refreshtime\" id=\"refreshtime\" value=\"5\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"additional\" id=\"additional\" value=\"{ADDITIONAL}\"/&gt;\r\n&lt;/form&gt;</code></pre>\r\n<p>Peki bu formdaki alanlar neye karşılık geliyor, {MODE}, {IP_ADDRESS} olarak g&ouml;sterdiğimiz kısımlara hangi bilgiler gelecek? Bunun a&ccedil;ıklamasına da aşağıda yer veriyorum;</p>\r\n<table class=\"table table-bordered table-striped table-condensed\">\r\n<thead>\r\n<tr>\r\n<th width=\"16%\">Alan</th>\r\n<th>A&ccedil;ıklama</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>secure3dsecuritylevel</td>\r\n<td>3D-Secure işleminin tipini burada belirtiyoruz. 3D, 3D-PAY, 3D-OOS-PAY gibi değerler alır. M&uuml;şterimiz <b>3D-PAY</b> &ouml;deme yaptığı i&ccedil;in burada 3D-PAY olarak g&ouml;ndereceğiz.</td>\r\n</tr>\r\n<tr>\r\n<td>mode</td>\r\n<td>Yapılan işlemin test mi yoksa ger&ccedil;ek mi olduğunu belirtir. {MODE} alanına eğer işleminiz test işlemi ise <b>TEST</b>, ger&ccedil;ek işlem ise <b>PROD</b> değerini belirtin.</td>\r\n</tr>\r\n<tr>\r\n<td>apiversion</td>\r\n<td>Sanal pos &ouml;deme isteğinin bankada hangi versiyonla yapılacağını belirtir. value kısmına <b>v0.01</b> değerini girin.</td>\r\n</tr>\r\n<tr>\r\n<td>terminalid</td>\r\n<td>Bankadan aldığınız Terminal No (TerminalID) bilgisi. {TERMINAL_ID} alanına bankadan aldığınız bu bilgiyi girin.</td>\r\n</tr>\r\n<tr>\r\n<td>terminalprovuserid</td>\r\n<td>Bankadan aldığınız provizyon kullanıcısının bilgisidir. Garanti Bankası 3D işlemleri i&ccedil;in genellikle PROVOOS kullanıcısını kullanır. Banka aksini belirtmediği s&uuml;rece value alanına <b>PROVOOS</b> değerini g&ouml;nderebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>terminaluserid</td>\r\n<td>İşlemi yapan kullanıcı bilgisinin yollandığı alandır. {USER_ID} alanına işlem yapan m&uuml;şterinin ID bilgisini ekleyebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>terminalmerchantid</td>\r\n<td>Bankadan aldığınız &uuml;ye işyeri numarası bilgisi. {MERCHANT_ID} alanına bu değeri girin.</td>\r\n</tr>\r\n<tr>\r\n<td>txntype</td>\r\n<td>İşlem tipi satış mı, iade mi, iptal mi, &ouml;n satış mı vs bilgisi. 3D &ouml;deme işlemleri satış olduğu i&ccedil;in bu alana <b>sales</b> değerini giribilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>cardnumber</td>\r\n<td>M&uuml;şteriden aldığınız 16 haneli kartı numarasını {CARD_NUMBER} alanına girmelisiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>cardexpiredatemonth</td>\r\n<td>&Ouml;demenin alınacağı kartın son kullanma tarihinin ay bilgisi. MM formatında. {EXPIRE_MONTH} alanına ay bilgisini 2 haneli olarak girin.</td>\r\n</tr>\r\n<tr>\r\n<td>cardexpiredateyear</td>\r\n<td>&Ouml;demenin alınacağı kartın son kullanma tarihinin yıl bilgisi. YY formatında. {EXPIRE_YEAR} alanına yıl bilgisinin son 2 hanesini girin. &Ouml;rneğin 2018 i&ccedil;in 18.</td>\r\n</tr>\r\n<tr>\r\n<td>cardcvv2</td>\r\n<td>M&uuml;şteriden aldığınız kartının arka y&uuml;z&uuml;nde yer alan 3 haneli g&uuml;venlik numarası. {CVC} alanına bu bilgiyi girin.</td>\r\n</tr>\r\n<tr>\r\n<td>txnamount</td>\r\n<td>Kartdan &ccedil;ekilecek işlem tutarı. Tutardaki \'.\' ve \',\' karakterilerini temizleyin. Garanti son iki haneyi kuruş olarak algılıyor. &Ouml;rneğin 24.90 TL tutarındaki işlem i&ccedil;in 2490 olarak g&ouml;nderin. {AMOUNT} alanına bu şekilde işlem tutarını ekleyin.</td>\r\n</tr>\r\n<tr>\r\n<td>txncurrencycode</td>\r\n<td>İşlemin para birimi. TL i&ccedil;in 949, USD i&ccedil;in 840 ve EURO i&ccedil;in 978 kodu kullanılıyor. Diğerleri i&ccedil;in garanti d&ouml;k&uuml;manını inceleyin. {CURRENCY_CODE} alanına hangi para birimi ile işlem yapacaksanız onun kodunu ekleyin.</td>\r\n</tr>\r\n<tr>\r\n<td>txninstallmentcount</td>\r\n<td>İşlem taksitli ise taksit sayısı, taksit yoksa boş bırakın. {INSTALLMENT} alanına bu şekilde değer girin.</td>\r\n</tr>\r\n<tr>\r\n<td>orderid</td>\r\n<td>&Ouml;demesi yapılacak siparişin ID bilgisi(Sipariş No), boş g&ouml;nderilirse Garanti sizin i&ccedil;in bir tane &uuml;retecektir. Bu alan &uuml;zerinden &ouml;demeleri siparişleribizle eşleştirebilir ve &ouml;deme sonu&ccedil;larını daha kolay takip edebilirsiniz. {ORDER_NO} alanına işlem yaptığınız sipariş numarasını belirtin.</td>\r\n</tr>\r\n<tr>\r\n<td>successurl</td>\r\n<td>&Ouml;deme işleminin sonucu başarılı olursa; banka bu alanda belirttiğiniz url adresine işlem sonucu d&ouml;nd&uuml;recektir. {SUCCESS_URL} alanına başarılı işlem sonu&ccedil; adresi bilgisini girin. Bkz Not-2!</td>\r\n</tr>\r\n<tr>\r\n<td>errorurl</td>\r\n<td>&Ouml;deme işleminin sonucu başarısız olursa; banka bu alanda belirttiğiniz url adresine işlem sonucu d&ouml;nd&uuml;recektir. {ERROR_URL} alanına başarısız işlem sonu&ccedil; adresi bilgisini girin. Bkz Not-2!</td>\r\n</tr>\r\n<tr>\r\n<td>secure3dhash</td>\r\n<td>Aşağıda bu değerin nasıl hesaplandığını anlatacağım. {HASH_DATA} alanına bu hesaplanan değeri girmelisiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>customeripaddress</td>\r\n<td>İşlem yaptığınız m&uuml;şterinin IP Adresini {IP_ADDRESS} alanında g&ouml;nderebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>customeremailaddress</td>\r\n<td>İşlem yaptığınız m&uuml;şterinin e-posta adresini {EMAIL} alanında g&ouml;nderebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>companyname</td>\r\n<td>Firma bilgisi, {COMPANY} alanına firma adınızı ekleyebilirsiniz. Bu değer bankanın doğrulama ekranında m&uuml;şterinize &ouml;demenin hangi firma adına alınacağına dair banka tarafından g&ouml;sterilir.</td>\r\n</tr>\r\n<tr>\r\n<td>lang</td>\r\n<td>M&uuml;şteri doğrulama işlemi i&ccedil;in bankanın sayfasına y&ouml;nlendirildiğinde m&uuml;şteriye g&ouml;sterilecek sayfanın hangi dilde g&ouml;sterileceğini bu alandan belirtebilirsiniz. T&uuml;rk&ccedil;e i&ccedil;in <b>tr</b> g&ouml;nderebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>refreshtime</td>\r\n<td>M&uuml;şteri doğrulama işlemi sonucunu veya &ouml;deme işlem sonucnu bankanın sayfasında ne kadar s&uuml;re g&ouml;rd&uuml;kten sonra, işlem sonucunu belirttiğimiz, successurl veya errorurl adresine tekrar y&ouml;nlendirileceği bilgisi. &Ouml;rneğin 5 g&ouml;nderirseniz m&uuml;şteri işlem sonucunu 5sn g&ouml;r&uuml;nt&uuml;ledikten sonra sitenize y&ouml;nlendirilir.</td>\r\n</tr>\r\n<tr>\r\n<td>txntimestamp</td>\r\n<td>Random ve Unique bir değer olmalı demiş garanti d&ouml;k&uuml;manında. {TIME_STAMP} alanına C# i&ccedil;in DateTime.Now.Ticks değerini g&ouml;nderiyorum ben.</td>\r\n</tr>\r\n<tr>\r\n<td>additional</td>\r\n<td>Bu alan aslında gereksiz ve banka i&ccedil;in anlamsız bir alan. Bunu koyma nedenim eğer &ouml;deme sonucunda &ouml;deme işlemi ile ilgili ihtiyacınız olan bir bilgi var ise bu şekilde istek formuna ekleyebilirsiniz. Garanti bankası bu alanları işlem sonucunda tekrar size d&ouml;nd&uuml;recektir. &Ouml;rneğin &ouml;deme işleminin sonucunda &ouml;demeyi hangi postan yaptğınızı bilmek istiyorsanız forma <br /><b> &lt;input type=\"hidden\" name=\"PosID\" id=\"PosID\" value=\"12345678\"/&gt;</b> şeklinde ek bir alan ekleyebilirsiniz.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p><i>Not-1 : value=\'{XYZ}\' şeklindeki alanlara veri girerken value=\'{1234}\' yerine value=\'1234\' şeklinde veri girdiğinizden emin olun. {} parantezleri sadece alanı vurgulamak i&ccedil;in kullanılmıştır. </i></p>\r\n<p><i>Not-2 : successurl ve errorurl alanlarına farklı değerler girebileceğiniz gibi aynı url adresini de girebilirsiniz. İşlemin başarılı/başarısız olduğunu d&ouml;nen cevaptaki parametreleri kontrol ederek rahatlıkla anlayabiliriz.</i></p>\r\n<h4>Hash Data Oluşturma :</h4>\r\n<p>3D-Secure &ouml;demeleri i&ccedil;in hash datayı şu şekilde hesaplayacağız;</p>\r\n<p>1) Bankanın 3D Saal Pos i&ccedil;in size tanımladığı şifre ve TerminalID bilgisini birleştirin. TermimalID 9 karakterden az ise başına 9 karaktere tamamlayana kadar 0 ekleyin. Sonra bu bilgiyi SHA1 algoritması ile hashleyip, sonucu b&uuml;y&uuml;k karakterlere &ccedil;evirin.</p>\r\n<pre class=\"language-csharp\"><code>var _sTerminalID=terminalID.PadLeft(9, \'0\');\r\nvar securityData = SHA1(password + _sTerminalID.PadLeft(9, \'0\')).ToUpperInvariant();</code></pre>\r\n<p>2) Bu adımda formu oluşturuken kullandığınız TerminalID (başında 0 olmadan), sipariş numarası (orderid), sipariş tutarı (txnamount), başarılı işlem adresi (successurl), başarısız işlem adresi (errorurl), &ouml;deme tipi (bkz txntype), taksit bilgisi (txninstallmentcount), bankadan aldığınız g&uuml;venlik anahtarı (StoreKey) ve 1. adımda oluşturduğunuz <b>securityData</b> hash bilgisini birleştirin ve tekrar SHA1 algoritması ile hashleyin.</p>\r\n<pre class=\"language-csharp\"><code>var hashString = terminalID + orderID + amount + successUrl + errorUrl + paymentType + installment + storeKey + securityData;\r\nvar hashData = GetSHA1(hashString).ToUpperInvariant();</code></pre>\r\n<p>Hesapladığınız bu değeri yukarda oluşturduğumuz formda yer alan {HASH_DATA} alanına yapıştırın.</p>\r\n<p><i>Not : StoreKey, 3D Secure işlemler i&ccedil;in kullanılan ve sanal pos y&ouml;netim ekranından oluşturduğunuz bir g&uuml;venlik anahtarıdır.</i></p>\r\n<h4>İsteğin Bankaya İletilmesi</h4>\r\n<p>M&uuml;şterimizin siparişini tamamlamak i&ccedil;in Garanti Bankası 3D-Sanal Posunu kullanarak m&uuml;şteri kartından &ouml;deme almak istiyoruz. Bu aşamaya kadar m&uuml;şteriden kart bilgilerini aldık, bankaya g&ouml;ndereceğimiz &ouml;deme istek formunu hazırladık. Sıra formu bankaya iletmeye geldi.</p>\r\n<p>Oluşturduğumuz formun <b>action=\"{POST_URL}\"</b> kısmında form submit edildiğinde isteğin yapılacağı adresi yazacağız. 3D &ouml;deme işlemleri i&ccedil;in Garanti Bankası aşağıdaki adres/lere istek yapmanızı istiyor. {POST_URL} kısmına işlem tipimize g&ouml;re bu adreslerden uygun olanını yazacağız.</p>\r\n<pre><code>-- Test işlemleri i&ccedil;in\r\nhttps://sanalposprovtest.garanti.com.tr/servlet/gt3dengine\r\n\r\n-- Ger&ccedil;ek işlemler i&ccedil;in\r\nhttps://sanalposprov.garanti.com.tr/servlet/gt3dengine</code></pre>\r\n<p><i>Not : bu adresler makale yazıldığı zaman Garanti Bankasının Sanal Pos Entegrasyon d&ouml;kğmanlarında belirtilen adresler olup entegrasyon yapacağınız tarih adresiyle değişmiş olabilir. G&uuml;ncel bilgi i&ccedil;in d&ouml;k&uuml;manlara g&ouml;z atın.</i></p>\r\n<p>Artık formu bakaya post edebiliriz. Bunun i&ccedil;in ben formu kod tarafında oluşturduktan sonra ASP.NET MVC sitesinde ekrana basıyorum. Sonrasında da aşağıdaki gibi biraz JQuery yazarak formu submit ediyorum. Siz farklı şekillerde de aynı işlemi yapabilirsiniz.</p>\r\n<pre class=\"language-javascript\"><code>$(document).ready(function(){\r\n	$(\"#PaymentForm\").submit();\r\n});</code></pre>\r\n<h4>Bankanın &Ouml;deme S&uuml;recini Ger&ccedil;ekleştirmesi</h4>\r\n<p>Formu bankaya ilettiğiniz anda banka gerekli kontrolleri yapacak ve eksik, hatalı bilgi yoksa m&uuml;şteriyi doğrulama ekranına y&ouml;nlendirecektir. Aynı zamanda da m&uuml;şterinin sistemde tanımlı numarasına bir doğrulama kodu iletilecektir. Doğrulama ekranında m&uuml;şterinin telefonuna gelen doğrulama kodunu girip devam etmesi durumunda banka m&uuml;şteri kartından sipariş tutarı (24.90 TL) kadar &ccedil;ekim yapacak ve b&uuml;t&uuml;n s&uuml;re&ccedil;ler başarılı olursa m&uuml;şteriye &ccedil;ekim yapıldığı sonucunu g&ouml;sterecek ve sonrasında formu yollarken belirttiğiniz <b>successurl</b> adresine işlem sonucunu d&ouml;necektir.</p>\r\n<p>Eğer doğrulama adımı ya da para &ccedil;ekim işlemi başarısız olursa bu durumda formu yollarken belirttiğiniz <b>errorurl</b> adresine başarısız işlem sonucunu d&ouml;nd&uuml;recektir.</p>\r\n<h4>Bankadan Gelen Cevabın İşlenmesi</h4>\r\n<p>Banka &ouml;deme s&uuml;receni tamamladıktan sonra işlem sonucu belirttiğiniz adrese d&ouml;nd&uuml;recektir. Gelen istekteki parametrelere bakarak &ouml;demenin başarılı olup olmadığını anlayabiliriz. İlk olarak gelen istekteki parametreleri ve değerlerini bir Dictionary objesine atalım;</p>\r\n<pre class=\"language-csharp\"><code>var bankResponse = Request.Form.Keys.Cast<string>().ToDictionary(key =&gt; key, key =&gt; Request.Form.Get(key));</string></code></pre>\r\n<p>Daha sonra bu objede yer alan <b>mdstatus</b> ve <b>procreturncode</b> değerlerine kontrol edeceğiz. Eğer procreturncode alanı \"00\" dan farklı bir değer gelmişse işlem başarısızdır. Ayrıca mdstatus değeri 1, 2, 3, 4 dışında bir değer gelmişse yine başarısızdır. Bu iki bilgiyi kullanarak &ouml;deme başarılı mı değil mi anlayabiliriz.</p>\r\n<pre class=\"language-csharp\"><code>var mdStatus = bankResponse.Value(\"mdstatus\").ToInt();\r\nvar procReturnCode = bankResponse.Value(\"procreturncode\");\r\n\r\nvar success=mdStatus &gt;= 1 &amp;&amp; mdStatus &lt;= 4 &amp;&amp; procReturnCode == \"00\";</code></pre>\r\n<p>Eğer işlem başarısız ise hata kodu ve hata mesajını <b>errmsg</b> ve <b>mderrormessage</b> alanlarından g&ouml;rebilirsiniz.</p>\r\n<pre class=\"language-csharp\"><code>var errorMsg = bankResponse.Value(\"errmsg\").;\r\nvar mdErrorMessage = bankResponse.Value(\"mderrormessage\");</code></pre>\r\n<p>Peki işlemin başarılı olduğuna sadece mdstatus ve procreturncode değerlerine karar verebilir miyiz? Teoride evet. Ancak pratikte Garanti Bankası d&ouml;nen cevabın ger&ccedil;ekten bankadan geldiğini ve fraud riski taşımadığını garantilemek adına hash kontrol&uuml; de yapılmasını istiyor. Bunun i&ccedil;in bankanın d&ouml;nd&uuml;ğ&uuml; cevapta yer alan <b>hash</b> değeri ile kendi tarafımızda hesapladığımız hash değerini karşılaştıracağız. Aşağıdaki &ouml;rnek kodda olduğu gibi bankadan d&ouml;nen parametrelerle hash değerini hesaplayıp <b>hash</b> ile kıyaslayacağız:</p>\r\n<pre class=\"language-csharp\"><code>//hash hesaplamada kullanılacak alanlar\r\nvar hashParams = bankResponse.Value(\"hashparams\");\r\n\r\nif (!string.IsNullOrEmpty(hashParams))\r\n{\r\n    var hash = bankResponse.Value(\"hash\");\r\n    var digestValue = string.Empty;\r\n    var paramList = hashParams.Split(\":\");\r\n\r\n    foreach (var param in paramList)\r\n    {\r\n        digestValue += bankResponse.Value(param);\r\n    }\r\n\r\n	//bankadan aldığımız g&uuml;venlik anahtarını ekliyoruz\r\n    digestValue += storeKey;\r\n	\r\n    var calculatedHash = SHA1(digestValue).ToUpperInvariant();\r\n    var success = mdStatus &gt;= 1 &amp;&amp; mdStatus &lt;= 4 &amp;&amp; procReturnCode == \"00\" &amp;&amp; hash == calculatedHash;\r\n}</code></pre>\r\n<h4>Ek Bilgiler</h4>\r\n<p>Bankadan d&ouml;nen cevapta yer alan <b>mdstatus</b> değeri ve anlamı;</p>\r\n<ul>\r\n<li>1 : Tam Doğrulama, &ouml;deme başarılı</li>\r\n<li>2 : Kart Sahibi veya bankası sisteme kayıtlı değil, &ouml;deme başarılı</li>\r\n<li>3 : Kartın bankası sisteme kayıtlı değil, &ouml;deme başarılı</li>\r\n<li>4 : Doğrulama denemesi, kart sahibi sisteme daha sonra kayıt olmayı se&ccedil;miş, &ouml;deme başarılı</li>\r\n<li>5 : Doğrulama yapılamıyor, &ouml;deme başarısız</li>\r\n<li>6 : 3D-Secure Hatası, &ouml;deme başarısız</li>\r\n<li>7 : Sistem Hatası, &ouml;deme başarısız</li>\r\n<li>8 : Bilinmeyen Kart No, &ouml;deme başarısız</li>\r\n<li>0 : Doğrulama Başarısız, 3-D Secure imzası ge&ccedil;ersiz, &ouml;deme başarısız</li>\r\n</ul>\r\n<hr />\r\n<p>Hash Data hesaplanırken kullandığım SHA1 şifreleme metodu;</p>\r\n<pre class=\"language-csharp\"><code>protected string GetSHA1(string data)\r\n{\r\n    SHA1 sha = new SHA1CryptoServiceProvider();\r\n    byte[] hashbytes = Encoding.GetEncoding(\"ISO-8859-9\").GetBytes(data);\r\n    byte[] inputbytes = sha.ComputeHash(hashbytes);\r\n    return GetHexaDecimal(inputbytes);\r\n}\r\n\r\nprivate string GetHexaDecimal(byte[] bytes)\r\n{\r\n    StringBuilder s = new StringBuilder();\r\n    int length = bytes.Length;\r\n    for (int n = 0; n &lt;= length - 1; n++)\r\n    {\r\n        s.Append(String.Format(\"{0,2:x}\", bytes[n]).Replace(\" \", \"0\"));\r\n    }\r\n    return s.ToString();\r\n}</code></pre>','Garanti Sanal Pos, 3D Sanal Pos Entegrasyonu, 3D Ödeme, 3D-PAY, 3D Hash Hesaplama','/res/img/entry/garanti_sanal_pos.jpg','2018-04-26 13:58:10','2018-04-26 14:03:46','4',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (27,1,5,'Garanti Sanal Pos Ortak Ödeme Sayfası Entegrasyonu','Ortak ödeme sayfası aslında firmaların müşteriden hiçbir kart bilgisi almadan tüm işlemi bankaya devrettiği ve bankanın ortak ödeme sayfası üzerinden müşteriden kart bilgilerini alıp ödeme ve doğrulama işlemini yaptıktan sonra işlem sonucunu firmaya geri dönderdiği ödeme entegrasyonudur..','<p>Granati Sanal Pos Entegrasyonu makale serisinde şimdiye kadar XML-API &uuml;zerinden satış, iptal ve iade işlemlerini ve 3D-PAY Secure &ouml;deme entegrasyonunu inceledik. Bu makalede de Garanti Bankasının Ortak &Ouml;deme Sayfası i&ccedil;in sanal pos entegrasyonunu nasıl yapacağımızı inceleyeceğiz.</p>\r\n<p>Ortak &ouml;deme sayfası aslında firmaların m&uuml;şteriden hi&ccedil;bir kart bilgisi almadan t&uuml;m işlemi bankaya devrettiği ve bankanın ortak &ouml;deme sayfası &uuml;zerinden m&uuml;şteriden kart bilgilerini alıp &ouml;deme ve doğrulama işlemini yaptıktan sonra işlem sonucunu firmaya geri d&ouml;nderdiği &ouml;deme entegrasyonudur. &Ouml;deme işlemi banka ve m&uuml;şteri arasında ger&ccedil;ekleştiği i&ccedil;in diğer &ouml;deme y&ouml;ntemlerine g&ouml;re daha g&uuml;venlidir.</p>\r\n<p>Ortak &Ouml;deme Sayfası (OOS), m&uuml;şterinin işlemi 3D yapıp yapmama tercihine g&ouml;re ikiye ayrılır: <b>3D-OOS-PAY</b> yapısında ortak &ouml;deme sayfası &uuml;zerinden 3D kullanılarak doğrulama yapılırken; <b>OOS-PAY</b> yapısında 3D yapısı kullanılmadan &ouml;deme alınır. Her iki y&ouml;ntemde de yapacağımız entegrasyon <b>3D-PAY</b> i&ccedil;in yaptığımız entegrasyona &ccedil;ok benzer. Birka&ccedil; temel farklılık dışında bankaya g&ouml;nderdiğimiz bilgiler ve g&ouml;nderim şekli hemem hemen aynıdır.</p>\r\n<h4>Bankaya G&ouml;nderilecek İstek Formu</h4>\r\n<p>Ortak &ouml;deme sayfası i&ccedil;in entegrasyona 3D-PAY yapısında yaptığımız gibi &ouml;nce bir istek formu hazırlayarak başlayacağız. Ortak &ouml;deme sayfasını kullandığımız durumda m&uuml;şteriden kart bilgilerini biz almayacağız demiştik yukarda. Bu y&uuml;zden istek formunda da 3D-PAY y&ouml;nteminde eklediğimiz kart bilgileri olmayacak. Ayrıca formun <b>secure3dsecuritylevel</b> alanında da kullanacağımız ortak &ouml;deme sayfası y&ouml;ntemi ne olackasa <b>3D_OOS_PAY</b> veya <b>OOS_PAY</b> yazacağız.</p>\r\n<pre class=\"language-markup\" style=\"font-size: 13px;\"><code>&lt;form id=\"PaymentForm\" action=\"{POST_URL}\" method=\"POST\"&gt;\r\n	&lt;input type=\"hidden\" name=\"secure3dsecuritylevel\" id=\"secure3dsecuritylevel\" value=\"3D_OOS_PAY\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"mode\" id=\"mode\" value=\"{MODE}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"apiversion\" id=\"apiversion\" value=\"v0.01\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"terminalid\" id=\"terminalid\" value=\"{TERMINAL_ID}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"terminalprovuserid\" id=\"terminalprovuserid\" value=\"PROVOOS\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"terminaluserid\" id=\"terminaluserid\" value=\"{USER_ID}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"terminalmerchantid\" id=\"terminalmerchantid\" value=\"{MERCHANT_ID}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txntype\" id=\"txntype\" value=\"sales\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txnamount\" id=\"txnamount\" value=\"{AMOUNT}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txncurrencycode\" id=\"txncurrencycode\" value=\"{CURRENCY_CODE}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txninstallmentcount\" id=\"txninstallmentcount\" value=\"{INSTALLMENT}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"orderid\" id=\"orderid\" value=\"{ORDER_NO}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"successurl\" id=\"successurl\" value=\"{SUCCESS_URL}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"errorurl\" id=\"errorurl\" value=\"{ERROR_URL}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"secure3dhash\" id=\"secure3dhash\" value=\"{HASH_DATA}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"companyname\" id=\"companyname\" value=\"{COMPANY}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"customeremailaddress\" id=\"customeremailaddress\" value=\"{EMAIL}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"customeripaddress\" id=\"customeripaddress\" value=\"{IP_ADDRESS}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"txntimestamp\" id=\"txntimestamp\" value=\"{TIME_STAMP}\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"lang\" id=\"lang\" value=\"tr\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"refreshtime\" id=\"refreshtime\" value=\"5\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"motoind\" id=\"motoind\" value=\"N\"/&gt;\r\n	&lt;input type=\"hidden\" name=\"additional\" id=\"additional\" value=\"{ADDITIONAL}\"/&gt;\r\n&lt;/form&gt;</code></pre>\r\n<p>Bu formda yer alan alanlar ve bu alanlara ekleyeceğimiz değerler ile ilgili a&ccedil;ıklamayı aşağıdaki tabloda bulabilirsiniz;</p>\r\n<table class=\"table table-bordered table-striped table-condensed\">\r\n<thead>\r\n<tr>\r\n<th width=\"16%\">Alan</th>\r\n<th>A&ccedil;ıklama</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>secure3dsecuritylevel</td>\r\n<td>3D-Secure işleminin tipini burada belirtiyoruz. 3D, 3D_PAY, 3D_OOS_PAY, OOS_PAY gibi değerler alır. Ortak &ouml;deme sayfası entegrasyonu i&ccedil;in 3D doğrulama kullanıp kullanmayacağınıza g&ouml;re 3D_OOS_PAY veya OOS_PAY olarak değer girebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>mode</td>\r\n<td>Yapılan işlemin test mi yoksa ger&ccedil;ek mi olduğunu belirtir. {MODE} alanına eğer işleminiz test işlemi ise <b>TEST</b>, ger&ccedil;ek işlem ise <b>PROD</b> değerini belirtin.</td>\r\n</tr>\r\n<tr>\r\n<td>apiversion</td>\r\n<td>Sanal pos &ouml;deme isteğinin bankada hangi versiyonla yapılacağını belirtir. value kısmına <b>v0.01</b> değerini girin.</td>\r\n</tr>\r\n<tr>\r\n<td>terminalid</td>\r\n<td>Bankadan aldığınız Terminal No (TerminalID) bilgisi. {TERMINAL_ID} alanına bankadan aldığınız bu bilgiyi girin.</td>\r\n</tr>\r\n<tr>\r\n<td>terminalprovuserid</td>\r\n<td>Bankadan aldığınız provizyon kullanıcısının bilgisidir. Garanti Bankası 3D işlemleri i&ccedil;in genellikle PROVOOS kullanıcısını kullanır. Banka aksini belirtmediği s&uuml;rece value alanına <b>PROVOOS</b> değerini g&ouml;nderebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>terminaluserid</td>\r\n<td>İşlemi yapan kullanıcı bilgisinin yollandığı alandır. {USER_ID} alanına işlem yapan m&uuml;şterinin ID bilgisini ekleyebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>terminalmerchantid</td>\r\n<td>Bankadan aldığınız &uuml;ye işyeri numarası bilgisi. {MERCHANT_ID} alanına bu değeri girin.</td>\r\n</tr>\r\n<tr>\r\n<td>txntype</td>\r\n<td>İşlem tipi satış mı, iade mi, iptal mi, &ouml;n satış mı vs bilgisi. 3D &ouml;deme işlemleri satış olduğu i&ccedil;in bu alana <b>sales</b> değerini girebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>txnamount</td>\r\n<td>Kartdan &ccedil;ekilecek işlem tutarı. Tutardaki \'.\' ve \',\' karakterilerini temizleyin. Garanti son iki haneyi kuruş olarak algılıyor. &Ouml;rneğin 24.90 TL tutarındaki işlem i&ccedil;in 2490 olarak g&ouml;nderin. {AMOUNT} alanına bu şekilde işlem tutarını ekleyin.</td>\r\n</tr>\r\n<tr>\r\n<td>txncurrencycode</td>\r\n<td>İşlemin para birimi. TL i&ccedil;in 949, USD i&ccedil;in 840 ve EURO i&ccedil;in 978 kodu kullanılıyor. Diğerleri i&ccedil;in garanti d&ouml;k&uuml;manını inceleyin. {CURRENCY_CODE} alanına hangi para birimi ile işlem yapacaksanız onun kodunu ekleyin.</td>\r\n</tr>\r\n<tr>\r\n<td>txninstallmentcount</td>\r\n<td>İşlem taksitli ise taksit sayısı, taksit yoksa boş bırakın. {INSTALLMENT} alanına bu şekilde değer girin.</td>\r\n</tr>\r\n<tr>\r\n<td>orderid</td>\r\n<td>&Ouml;demesi yapılacak siparişin ID bilgisi(Sipariş No), boş g&ouml;nderilirse Garanti sizin i&ccedil;in bir tane &uuml;retecektir. Bu alan &uuml;zerinden &ouml;demeleri siparişleribizle eşleştirebilir ve &ouml;deme sonu&ccedil;larını daha kolay takip edebilirsiniz. {ORDER_NO} alanına işlem yaptığınız sipariş numarasını belirtin.</td>\r\n</tr>\r\n<tr>\r\n<td>successurl</td>\r\n<td>&Ouml;deme işleminin sonucu başarılı olursa; banka bu alanda belirttiğiniz url adresine işlem sonucu d&ouml;nd&uuml;recektir. {SUCCESS_URL} alanına başarılı işlem sonu&ccedil; adresi bilgisini girin. Bkz Not-2!</td>\r\n</tr>\r\n<tr>\r\n<td>errorurl</td>\r\n<td>&Ouml;deme işleminin sonucu başarısız olursa; banka bu alanda belirttiğiniz url adresine işlem sonucu d&ouml;nd&uuml;recektir. {ERROR_URL} alanına başarısız işlem sonu&ccedil; adresi bilgisini girin. Bkz Not-2!</td>\r\n</tr>\r\n<tr>\r\n<td>secure3dhash</td>\r\n<td>Aşağıda bu değerin nasıl hesaplandığını anlatacağım. {HASH_DATA} alanına bu hesaplanan değeri girmelisiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>customeripaddress</td>\r\n<td>İşlem yaptığınız m&uuml;şterinin IP Adresini {IP_ADDRESS} alanında g&ouml;nderebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>customeremailaddress</td>\r\n<td>İşlem yaptığınız m&uuml;şterinin e-posta adresini {EMAIL} alanında g&ouml;nderebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>companyname</td>\r\n<td>Firma bilgisi, {COMPANY} alanına firma adınızı ekleyebilirsiniz. Bu değer bankanın doğrulama ekranında m&uuml;şterinize &ouml;demenin hangi firma adına alınacağına dair banka tarafından g&ouml;sterilir.</td>\r\n</tr>\r\n<tr>\r\n<td>lang</td>\r\n<td>M&uuml;şteri doğrulama işlemi i&ccedil;in bankanın sayfasına y&ouml;nlendirildiğinde m&uuml;şteriye g&ouml;sterilecek sayfanın hangi dilde g&ouml;sterileceğini bu alandan belirtebilirsiniz. T&uuml;rk&ccedil;e i&ccedil;in <b>tr</b> g&ouml;nderebilirsiniz.</td>\r\n</tr>\r\n<tr>\r\n<td>refreshtime</td>\r\n<td>M&uuml;şteri doğrulama işlemi sonucunu veya &ouml;deme işlem sonucnu bankanın sayfasında ne kadar s&uuml;re g&ouml;rd&uuml;kten sonra, işlem sonucunu belirttiğimiz, successurl veya errorurl adresine tekrar y&ouml;nlendirileceği bilgisi. &Ouml;rneğin 5 g&ouml;nderirseniz m&uuml;şteri işlem sonucunu 5sn g&ouml;r&uuml;nt&uuml;ledikten sonra sitenize y&ouml;nlendirilir.</td>\r\n</tr>\r\n<tr>\r\n<td>txntimestamp</td>\r\n<td>Random ve Unique bir değer olmalı demiş garanti d&ouml;k&uuml;manında. {TIME_STAMP} alanına C# i&ccedil;in DateTime.Now.Ticks değerini g&ouml;nderiyorum ben.</td>\r\n</tr>\r\n<tr>\r\n<td>motoind</td>\r\n<td>işlemin MailOrder bir işlem olup olmadığı bilgisinin g&ouml;nderildiği alandır. Y ise işlem mail order bir işlemdir. N ise işlem ecommerce işlemidir. E-ticaret sanal pos &ouml;demelerinde N değeri g&ouml;nderilmeli.</td>\r\n</tr>\r\n<tr>\r\n<td>additional</td>\r\n<td>Bu alan aslında gereksiz ve banka i&ccedil;in anlamsız bir alan. Bunu koyma nedenim eğer &ouml;deme sonucunda &ouml;deme işlemi ile ilgili ihtiyacınız olan bir bilgi var ise bu şekilde istek formuna ekleyebilirsiniz. Garanti bankası bu alanları işlem sonucunda tekrar size d&ouml;nd&uuml;recektir. &Ouml;rneğin &ouml;deme işleminin sonucunda &ouml;demeyi hangi postan yaptğınızı bilmek istiyorsanız forma <br /><b> &lt;input type=\"hidden\" name=\"PosID\" id=\"PosID\" value=\"12345678\"/&gt;</b> şeklinde ek bir alan ekleyebilirsiniz.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p><i>Not-1 : value=\'{XYZ}\' şeklindeki alanlara veri girerken value=\'{1234}\' yerine value=\'1234\' şeklinde veri girdiğinizden emin olun. {} parantezleri sadece alanı vurgulamak i&ccedil;in kullanılmıştır. </i></p>\r\n<p><i>Not-2 : successurl ve errorurl alanlarına farklı değerler girebileceğiniz gibi aynı url adresini de girebilirsiniz. İşlemin başarılı/başarısız olduğunu d&ouml;nen cevaptaki parametreleri kontrol ederek rahatlıkla anlayabiliriz.</i></p>\r\n<h4>Hash Data Oluşturma :</h4>\r\n<p>3D-Secure &ouml;demeleri i&ccedil;in hash datayı şu şekilde hesaplayacağız;</p>\r\n<p>1) Bankanın 3D Saal Pos i&ccedil;in size tanımladığı şifre ve TerminalID bilgisini birleştirin. TermimalID 9 karakterden az ise başına 9 karaktere tamamlayana kadar 0 ekleyin. Sonra bu bilgiyi SHA1 algoritması ile hashleyip, sonucu b&uuml;y&uuml;k karakterlere &ccedil;evirin.</p>\r\n<pre class=\"language-csharp\"><code>var _sTerminalID=terminalID.PadLeft(9, \'0\');\r\nvar securityData = SHA1(password + _sTerminalID.PadLeft(9, \'0\')).ToUpperInvariant();</code></pre>\r\n<p>2) Bu adımda formu oluşturuken kullandığınız TerminalID (başında 0 olmadan), sipariş numarası (orderid), sipariş tutarı (txnamount), başarılı işlem adresi (successurl), başarısız işlem adresi (errorurl), &ouml;deme tipi (bkz txntype), taksit bilgisi (txninstallmentcount), bankadan aldığınız g&uuml;venlik anahtarı (StoreKey) ve 1. adımda oluşturduğunuz <b>securityData</b> hash bilgisini birleştirin ve tekrar SHA1 algoritması ile hashleyin.</p>\r\n<pre class=\"language-csharp\"><code>var hashString = terminalID + orderID + amount + successUrl + errorUrl + paymentType + installment + storeKey + securityData;\r\nvar hashData = GetSHA1(hashString).ToUpperInvariant();</code></pre>\r\n<p>Hesapladığınız bu değeri yukarda oluşturduğumuz formda yer alan {HASH_DATA} alanına yapıştırın.</p>\r\n<p><i>Not : StoreKey, 3D Secure işlemler i&ccedil;in kullanılan ve sanal pos y&ouml;netim ekranından oluşturduğunuz bir g&uuml;venlik anahtarıdır.</i></p>\r\n<h4>İsteğin Bankaya İletilmesi</h4>\r\n<p>Formu bankaya iletmeden &ouml;nce bu formun <b>action=\"{POST_URL}\"</b> kısmında form submit edildiğinde isteğin yapılacağı adresi yazacağız. 3D &ouml;deme işlemleri i&ccedil;in Garanti Bankası aşağıdaki adres/lere istek yapmanızı istiyor. {POST_URL} kısmına işlem tipimize g&ouml;re bu adreslerden uygun olanını yazacağız.</p>\r\n<pre><code>-- Test işlemleri i&ccedil;in\r\nhttps://sanalposprovtest.garanti.com.tr/servlet/gt3dengine\r\n\r\n-- Ger&ccedil;ek işlemler i&ccedil;in\r\nhttps://sanalposprov.garanti.com.tr/servlet/gt3dengine</code></pre>\r\n<p><i>Not : bu adresler makale yazıldığı zaman Garanti Bankasının Sanal Pos Entegrasyon d&ouml;kğmanlarında belirtilen adresler olup entegrasyon yapacağınız tarih adresiyle değişmiş olabilir. G&uuml;ncel bilgi i&ccedil;in d&ouml;k&uuml;manlara g&ouml;z atın.</i></p>\r\n<p>Artık formu bakaya post edebiliriz. Bunun i&ccedil;in ben formu kod tarafında oluşturduktan sonra ASP.NET MVC sitesinde ekrana basıyorum. Sonrasında da aşağıdaki gibi biraz JQuery yazarak formu submit ediyorum. Siz farklı şekillerde de aynı işlemi yapabilirsiniz.</p>\r\n<pre class=\"language-javascript\"><code>$(document).ready(function(){\r\n	$(\"#PaymentForm\").submit();\r\n});</code></pre>\r\n<h4>Bankanın &Ouml;deme S&uuml;recini Ger&ccedil;ekleştirmesi</h4>\r\n<p>Formu bankaya ilettiğiniz anda banka gerekli kontrolleri yapacak ve eksik, hatalı bilgi yoksa istek bankanın ortak &ouml;deme sayfasına y&ouml;nlendirilecektir. Ortak &ouml;deme sayfasında m&uuml;şteri &ouml;nce kart bilgilerini girer. Sonrasında banka g&uuml;venlik doğrulamasını yapar ve akabinde doğrulama başarılı ise karttan &ccedil;ekimi ger&ccedil;ekleştirir. Eğer ortak &ouml;deme sayfasında 3D-Secure y&ouml;ntemi se&ccedil;ilmişse banka m&uuml;şterinin sistemde tanımlı numarasına bir doğrulama kodu iletecek ve m&uuml;şteriden bu kodu girmesini talep edecektir.</p>\r\n<p>Eğer s&uuml;re&ccedil; başarıyla tamamlanır ve banka &ccedil;ekimi yaparsa m&uuml;şteriye işlem başarılı sonu&ccedil; ekranını g&ouml;sterecek ve sonrasında istek formunda belirttiğiniz <b>successurl</b> adresine işlem sonucunu d&ouml;necektir. Eğer kart bilgileri hatalıysa veya doğrulama adımı ya da para &ccedil;ekim işlemi başarısız olursa bu durumda istek formunda belirttiğiniz <b>errorurl</b> adresine başarısız işlem sonucunu d&ouml;nd&uuml;recektir.</p>\r\n<h4>Bankadan Gelen Cevabın İşlenmesi</h4>\r\n<p>Banka &ouml;deme s&uuml;receni tamamladıktan sonra işlem sonucu belirttiğiniz adrese d&ouml;nd&uuml;recektir. Gelen istekteki parametrelere bakarak &ouml;demenin başarılı olup olmadığını anlayabiliriz. İlk olarak gelen istekteki parametreleri ve değerlerini bir Dictionary objesine atalım;</p>\r\n<pre class=\"language-csharp\"><code>var bankResponse = Request.Form.Keys.Cast<string>().ToDictionary(key =&gt; key, key =&gt; Request.Form.Get(key));</string></code></pre>\r\n<p>Daha sonra bu objede yer alan <b>mdstatus</b> ve <b>procreturncode</b> değerlerine kontrol edeceğiz. Eğer procreturncode alanı \"00\" dan farklı bir değer gelmişse işlem başarısızdır. Ayrıca mdstatus değeri 1, 2, 3, 4 dışında bir değer gelmişse yine başarısızdır. Bu iki bilgiyi kullanarak &ouml;deme başarılı mı değil mi anlayabiliriz.</p>\r\n<pre class=\"language-csharp\"><code>var mdStatus = bankResponse.Value(\"mdstatus\").ToInt();\r\nvar procReturnCode = bankResponse.Value(\"procreturncode\");\r\n\r\nvar success=mdStatus &gt;= 1 &amp;&amp; mdStatus &lt;= 4 &amp;&amp; procReturnCode == \"00\";</code></pre>\r\n<p>Eğer işlem başarısız ise hata kodu ve hata mesajını <b>errmsg</b> ve <b>mderrormessage</b> alanlarından g&ouml;rebilirsiniz.</p>\r\n<pre class=\"language-csharp\"><code>var errorMsg = bankResponse.Value(\"errmsg\").;\r\nvar mdErrorMessage = bankResponse.Value(\"mderrormessage\");</code></pre>\r\n<p>Peki işlemin başarılı olduğuna sadece mdstatus ve procreturncode değerlerine karar verebilir miyiz? Teoride evet. Ancak pratikte Garanti Bankası d&ouml;nen cevabın ger&ccedil;ekten bankadan geldiğini ve fraud riski taşımadığını garantilemek adına hash kontrol&uuml; de yapılmasını istiyor. Bunun i&ccedil;in bankanın d&ouml;nd&uuml;ğ&uuml; cevapta yer alan <b>hash</b> değeri ile kendi tarafımızda hesapladığımız hash değerini karşılaştıracağız. Aşağıdaki &ouml;rnek kodda olduğu gibi bankadan d&ouml;nen parametrelerle hash değerini hesaplayıp <b>hash</b> ile kıyaslayacağız:</p>\r\n<pre class=\"language-csharp\"><code>//hash hesaplamada kullanılacak alanlar\r\nvar hashParams = bankResponse.Value(\"hashparams\");\r\n\r\nif (!string.IsNullOrEmpty(hashParams))\r\n{\r\n    var hash = bankResponse.Value(\"hash\");\r\n    var digestValue = string.Empty;\r\n    var paramList = hashParams.Split(\":\");\r\n\r\n    foreach (var param in paramList)\r\n    {\r\n        digestValue += bankResponse.Value(param);\r\n    }\r\n\r\n	//bankadan aldığımız g&uuml;venlik anahtarını ekliyoruz\r\n    digestValue += storeKey;\r\n	\r\n    var calculatedHash = SHA1(digestValue).ToUpperInvariant();\r\n    var success = mdStatus &gt;= 1 &amp;&amp; mdStatus &lt;= 4 &amp;&amp; procReturnCode == \"00\" &amp;&amp; hash == calculatedHash;\r\n}</code></pre>\r\n<h4>Ek Bilgiler</h4>\r\n<p>Bankadan d&ouml;nen cevapta yer alan <b>mdstatus</b> değeri ve anlamı;</p>\r\n<ul>\r\n<li>1 : Tam Doğrulama, &ouml;deme başarılı</li>\r\n<li>2 : Kart Sahibi veya bankası sisteme kayıtlı değil, &ouml;deme başarılı</li>\r\n<li>3 : Kartın bankası sisteme kayıtlı değil, &ouml;deme başarılı</li>\r\n<li>4 : Doğrulama denemesi, kart sahibi sisteme daha sonra kayıt olmayı se&ccedil;miş, &ouml;deme başarılı</li>\r\n<li>5 : Doğrulama yapılamıyor, &ouml;deme başarısız</li>\r\n<li>6 : 3D-Secure Hatası, &ouml;deme başarısız</li>\r\n<li>7 : Sistem Hatası, &ouml;deme başarısız</li>\r\n<li>8 : Bilinmeyen Kart No, &ouml;deme başarısız</li>\r\n<li>0 : Doğrulama Başarısız, 3-D Secure imzası ge&ccedil;ersiz, &ouml;deme başarısız</li>\r\n</ul>\r\n<hr />\r\n<p>Hash Data hesaplanırken kullandığım SHA1 şifreleme metodu;</p>\r\n<pre class=\"language-csharp\"><code>protected string GetSHA1(string data)\r\n{\r\n    SHA1 sha = new SHA1CryptoServiceProvider();\r\n    byte[] hashbytes = Encoding.GetEncoding(\"ISO-8859-9\").GetBytes(data);\r\n    byte[] inputbytes = sha.ComputeHash(hashbytes);\r\n    return GetHexaDecimal(inputbytes);\r\n}\r\n\r\nprivate string GetHexaDecimal(byte[] bytes)\r\n{\r\n    StringBuilder s = new StringBuilder();\r\n    int length = bytes.Length;\r\n    for (int n = 0; n &lt;= length - 1; n++)\r\n    {\r\n        s.Append(String.Format(\"{0,2:x}\", bytes[n]).Replace(\" \", \"0\"));\r\n    }\r\n    return s.ToString();\r\n}</code></pre>','Garanti Sanal Pos, Ortak Ödeme Sayfası, OOS_PAY, 3D_OOS_PAY','/res/img/entry/garanti_sanal_pos.jpg','2018-05-03 10:52:05','2018-05-03 10:53:28','5',1);
INSERT INTO `entry` (`ID`,`UserID`,`CategoryID`,`Name`,`Summary`,`Content`,`Keywords`,`ImageInfo`,`DateCreated`,`DateModified`,`SortOrder`,`Status`) VALUES (28,1,1,'Api Gateway','asdasdasd','<p>The API Creator is a web console that you use to specify your API, your logic, database location and your security settings.<br />The API Creator is an HTML5/JavaScript interface, so it runs in your browser. Your base tables are the REST resources,<br />supporting GET, POST, PUT, and DELETE.</p>\r\n<p>You can use the API Creator\'s point-and-click interface to define custom resources, providing an abstraction layer (for example,<br />choose/rename attributes) and joins for a nested document-model interface.<br /><br />CA Live API Creator can Integrate data from multiple sources including SQL, NoSQL, Salesforce and external APIs, including automatic<br />joins and foreign key creation across multiple databases and tables. You can correlate and expose different types of relevant<br />information from the same API, to bridge things like Oracle, SQL Server and MongoDB.<br /><br />The OAuth Toolkit supports the OAuth standards as well as JWT (JSON Web Token) bearer tokens and a range of extension grant types.<br />Optional HMAC or RSA signatures are supported for maximum interoperability. OpenID Connect is fully supported with the OAuth Toolkit,<br />including OpenID Certifications for Basic, Config, Implicit, and Hybrid profiles.</p>\r\n<p><br /><br />CA API Gateway<br />Hızlı bir şekilde rest tabanlı API oluşturan bir ara&ccedil;<br />API Creator yazılımı web aray&uuml;z&uuml; &uuml;zerinden NoSQL veya SQL veritabanlarını bağlayabiliyor ve <br />otomatik olarak bu tablolardan rest resource\'lar oluşturuluyor. Birden fazla veri tabanından veya veri kaynağıyla eş zamanlı &ccedil;alışabiliyor.<br />Bu noktada gelen datanın g&ouml;sterimi, sayfalama, filtreleme, sıralama, ilişkili verinin y&ouml;netimi<br />Data Explorer yazılımı sayesinde kolayca y&ouml;netilebiliyor.</p>\r\n<p>CA API Gateway OAuth Toolkit ile OAuth authorization entegre edilebiliyor.</p>\r\n<p>Javascript desteği ile kurallar, eventler tanımlanabiliyor b&ouml;ylece business logic detaylandırılabiliyor.</p>\r\n<p>Değerlendirme : Zaman kısıtından dolayı &ccedil;ok detaylı inceleme fırsatım olmadı. &Ouml;n değerlendirme olarak; k&uuml;&ccedil;&uuml;k işletmeler i&ccedil;in api<br />oluşturma s&uuml;recini &ccedil;ok kolaylaştıran, zaman olarak &ccedil;ok kısaltan bir yazılım. Ancak Ziraat Bankasının DB\'lerini dışarı a&ccedil;ma şansımız yok,<br />finansal s&uuml;re&ccedil;ler, m&uuml;şteri verisinin y&ouml;netimi, g&uuml;venlik gibi arka planda y&uuml;r&uuml;tt&uuml;ğ&uuml;m&uuml;z devasa s&uuml;re&ccedil;leri (business-logic) bu ara&ccedil; &uuml;zerinden<br />sadece javascript ile y&ouml;netmemiz zor. Eğer bu aracı kullanacaksak business-logic i&ccedil;in bizim ayrıca ara bir katman oluşturmamız gerekecek. <br />Bu durumda da aslında sadece g&uuml;venlik i&ccedil;in bu aracı kullanmış olacağız. G&uuml;venlik noktasında da &ccedil;eşitli se&ccedil;enekler sunulmuş, ayrı bir toolkit<br />ile OAuth desteği de sunuyor. Yarın ki toplantıdan sonra edindiğimiz izlenime g&ouml;re daha detalı inceleriz.<br /><br /><br />Great Product, But Missing Docker Support<br />IBM DataPower&reg; Gateway helps organizations meet the security <br />and integration needs of a digital business in a single multi-channel gateway. It provides security, control, integration and<br />optimized access to a full range of mobile, web, application programming interface (API), service-oriented architecture (SOA),<br />B2B and cloud workloads.<br /><br />IBM&reg; DataPower Gateway is a single multichannel gateway that helps provide security, control, integration and optimized access<br />to a full range of mobile, web, application programming interface (API), service-oriented architecture (SOA), B2B and cloud workloads.<br /><br />BM DataPower Gateway is available in physical, virtual, cloud, Linux, and Docker form factors.<br /><br />DataPower yazılım değil donanım &uuml;r&uuml;n&uuml;d&uuml;r.<br />İBM&rsquo;in hizmet odaklı cihaz b&ouml;l&uuml;m&uuml;n&uuml;n bir par&ccedil;ası olarak &ccedil;alışırlar ve genel ağ altyapısının kapasitesini genişleten g&ouml;revleri<br />yerine getirmek i&ccedil;in g&uuml;&ccedil;l&uuml; Linux işletim sistemlerini, &ouml;zel şifreli RAID s&uuml;r&uuml;c&uuml;lerini ve donanım mod&uuml;llerini kullanırlar.<br />Datapower cihazları, geleneksel rafa monte edilebilir cihaz paketlerinde veya dijital &uuml;retici yazılımı sistemlerinde sanal<br />cihazlar halinde mevcuttur.<br /><br />G&uuml;venlik, yerel alan ağı ve diğer g&uuml;venilir olmayan ağlar arasında bir bariyer g&ouml;revi g&ouml;ren tek girişli bir b&ouml;lgenin konuşlandırılması <br />yoluyla oluşturulur. Bu sayede, Datapower cihazları, mimarisini veya altyapısını dış saldırılara maruz bırakmadan bir ağın kabiliyetini<br />ger&ccedil;ekten genişletebilir.</p>\r\n<p>Client ve application arasında proxy g&ouml;revi g&ouml;r&uuml;yor.<br />G&uuml;venli bir kanal oluşturur, TLS, Authorization<br />Sadece API değil, web servis, rest tabanlı servisler, database desteği de var.<br /><br />DataPower&rsquo;ın m&uuml;şterilerimize verdiği en &ouml;nemli kolaylıklardan biri; uygulama geliştirerek edinilen g&uuml;venlik gereksinimlerini daha az kod yazıp, daha &ccedil;ok konfig&uuml;rasyon ekranları ile bu g&uuml;venlik gereksinimlerinin verilmesini sağlıyor. <br /><br />IBM API Connect<br />IBM API Connect is a market-leading API management solution that enables automated API creation, simple discovery of assets, self-service access for developers, and built-in security and governance.<br /><br />----------------------------------------------------------------------------------<br /><br /></p>\r\n<p>1) Hayatta konuşmaktan hoşlandığın şeyler, ilgilerin nelerdir?</p>\r\n<p>2) Seni en &ccedil;ok kimin takdir etmesi houşna gider ?<br />Bu soruya &ccedil;alıştığım iş yeri i&ccedil;in cevap vereyim : Y&ouml;neticimin ve ekip arkadaşlarımın<br />benim ekibe katkıda bulunduğumu d&uuml;ş&uuml;n&uuml;yor olduklarını bilmek hoşuma gider.</p>\r\n<p>4) Bug&uuml;ne kadar g&ouml;rd&uuml;ğ&uuml;n en etkileyici takdir neydi? <br />11-in cevabı</p>\r\n<p>6) Şimdiki işinde en &ccedil;ok neyi yapmaktan hoşlanıyorsun, en &ccedil;ok neyi yaparken zorlanıyorsun?<br />Bu sana bilgi beceri ve yeteneklerinle ilgili hangi ipu&ccedil;larını veriyor?<br />&Ouml;ncelikle finans sekt&ouml;r&uuml;nde deneyim kazanmak, b&uuml;y&uuml;k bir ekipte b&uuml;y&uuml;k projelerde yer almak g&uuml;zel bir duygu.<br />İşe yeni başlamama rağmen &ccedil;ok kısa s&uuml;rede bir&ccedil;ok etkinlik, konferans ve toplantıya katılma fırsatı buldum.<br />Buarada &ccedil;alıştığım s&uuml;re boyunca bir&ccedil;ok farklı g&ouml;rev aldım ve bu ekibe daha adapte olmamı kolaylaştırdı.<br />Bunlar bir &ccedil;alışan i&ccedil;in motive kaynağı.</p>\r\n<p>Bunun haricinde ise işe yeni başladım, bir&ccedil;ok s&uuml;rece hen&uuml;z tam anlamıyla hakim değilim. Zamanla s&uuml;re&ccedil;leri<br />tanıdık&ccedil;a, bu s&uuml;re&ccedil;lerde g&ouml;rev aldık&ccedil;a ekibe daha &ccedil;ok katkıda bulunabileceğimi d&uuml;ş&uuml;n&uuml;yorum. <br />Bu noktada ise sizden alacağım geri bildirimler yolumu aydınlatacaktır.</p>\r\n<p>8) Bunun haricinde ekibe yeni katılan ve dışarıdan bakan bir g&ouml;z olarak hedefim yazılım s&uuml;re&ccedil;lerimizde bizi yavaşlatan<br />etkenleri tespit etmek, kullandığımız yazılım teknolojilerini daha g&uuml;ncel teknolojilere y&uuml;kseltmek i&ccedil;in aktif rol almak.</p>\r\n<p>10) Bu soruya iyi bir insan olacağım, iyi bir aile babası olacağım. İyi bir sanatsever olacağım gibi bir&ccedil;ok cevap verilebilir.<br />Kendi adıma işimle mesleğimle ilgili yorum yapayım. Ben yazılım mesleğini fultbola benzetiyorum ve belirli bir yaştan sonra nasıl ki futbolda<br />j&uuml;bile yapıp kariyerinize ko&ccedil;, teknik direkt&ouml;r olarak devam etmek m&uuml;mk&uuml;nse, bizim meslekte de 50 yaşına gelip hala yazılımcı olarak kalmak pek m&uuml;mk&uuml;n olmuyor.<br />Bu y&uuml;zden de ya kendi işimi kuracağım veya ilerde iyi bir teknik direkt&ouml;r olana kadar &ouml;nce iyi bir yazılımcı, sonra iyi bir takım lideri,<br />sonra iyi bir yazılım mimarı olarak b&uuml;y&uuml;k projelere y&ouml;n verebilmek; ger&ccedil;ekleştirmeye &ccedil;alıştığım hayallerim arasında :)</p>\r\n<p>12) Şimdiye kadar seni en &ccedil;ok motive eden iş/durum/olay neydi?<br />Beni motive eden şeyi hatırlamıyorum ama lisede hazırlık sınıfında okurkan ve &Ouml;SS (şimdi YGS) sınavına daha 4 yıl varken, &uuml;stelik arkadaşlarım<br />internet kafelerde oyun oynarken, sinemaya giderken ben oturup &Ouml;SS sınavına &ccedil;alışmayı tercih ediyordum.</p>\r\n<p>İş hayatımla ilgili &ouml;rnek verecek olursam eski iş yerimde 25-30 arası planlanmış g&ouml;revin her biri i&ccedil;in ayrı bir solution altında kod yazılmıştı<br />ve bu planlanmış g&ouml;revler ayrı bir WCF servis &uuml;zerinden belirli zamanlarda tetikleniyordu. Yeni bir tane yazma ihtiyacı olduğunda da sıfırdan t&uuml;m<br />mimari katmanlar (business, data) yazılıyordu. B&uuml;t&uuml;n solution\'ları sildim ve tek bir web projesi altında t&uuml;m g&ouml;revleri birleştirip ortak bir business<br />ve data katmanı &ccedil;aıtısı kurdum. G&uuml;zel bir web aray&uuml;z&uuml; ile de &ccedil;ok daha kolay y&ouml;netilebilir, genişletilebilir bir yapı kurmuştuk. Bu t&uuml;r &ccedil;&ouml;z&uuml;mler geliştirerek <br />iş yerime katkıda bulunmak benimde motivasyonumu arttırmıştı. Buarası i&ccedil;in de t&uuml;m finart ekranlarını ve finart objelerini tek projede toplamak gibi &ccedil;ılgın projelerim var :)</p>\r\n<p>15) Nilaccra Bilişim\'den patronumuz Serb&uuml;lent Sertoğlu ve yazılım mimarı Osman Gen&ccedil;oğlan\'ı &ouml;rnek verebilirm. Bana katkılarını ise Martin Fowler\'in<br />bir s&ouml;z&uuml;yle &ouml;zetleyeyim &ldquo;Any fool can write code that a computer can understand. Good programmers write code that humans can understand.&rdquo;.</p>\r\n<p>Yenibiris.com firmasından ise yazılım mimarımız İrfan Karakaş\'ı &ouml;rnek verebilirim. Kendisi bir yandan bize yazılım d&uuml;nyasında son teknolojileri takip etme,<br />&ouml;ğrenme ve uygulama alışkanlığını kazandırırken diğer yandan da sadece kod yazmayı değil mimari olarak d&uuml;zg&uuml;n kod yazmayı &ouml;ğretti diyebilirim.<br />Belkide bu sayede kadrosu 30 kişiye kadar d&uuml;şen (yazılımcı sayısı 3) Yenibiris.com, kadrosu 300 kişiyi bulan Kariyer.net\'e rakip olarak kalmayı başarabildi.</p>\r\n<p>18) &Ouml;ğrencilik hayatım boyunca &ouml;ğretmenlerimle diyaloğum daha &ccedil;ok ders boyutunda kaldı ???</p>\r\n<p>19)</p>',NULL,NULL,'2018-07-02 14:58:10','2018-07-05 13:50:42',NULL,5);
